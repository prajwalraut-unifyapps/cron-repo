{
	"appsUsed":[
		
	],
	"createdTime":1751987503896,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1752556352828,
		"deployedBy":51337,
		"deployedDefinitionId":"6875e33ed7c35500d53432a5",
		"status":"DEPLOYED",
		"version":28,
		"workflowVersion":48
	},
	"edges":[
		{
			"fromNodeId":"n_nPQFy",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZMiP7",
			"type":"next"
		},
		{
			"fromNodeId":"n_ZMiP7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_0T7GG",
			"type":"next"
		},
		{
			"fromNodeId":"n_0T7GG",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_B9ALI",
			"type":"if"
		},
		{
			"fromNodeId":"n_B9ALI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vKUUr",
			"type":"next"
		},
		{
			"fromNodeId":"n_vKUUr",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cqO0T",
			"type":"if"
		},
		{
			"fromNodeId":"n_vKUUr",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_zf2jU",
			"type":"next"
		},
		{
			"fromNodeId":"n_0T7GG",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_CGYTv",
			"type":"next"
		},
		{
			"fromNodeId":"_CGYTv",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_lRtcl",
			"type":"if"
		},
		{
			"fromNodeId":"_CGYTv",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_sB6Ce",
			"type":"next"
		},
		{
			"fromNodeId":"n_cqO0T",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OZcwx",
			"type":"next"
		},
		{
			"fromNodeId":"_zf2jU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OZcwx",
			"type":"next"
		},
		{
			"fromNodeId":"_lRtcl",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OZcwx",
			"type":"next"
		},
		{
			"fromNodeId":"_sB6Ce",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OZcwx",
			"type":"next"
		}
	],
	"id":"686d352f60366b44cfdfa362",
	"lastModifiedBy":37040,
	"lcName":"do not touch",
	"modifiedTime":1760692631418,
	"name":"DO NOT TOUCH",
	"nodes":[
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"callables",
				"resourceVersion":786,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_0aotl-1",
			"id":"n_nPQFy",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"result":{
							"type":"string",
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"properties":{
							"type":"object",
							"properties":{
								"summary":{
									"type":"string",
									"title":"summary"
								},
								"allDay":{
									"type":"boolean",
									"title":"allDay"
								},
								"start":{
									"type":"object",
									"properties":{
										"dateTime":{
											"type":"integer",
											"title":"dateTime"
										}
									},
									"title":"start",
									"additionalProperties":false
								},
								"recurringConfig":{
									"type":"object",
									"properties":{
										"recurrence":{
											"type":"string",
											"title":"recurrence"
										}
									},
									"title":"recurringConfig",
									"additionalProperties":false
								},
								"excludedOccurrences":{
									"type":"array",
									"title":"excludedOccurrences"
								},
								"end":{
									"type":"object",
									"properties":{
										"dateTime":{
											"type":"integer",
											"title":"dateTime"
										}
									},
									"title":"end",
									"additionalProperties":false
								},
								"originalStartTime":{
									"type":"number",
									"title":"originalStartTime"
								},
								"parentEventId":{
									"type":"string",
									"title":"parentEventId"
								},
								"eventId":{
									"type":"string",
									"title":"Event Id"
								},
								"userIds":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"User Ids"
								}
							},
							"title":"properties",
							"additionalProperties":false,
							"required":[]
						},
						"updateType":{
							"type":"string",
							"title":"Update Type"
						},
						"repeatArray":{
							"type":"object",
							"properties":{
								"ends":{
									"type":"string",
									"title":"ends"
								},
								"endsOnDate":{
									"type":"string",
									"title":"endsOnDate"
								},
								"every":{
									"type":"integer",
									"title":"every"
								},
								"repeatsOn":{
									"type":"array",
									"title":"repeatsOn"
								},
								"wmd":{
									"type":"string",
									"title":"wmd"
								},
								"occurences":{
									"type":"number",
									"title":"Occurences"
								}
							},
							"additionalProperties":false,
							"required":[
								"occurences"
							]
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_0aotl-1",
			"id":"n_ZMiP7",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"dewdew":{
							"type":"string",
							"title":"Dewdew"
						}
					},
					"required":[
						"dewdew"
					]
				}
			},
			"inputs":{
				"dewdew":"{{ n_nPQFy.outputs.properties.originalStartTime }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"dewdew":{
							"type":"string",
							"title":"Dewdew"
						}
					},
					"required":[
						"dewdew"
					]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":15,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_0aotl-1",
			"id":"n_0T7GG",
			"index":3,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_nPQFy.outputs.repeatArray }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.repeatArray.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_0T7GG@_0aotl-1@y",
			"id":"n_B9ALI",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"string",
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.time.LocalDate\nimport java.time.format.DateTimeFormatter\nimport java.time.ZonedDateTime\n\n// Define the main function\ndef generateRecurrenceFormula(recurrenceObj) {\n    def formula = buildRecurrenceFormula(recurrenceObj)\n    \n    return formula  // Return just the formula string\n}\n\ndef buildRecurrenceFormula(recurrenceObj) {\n    // Handle your custom field names\n    def pattern = recurrenceObj.pattern?.toLowerCase() ?: recurrenceObj.wmd?.toLowerCase() ?: \"\"\n    def frequency = recurrenceObj.frequency ?: recurrenceObj.every ?: 1\n    def interval = recurrenceObj.interval?.toLowerCase() ?: \"\"\n    def daysOfWeek = recurrenceObj.daysOfWeek ?: recurrenceObj.repeatsOn ?: []\n    def endDate = recurrenceObj.endDate ?: recurrenceObj.endsOnDate  // Added endsOnDate handling\n    def occurrences = recurrenceObj.occurrences ?: recurrenceObj.afteroccurences\n    def startDate = recurrenceObj.startDate ?: LocalDate.now().toString()\n    \n    // Special handling: if we have days specified or wmd is weekly, ensure pattern is weekly\n    if ((daysOfWeek && !daysOfWeek.empty) || pattern == \"weekly\") {\n        pattern = \"weekly\"\n    }\n\n    def formula = \"\"\n\n    switch (pattern) {\n        case \"never\":\n            return \"NO_RECURRENCE\"\n        case \"daily\":\n            formula += \"FREQ=DAILY\"\n            if (frequency > 1) {\n                formula += \";INTERVAL=${frequency}\"\n            }\n            break\n        case \"weekly\":\n        case \"custom_weekly\":\n            formula += \"FREQ=WEEKLY\"\n            if (frequency > 1) {\n                formula += \";INTERVAL=${frequency}\"\n            }\n            if (daysOfWeek && !daysOfWeek.empty) {\n                def days = daysOfWeek.collect { day -> convertDayToRRule(day) }.join(',')\n                formula += \";BYDAY=${days}\"\n            }\n            break\n        case \"monthly\":\n            formula += \"FREQ=MONTHLY\"\n            if (frequency > 1) {\n                formula += \";INTERVAL=${frequency}\"\n            }\n            break\n        case \"yearly\":\n            formula += \"FREQ=YEARLY\"\n            if (frequency > 1) {\n                formula += \";INTERVAL=${frequency}\"\n            }\n            break\n        default:\n            if (interval.contains(\"week\")) {\n                formula += \"FREQ=WEEKLY\"\n                def weekInterval = extractNumber(interval) ?: frequency\n                if (weekInterval > 1) {\n                    formula += \";INTERVAL=${weekInterval}\"\n                }\n            } else if (interval.contains(\"day\")) {\n                formula += \"FREQ=DAILY\"\n                def dayInterval = extractNumber(interval) ?: frequency\n                if (dayInterval > 1) {\n                    formula += \";INTERVAL=${dayInterval}\"\n                }\n            } else {\n                formula += \"FREQ=WEEKLY\"\n                if (frequency > 1) {\n                    formula += \";INTERVAL=${frequency}\"\n                }\n            }\n    }\n\n    // Handle end conditions - check occurrences first, then end date\n    if (occurrences && occurrences > 0) {\n        formula += \";COUNT=${occurrences}\"\n    } else if (endDate) {\n        def formattedEndDate = formatDateForRRule(endDate)\n        if (formattedEndDate) {\n            formula += \";UNTIL=${formattedEndDate}\"\n        }\n    }\n\n    return formula\n}\n\ndef convertDayToRRule(dayName) {\n    def day = dayName?.toString()?.toLowerCase()\n    switch (day) {\n        case [\"monday\", \"mon\", \"mo\"]: return \"MO\"\n        case [\"tuesday\", \"tue\", \"tu\"]: return \"TU\"\n        case [\"wednesday\", \"wed\", \"we\"]: return \"WE\"\n        case [\"thursday\", \"thu\", \"th\"]: return \"TH\"\n        case [\"friday\", \"fri\", \"fr\"]: return \"FR\"\n        case [\"saturday\", \"sat\", \"sa\"]: return \"SA\"\n        case [\"sunday\", \"sun\", \"su\"]: return \"SU\"\n        default: return day?.toUpperCase()\n    }\n}\n\ndef extractNumber(text) {\n    def matcher = text =~ /(\\d+)/\n    return matcher ? Integer.parseInt(matcher[0][1]) : null\n}\n\ndef formatDateForRRule(dateStr) {\n    try {\n        LocalDate parsedDate = null\n        \n        if (dateStr instanceof String) {\n            // Handle ISO 8601 format with timezone\n            // Check for 'T' and any timezone indicator (Z, +, or -)\n            if (dateStr.contains('T')) {\n                // Check if it has timezone information\n                def hasTimezone = dateStr.endsWith('Z') || \n                                 dateStr.contains('+') || \n                                 dateStr.contains('-')\n                \n                if (hasTimezone) {\n                    try {\n                        def zonedDateTime = ZonedDateTime.parse(dateStr)\n                        parsedDate = zonedDateTime.toLocalDate()\n                    } catch (Exception e) {\n                        // If ZonedDateTime parsing fails, try other approaches\n                    }\n                }\n                \n                // Try parsing as LocalDateTime if no timezone\n                if (parsedDate == null) {\n                    try {\n                        // Extract just the date part before T\n                        def datePart = dateStr.split('T')[0]\n                        parsedDate = LocalDate.parse(datePart)\n                    } catch (Exception ignored) {}\n                }\n            }\n            \n            // Then try other common formats\n            if (parsedDate == null) {\n                def formats = [\n                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),\n                    DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"),\n                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),\n                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")\n                ]\n                for (formatter in formats) {\n                    try {\n                        parsedDate = LocalDate.parse(dateStr.split(' ')[0], formatter)\n                        break\n                    } catch (Exception ignored) {}\n                }\n            }\n        }\n        \n        // If we successfully parsed a date, add one day and format it\n        if (parsedDate != null) {\n            def nextDay = parsedDate.plusDays(1)\n            return nextDay.format(DateTimeFormatter.ofPattern(\"yyyyMMdd\"))\n        }\n        \n    } catch (Exception e) {\n        // Log error if needed\n        println \"Error parsing date: ${e.message}\"\n    }\n    return null\n}\n\n// Call function with your input\ndef output = generateRecurrenceFormula(input)\n\n// Return just the recurrence formula\nreturn output",
				"parameters":{
					"input":"{{ n_nPQFy.outputs.repeatArray }}"
				}
			},
			"skip":false,
			"subTitle":"Code",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_0T7GG@_0aotl-1@y",
			"id":"n_vKUUr",
			"index":5,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_nPQFy.outputs.updateType }}",
						"filter":{
							"operator":"EQUAL",
							"value":"following"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.userIds.items",
					"root.record.userGroupIds.items",
					"root.record.recurringConfig.recurrence",
					"root.record.start.date",
					"root.record.start.dateTime",
					"root.record.end.date",
					"root.record.end.dateTime",
					"root.record.excludedOccurrences.items"
				]
			},
			"context":{
				"appName":"calendar_by_unifyapps",
				"resourceVersion":14,
				"resourceName":"calendar_by_unifyapps_update_event",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vKUUr@n_0T7GG@_0aotl-1@y@y",
			"id":"n_cqO0T",
			"index":6,
			"inputs":{
				"record":{
					"allDay":"{{ n_nPQFy.outputs.properties.allDay }}",
					"sendGoogleEvent":false,
					"addToSession":false,
					"summary":"{{ n_nPQFy.outputs.properties.summary }}",
					"start":{
						"dateTime":"{{ n_nPQFy.outputs.properties.start.dateTime }}"
					},
					"end":{
						"dateTime":"{{ n_nPQFy.outputs.properties.end.dateTime }}"
					},
					"recurringConfig":{
						"recurrence":"{{ n_B9ALI.outputs.result }}"
					},
					"parentEventId":"{{ n_nPQFy.outputs.properties.parentEventId }}",
					"originalStartTime":"{{ n_nPQFy.outputs.properties.originalStartTime }}",
					"userIds":{
						"source":"{{ n_nPQFy.outputs.properties.userIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.userIds[0] }}"
					},
					"excludedOccurrences":{
						"source":"{{ n_nPQFy.outputs.properties.excludedOccurrences }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.excludedOccurrences[0] }}"
					}
				},
				"id":"{{ n_nPQFy.outputs.properties.eventId }}",
				"updateType":"following"
			},
			"skip":false,
			"subTitle":"Calendar by UnifyApps",
			"title":"Update event",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.userIds.items",
					"root.record.userGroupIds.items",
					"root.record.recurringConfig.recurrence",
					"root.record.start.date",
					"root.record.start.dateTime",
					"root.record.end.date",
					"root.record.end.dateTime",
					"root.record.excludedOccurrences.items"
				]
			},
			"context":{
				"appName":"calendar_by_unifyapps",
				"resourceVersion":136,
				"resourceName":"calendar_by_unifyapps_update_event",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vKUUr@n_0T7GG@_0aotl-1@y@n",
			"id":"_zf2jU",
			"index":7,
			"inputs":{
				"record":{
					"allDay":"{{ n_nPQFy.outputs.properties.allDay }}",
					"sendGoogleEvent":false,
					"addToSession":false,
					"summary":"{{ n_nPQFy.outputs.properties.summary }}",
					"recurringConfig":{
						"recurrence":"{{ n_B9ALI.outputs.result }}"
					},
					"parentEventId":"{{ n_nPQFy.outputs.properties.parentEventId }}",
					"start":{
						"dateTime":"{{ n_nPQFy.outputs.properties.start.dateTime }}"
					},
					"end":{
						"dateTime":"{{ n_nPQFy.outputs.properties.end.dateTime }}"
					},
					"originalStartTime":"{{ n_nPQFy.outputs.properties.originalStartTime }}",
					"userIds":{
						"source":"{{ n_nPQFy.outputs.properties.userIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.userIds[0] }}"
					},
					"excludedOccurrences":{
						"source":"{{ n_nPQFy.outputs.properties.excludedOccurrences }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.excludedOccurrences[0] }}"
					}
				},
				"id":"{{ n_nPQFy.outputs.properties.eventId }}",
				"updateType":"{{ n_nPQFy.outputs.updateType }}"
			},
			"skip":false,
			"subTitle":"Calendar by UnifyApps",
			"title":"Update event",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_0T7GG@_0aotl-1@n",
			"id":"_CGYTv",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_nPQFy.outputs.updateType }}",
						"filter":{
							"operator":"EQUAL",
							"value":"following"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.userIds.items",
					"root.record.userGroupIds.items",
					"root.record.recurringConfig.recurrence",
					"root.record.start.date",
					"root.record.start.dateTime",
					"root.record.end.date",
					"root.record.end.dateTime",
					"root.record.excludedOccurrences.items"
				]
			},
			"context":{
				"appName":"calendar_by_unifyapps",
				"resourceVersion":14,
				"resourceName":"calendar_by_unifyapps_update_event",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_CGYTv@n_0T7GG@_0aotl-1@n@y",
			"id":"_lRtcl",
			"index":9,
			"inputs":{
				"record":{
					"allDay":"{{ n_nPQFy.outputs.properties.allDay }}",
					"sendGoogleEvent":false,
					"addToSession":false,
					"summary":"{{ n_nPQFy.outputs.properties.summary }}",
					"start":{
						"dateTime":"{{ n_nPQFy.outputs.properties.start.dateTime }}"
					},
					"end":{
						"dateTime":"{{ n_nPQFy.outputs.properties.end.dateTime }}"
					},
					"recurringConfig":{
						"recurrence":"{{ n_nPQFy.outputs.properties.recurringConfig.recurrence }}"
					},
					"parentEventId":"{{ n_nPQFy.outputs.properties.parentEventId }}",
					"originalStartTime":"{{ n_nPQFy.outputs.properties.originalStartTime }}",
					"userIds":{
						"source":"{{ n_nPQFy.outputs.properties.userIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.userIds[0] }}"
					},
					"excludedOccurrences":{
						"source":"{{ n_nPQFy.outputs.properties.excludedOccurrences }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.excludedOccurrences[0] }}"
					}
				},
				"id":"{{ n_nPQFy.outputs.properties.eventId }}",
				"updateType":"following"
			},
			"skip":false,
			"subTitle":"Calendar by UnifyApps",
			"title":"Update event",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.userIds.items",
					"root.record.userGroupIds.items",
					"root.record.recurringConfig.recurrence",
					"root.record.start.date",
					"root.record.start.dateTime",
					"root.record.end.date",
					"root.record.end.dateTime",
					"root.record.excludedOccurrences.items"
				]
			},
			"context":{
				"appName":"calendar_by_unifyapps",
				"resourceVersion":136,
				"resourceName":"calendar_by_unifyapps_update_event",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_CGYTv@n_0T7GG@_0aotl-1@n@n",
			"id":"_sB6Ce",
			"index":10,
			"inputs":{
				"record":{
					"allDay":"{{ n_nPQFy.outputs.properties.allDay }}",
					"sendGoogleEvent":false,
					"addToSession":false,
					"summary":"{{ n_nPQFy.outputs.properties.summary }}",
					"recurringConfig":{
						"recurrence":"{{ n_nPQFy.outputs.properties.recurringConfig.recurrence }}"
					},
					"parentEventId":"{{ n_nPQFy.outputs.properties.parentEventId }}",
					"start":{
						"dateTime":"{{ n_nPQFy.outputs.properties.start.dateTime }}"
					},
					"end":{
						"dateTime":"{{ n_nPQFy.outputs.properties.end.dateTime }}"
					},
					"originalStartTime":"{{ n_nPQFy.outputs.properties.originalStartTime }}",
					"userIds":{
						"source":"{{ n_nPQFy.outputs.properties.userIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.userIds[0] }}"
					},
					"excludedOccurrences":{
						"source":"{{ n_nPQFy.outputs.properties.excludedOccurrences }}",
						"ua:type":"mappedArray",
						"items":"{{ n_nPQFy.outputs.properties.excludedOccurrences[0] }}"
					}
				},
				"id":"{{ n_nPQFy.outputs.properties.eventId }}",
				"updateType":"{{ n_nPQFy.outputs.updateType }}"
			},
			"skip":false,
			"subTitle":"Calendar by UnifyApps",
			"title":"Update event",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":797,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_0aotl-1",
			"id":"n_OZcwx",
			"index":11,
			"inputs":{
				"result":{
					"result":"success"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":51337,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":51
}