{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1760214063538,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760637391604,
		"deployedBy":1,
		"deployedDefinitionId":"68f131cf6ab2437612e6adaf",
		"status":"DEPLOYED",
		"version":10,
		"workflowVersion":21
	},
	"edges":[
		{
			"fromNodeId":"_hamy3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3nEyg",
			"type":"next"
		},
		{
			"fromNodeId":"n_3nEyg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_3TIGm",
			"type":"next"
		},
		{
			"fromNodeId":"n_3TIGm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WSdIJ",
			"type":"next"
		},
		{
			"fromNodeId":"n_WSdIJ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_mV80v",
			"type":"if"
		},
		{
			"fromNodeId":"n_mV80v",
			"priority":0,
			"skip":false,
			"toNodeId":"_PZPS1",
			"type":"next"
		},
		{
			"fromNodeId":"n_WSdIJ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_PZPS1",
			"type":"next"
		},
		{
			"fromNodeId":"_PZPS1",
			"priority":0,
			"skip":false,
			"toNodeId":"_JlrIn",
			"type":"next"
		},
		{
			"fromNodeId":"_JlrIn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vCiXD",
			"type":"next"
		},
		{
			"fromNodeId":"n_vCiXD",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"jAfNa",
			"type":"if"
		},
		{
			"fromNodeId":"jAfNa",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"KPDQh",
			"type":"error"
		},
		{
			"fromNodeId":"jAfNa",
			"priority":0,
			"skip":false,
			"toNodeId":"_k4aOr",
			"type":"next"
		},
		{
			"fromNodeId":"KPDQh",
			"priority":0,
			"skip":false,
			"toNodeId":"_k4aOr",
			"type":"next"
		},
		{
			"fromNodeId":"_k4aOr",
			"priority":0,
			"skip":false,
			"toNodeId":"_cN0lP",
			"type":"next"
		},
		{
			"fromNodeId":"n_vCiXD",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_84n8g",
			"type":"next"
		},
		{
			"fromNodeId":"_84n8g",
			"priority":0,
			"skip":false,
			"toNodeId":"n_mZyH7",
			"type":"next"
		},
		{
			"fromNodeId":"n_mZyH7",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qFHsu",
			"type":"if"
		},
		{
			"fromNodeId":"n_qFHsu",
			"priority":0,
			"skip":false,
			"toNodeId":"_2lRBl",
			"type":"next"
		},
		{
			"fromNodeId":"_2lRBl",
			"priority":0,
			"skip":false,
			"toNodeId":"_Az0Hg",
			"type":"next"
		},
		{
			"fromNodeId":"n_mZyH7",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_otsRd",
			"type":"next"
		},
		{
			"fromNodeId":"n_otsRd",
			"priority":0,
			"skip":false,
			"toNodeId":"_nGyQ6",
			"type":"next"
		},
		{
			"fromNodeId":"_nGyQ6",
			"priority":0,
			"skip":false,
			"toNodeId":"_86BaS",
			"type":"next"
		},
		{
			"fromNodeId":"_cN0lP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lNhlW",
			"type":"next"
		},
		{
			"fromNodeId":"_Az0Hg",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lNhlW",
			"type":"next"
		},
		{
			"fromNodeId":"_86BaS",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lNhlW",
			"type":"next"
		},
		{
			"fromNodeId":"n_lNhlW",
			"priority":0,
			"skip":false,
			"toNodeId":"n_yfjkI",
			"type":"next"
		},
		{
			"fromNodeId":"n_yfjkI",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_s85yT",
			"type":"if"
		},
		{
			"fromNodeId":"n_yfjkI",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_WKBTn",
			"type":"next"
		},
		{
			"fromNodeId":"n_s85yT",
			"priority":0,
			"skip":false,
			"toNodeId":"_Oriex",
			"type":"next"
		},
		{
			"fromNodeId":"_WKBTn",
			"priority":0,
			"skip":false,
			"toNodeId":"_Oriex",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"VIEW_RUNS",
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68ea4817a66c557e757622af",
	"lastModifiedBy":1,
	"lcName":"[dt] index knowledge helper",
	"modifiedTime":1760703240085,
	"name":"[DT] Index Knowledge Helper",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"_hamy3",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"document":{
							"type":"object",
							"properties":{
								"id":{
									"type":"string",
									"title":"id"
								},
								"body":{
									"type":"object",
									"properties":{
										"binaryContent":{
											"type":"string",
											"title":"binaryContent"
										},
										"mimeType":{
											"type":"string",
											"title":"mimeType"
										},
										"textContent":{
											"type":"string",
											"title":"textContent"
										}
									},
									"title":"body",
									"additionalProperties":false,
									"required":[]
								},
								"datasource":{
									"type":"string",
									"title":"datasource"
								},
								"filename":{
									"type":"string",
									"title":"filename"
								},
								"objectType":{
									"type":"string",
									"title":"objectType"
								},
								"title":{
									"type":"string",
									"title":"title"
								},
								"viewURL":{
									"type":"string",
									"title":"viewURL"
								},
								"createdAt":{
									"type":"integer",
									"title":"Created At"
								},
								"updatedAt":{
									"type":"integer",
									"title":"Updated At"
								}
							},
							"title":"document",
							"additionalProperties":false,
							"required":[]
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_3nEyg",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File"
						},
						"name":{
							"type":"string",
							"title":"Name"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File"
						},
						"name":{
							"type":"string",
							"title":"Name"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_3TIGm",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"binaryContent":{
							"type":"string",
							"title":"Binary Content"
						},
						"datasource":{
							"type":"string",
							"title":"Datasource"
						},
						"viewURL":{
							"type":"string",
							"title":"View URL"
						},
						"textContent":{
							"type":"string",
							"title":"Text Content"
						}
					}
				},
				"code":"if(!binding.hasVariable('datasource')){\n  return[\n    allowed : false\n  ]\n}\n\ndef hasContent = (binding.hasVariable('binaryContent') && binaryContent != \"\") ||\n                 (binding.hasVariable('viewURL') && viewURL != \"\") ||\n                 (binding.hasVariable('textContent') && textContent != \"\")\n\nif (!hasContent) {\n    return [\n        allowed: false\n    ]\n}\n\nreturn [\n    allowed: true\n]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"binaryContent":"{{ _hamy3.outputs.document.body.binaryContent }}",
					"datasource":"{{ _hamy3.outputs.document.datasource }}",
					"viewURL":"{{ _hamy3.outputs.document.viewURL }}",
					"textContent":"{{ _hamy3.outputs.document.body.textContent }}"
				}
			},
			"skip":false,
			"subTitle":"allowed?",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_WSdIJ",
			"index":4,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_3TIGm.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"false"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Not Allowed?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":583,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_WSdIJ@_5NVxH-1@y",
			"id":"n_mV80v",
			"index":5,
			"inputs":{
				"result":{
					"success":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"_PZPS1",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"name":{
							"type":"string",
							"title":"Name"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"filename":{
							"type":"string",
							"title":"Filename"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					}
				},
				"code":"return [\"name\" : (binding.hasVariable('title') && title != \"\") ? title : (binding.hasVariable('filename') ? filename : \"\")]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"filename":"{{ _hamy3.outputs.document.filename }}",
					"title":"{{ _hamy3.outputs.document.title }}"
				}
			},
			"skip":false,
			"subTitle":"get Name",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"_JlrIn",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"viewURL":{
							"type":"string",
							"title":"View URL"
						}
					}
				},
				"code":"def allowed = (binding.hasVariable('viewURL') && viewURL != \"\")\nreturn [\"allowed\" : allowed]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"viewURL":"{{ _hamy3.outputs.document.viewURL }}"
				}
			},
			"skip":false,
			"subTitle":"viewURL?",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":447,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_vCiXD",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"{{ _JlrIn.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":349,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"n_vCiXD@_5NVxH-1@y",
			"id":"jAfNa",
			"index":9,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"fileExtension":{
							"type":"string",
							"title":"File Extension"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					}
				},
				"configurationMode":"DEFAULT",
				"code":"import requests\nimport zipfile\nfrom io import BytesIO\nimport magic\nimport os\n\n# Mapping from code type to text/* mimetype\nCODE_TYPE_TO_MIMETYPE = {\n    'CPP': 'text/x-c++src',\n    'GO': 'text/x-go',\n    'JAVA': 'text/x-java-source',\n    'KOTLIN': 'text/x-kotlin',\n    'JS': 'text/javascript',\n    'TS': 'text/typescript',\n    'PHP': 'text/x-php',\n    'PROTO': 'text/x-proto',\n    'PYTHON': 'text/x-python',\n    'RST': 'text/x-rst',\n    'RUBY': 'text/x-ruby',\n    'RUST': 'text/x-rustsrc',\n    'SCALA': 'text/x-scala',\n    'SWIFT': 'text/x-swift',\n    'MARKDOWN': 'text/markdown',\n    'LATEX': 'text/x-latex',\n    'HTML': 'text/html',\n    'SOL': 'text/x-solidity',\n    'CSHARP': 'text/x-csharp',\n    'COBOL': 'text/x-cobol',\n    'C': 'text/x-csrc',\n    'LUA': 'text/x-lua',\n    'HASKELL': 'text/x-haskell',\n    'SAV': 'application/x-spss-sav',\n    'XML': 'application/xml',\n    \"SQL\": 'text/sql',\n    'VBS': 'text/vbscript',\n    \"PROGRESS\": \"text/x-progress\",\n    \"CSV\": \"text/csv\" \n}\n\n# Mapping MIME type → extension\nMIMETYPE_TO_EXTENSION = {\n    'application/pdf': '.pdf',\n    'application/zip': '.zip',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',\n    'video/mp4': '.mp4',\n    'text/html': '.html',\n    'text/x-python': '.py',\n    'text/x-c++src': '.cpp',\n    'text/x-csrc': '.c',\n    'text/x-java-source': '.java',\n    'text/javascript': '.js',\n    'text/typescript': '.ts',\n    'text/x-kotlin': '.kt',\n    'text/markdown': '.md',\n    'text/x-latex': '.tex',\n    'text/x-sql': '.sql',\n    'text/plain': '.txt',\n    'text/csv': '.csv', \n}\n\ndef detect_code_type(filename):\n    EXTENSION_TO_CODE_TYPE = {\n        '.cpp': 'CPP', '.cc': 'CPP', '.cxx': 'CPP', '.hpp': 'CPP', '.hxx': 'CPP',\n        '.h': 'C', '.c': 'C',\n        '.go': 'GO',\n        '.java': 'JAVA',\n        '.kt': 'KOTLIN', '.kts': 'KOTLIN',\n        '.js': 'JS',\n        '.ts': 'TS',\n        '.php': 'PHP',\n        '.proto': 'PROTO',\n        '.py': 'PYTHON',\n        '.rst': 'RST',\n        '.rb': 'RUBY',\n        '.rs': 'RUST',\n        '.scala': 'SCALA',\n        '.swift': 'SWIFT',\n        '.md': 'MARKDOWN',\n        '.tex': 'LATEX',\n        '.html': 'HTML', '.htm': 'HTML',\n        '.sol': 'SOL',\n        '.cs': 'CSHARP',\n        '.cob': 'COBOL', '.cbl': 'COBOL',\n        '.lua': 'LUA',\n        '.hs': 'HASKELL',\n        '.sav': 'SAV',\n        '.xml': 'XML',\n        '.sql': \"SQL\",\n        '.vbs': \"VBS\",\n        '.p': \"PROGRESS\",\n        '.csv': \"CSV\"  \n    }\n    ext = os.path.splitext(filename)[1].lower()\n    return EXTENSION_TO_CODE_TYPE.get(ext)\n\ndef get_code_type_from_zip(zip_file):\n    for name in zip_file.namelist():\n        code_type = detect_code_type(name)\n        if code_type:\n            return code_type\n    return None\n\ndef get_filename_from_url(url):\n    from urllib.parse import urlparse, unquote\n    parsed = urlparse(url)\n    path = parsed.path\n    filename = os.path.basename(path)\n    return unquote(filename)\n\n# ---- Main logic ----\nresponse = requests.get(url)\ncontent = response.content\n\ncode_type = None\nmimetype = None\nis_zipfile = False\n\nfilename = get_filename_from_url(url)\n\nif zipfile.is_zipfile(BytesIO(content)):\n    is_zipfile = True\n    with zipfile.ZipFile(BytesIO(content)) as zip_file:\n        names = zip_file.namelist()\n        if 'word/document.xml' in names:\n            mimetype = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n        elif 'xl/workbook.xml' in names:\n            mimetype = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        elif 'ppt/presentation.xml' in names:\n            mimetype = 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n        elif any(name.endswith('.mp4') for name in names):\n            mimetype = 'video/mp4'\n        else:\n            code_type = get_code_type_from_zip(zip_file)\n            if code_type:\n                mimetype = CODE_TYPE_TO_MIMETYPE.get(code_type, 'text/plain')\n            else:\n                mimetype = 'application/zip'\nelse:\n    code_type = detect_code_type(filename)\n    if code_type:\n        mimetype = CODE_TYPE_TO_MIMETYPE.get(code_type, 'text/plain')\n    else:\n        mime = magic.Magic(mime=True)\n        mimetype = mime.from_buffer(content)\n\n# get extension\nfile_extension = MIMETYPE_TO_EXTENSION.get(mimetype, os.path.splitext(filename)[1].lower() or '.bin')\n\nresult = {\n    \"filename\": filename,\n    \"is_zipfile\": is_zipfile,\n    \"fileExtension\": file_extension\n}\n",
				"isAsync":false,
				"python_version":"3.12",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ _hamy3.outputs.document.viewURL }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":363,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"jAfNa@n_vCiXD@_5NVxH-1@y@error",
			"id":"KPDQh",
			"index":10,
			"inputs":{
				"result":{}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"files_by_unifyapps",
				"resourceVersion":513,
				"resourceName":"files_by_unifyapps_upload_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vCiXD@_5NVxH-1@y",
			"id":"_k4aOr",
			"index":11,
			"inputs":{
				"fileName":"{{ _PZPS1.outputs.result.name }}{{ jAfNa.outputs.result.fileExtension }}",
				"url":"{{ _hamy3.outputs.document.viewURL }}",
				"option":"url"
			},
			"skip":false,
			"subTitle":"Files by UnifyApps",
			"title":"Upload file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vCiXD@_5NVxH-1@y",
			"id":"_cN0lP",
			"index":12,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_3nEyg.outputs.file }}",
						"value":"{{ _k4aOr.outputs.fileDetails }}"
					},
					{
						"source":"{{ n_3nEyg.outputs.name }}",
						"value":"{{ _PZPS1.outputs.result.name }}{{ jAfNa.outputs.result.fileExtension }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vCiXD@_5NVxH-1@n",
			"id":"_84n8g",
			"index":13,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"binaryContent":{
							"type":"string",
							"title":"Binary Content"
						}
					}
				},
				"code":"def allowed = (binding.hasVariable('binaryContent') && binaryContent != \"\")\nreturn [\"allowed\" : allowed]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"binaryContent":"{{ _hamy3.outputs.document.body.binaryContent }}"
				}
			},
			"skip":false,
			"subTitle":"binaryContent?",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":447,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_vCiXD@_5NVxH-1@n",
			"id":"n_mZyH7",
			"index":14,
			"inputs":{
				"filters":[
					{
						"property":"{{ _84n8g.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mZyH7@n_vCiXD@_5NVxH-1@n@y",
			"id":"n_qFHsu",
			"index":15,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"extension":{
							"type":"string",
							"title":"Extension"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"mimeType":{
							"type":"string",
							"title":"Mime Type"
						}
					}
				},
				"code":"def getFileExtension(value) {\n    if (!value || value == \"\") return null\n\n    def mimeToExt = [\n        'application/pdf' : 'pdf',\n        'application/zip' : 'zip',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document' : 'docx',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' : 'xlsx',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation' : 'pptx',\n        'text/html' : 'html',\n        'text/plain' : 'txt',\n        'text/x-python' : 'py',\n        'text/x-c++src' : 'cpp',\n        'text/x-csrc' : 'c',\n        'text/x-java-source' : 'java',\n        'text/javascript' : 'js',\n        'text/typescript' : 'ts',\n        'text/x-kotlin' : 'kt',\n        'text/markdown' : 'md',\n        'text/x-latex' : 'tex',\n        'text/x-sql' : 'sql',\n        'text/csv' : 'csv',\n        'video/mp4' : 'mp4',\n        'application/json' : 'json'\n    ]\n\n    def ext = mimeToExt[value.toLowerCase()]\n    if (ext) {\n        return ext\n    }\n    return value.replace(\".\", \"\").toLowerCase()\n}\n\ndef mimeType = binding.hasVariable(\"mimeType\") ? mimeType : \"\"\nreturn [\"extension\":getFileExtension(mimeType)]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"mimeType":"{{ _hamy3.outputs.document.body.mimeType }}"
				}
			},
			"skip":false,
			"subTitle":"get Extension",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":467,
				"resourceName":"utility_by_unifyapps_upload_base_64_content",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mZyH7@n_vCiXD@_5NVxH-1@n@y",
			"id":"_2lRBl",
			"index":16,
			"inputs":{
				"fileName":"{{ _PZPS1.outputs.result.name }}.{{ n_qFHsu.outputs.result.extension }}",
				"content":"{{ _hamy3.outputs.document.body.binaryContent }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Upload Base64 Content",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mZyH7@n_vCiXD@_5NVxH-1@n@y",
			"id":"_Az0Hg",
			"index":17,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_3nEyg.outputs.file }}",
						"value":"{{ _2lRBl.outputs.fileDetails }}"
					},
					{
						"source":"{{ n_3nEyg.outputs.name }}",
						"value":"{{ _2lRBl.outputs.fileDetails.name }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":277,
				"resourceName":"utility_by_unifyapps_write_data_to_docx",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mZyH7@n_vCiXD@_5NVxH-1@n@n",
			"id":"n_otsRd",
			"index":18,
			"inputs":{
				"dataType":"TEXT",
				"content":"{{ _hamy3.outputs.document.body.textContent }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Write Data to Docx file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mZyH7@n_vCiXD@_5NVxH-1@n@n",
			"id":"_nGyQ6",
			"index":19,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"extension":{
							"type":"string",
							"title":"Extension"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"source":{
							"type":"string",
							"title":"Source"
						}
					}
				},
				"code":"return [extension : \".\"+(source?.tokenize('.')?.last()?.toLowerCase())]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"source":"{{ n_otsRd.outputs.file.source }}"
				}
			},
			"skip":false,
			"subTitle":"get extension",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mZyH7@n_vCiXD@_5NVxH-1@n@n",
			"id":"_86BaS",
			"index":20,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_3nEyg.outputs.file }}",
						"value":"{{ n_otsRd.outputs.file }}"
					},
					{
						"source":"{{ n_3nEyg.outputs.name }}",
						"value":"{{ _PZPS1.outputs.result.name }}{{ _nGyQ6.outputs.result.extension }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.files.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_lNhlW",
			"index":21,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"finalFile":{
							"type":"object",
							"properties":{
								"fileExtension":{
									"type":"string",
									"title":"File Extension"
								},
								"fileType":{
									"type":"string",
									"title":"File Type"
								},
								"name":{
									"type":"string",
									"title":"Name"
								},
								"source":{
									"type":"string",
									"title":"Source"
								},
								"sourceType":{
									"type":"string",
									"title":"Source Type"
								},
								"url":{
									"type":"string",
									"title":"Url"
								}
							},
							"additionalProperties":false,
							"title":"Final File",
							"required":[]
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"file":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File"
						},
						"viewURL":{
							"type":"string",
							"title":"viewURL"
						}
					}
				},
				"code":"if (!binding.hasVariable('file') || file == null) {\n    return [\n        finalFile: null\n    ]\n}\n\ndef extensionToMimeType = [\n    \"pdf\"  : \"application/pdf\",\n    \"doc\"  : \"application/msword\",\n    \"docx\" : \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    \"xls\"  : \"application/vnd.ms-excel\",\n    \"xlsx\" : \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    \"csv\"  : \"text/csv\",\n    \"png\"  : \"image/png\",\n    \"jpg\"  : \"image/jpeg\",\n    \"jpeg\" : \"image/jpeg\",\n    \"txt\"  : \"text/plain\"\n]\n\ndef extension = file.source?.tokenize('.')?.last()?.toLowerCase()\ndef mimeType = extensionToMimeType.get(extension, \"application/octet-stream\")\n\ndef nameWithExt = file.name\nif (extension && !file.name.toLowerCase().endsWith(\".\" + extension)) {\n    nameWithExt = file.name + \".\" + extension\n}\n\ndef viewURL = (binding.hasVariable('viewURL')) ? viewURL : null\n\ndef finalFile = [\n    fileExtension: extension,\n    fileType     : mimeType,\n    name         : nameWithExt,\n    source       : file.source,\n    sourceType   : file.sourceType,\n    url          : viewURL\n]\n\nreturn [\n    finalFile: finalFile\n]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"file":"{{ n_3nEyg.outputs.file }}",
					"viewURL":"{{ _hamy3.outputs.document.viewURL }}"
				}
			},
			"skip":false,
			"subTitle":"final Files",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":447,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"n_yfjkI",
			"index":22,
			"inputs":{
				"filters":[
					{
						"property":"{{ _hamy3.outputs.document.id }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":654,
				"resourceName":"storage_by_unifyapps_upsert_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_yfjkI@_5NVxH-1@y",
			"id":"n_s85yT",
			"index":23,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"knowledge",
				"skipIfBlank":false,
				"updateFields":[
					{
						"fieldName":"properties.fileDetails.name",
						"actionType":"SET",
						"setValue":"{{ n_3nEyg.outputs.name }}"
					},
					{
						"fieldName":"properties.fileDetails.source",
						"actionType":"SET",
						"setValue":"{{ n_lNhlW.outputs.result.finalFile.source }}"
					},
					{
						"fieldName":"properties.fileDetails.fileType",
						"actionType":"SET",
						"setValue":"{{ n_lNhlW.outputs.result.finalFile.fileType }}"
					},
					{
						"fieldName":"properties.fileDetails.fileExtension",
						"actionType":"SET",
						"setValue":"{{ n_lNhlW.outputs.result.finalFile.fileExtension }}"
					},
					{
						"fieldName":"properties.fileDetails.sourceType",
						"actionType":"SET",
						"setValue":"{{ n_lNhlW.outputs.result.finalFile.sourceType }}"
					},
					{
						"fieldName":"properties.sourceType",
						"actionType":"SET",
						"setValue":"FILE"
					},
					{
						"fieldName":"properties.name",
						"actionType":"SET",
						"setValue":"{{ n_3nEyg.outputs.name }}"
					},
					{
						"fieldName":"properties.status",
						"actionType":"SET",
						"setValue":"DRAFT"
					},
					{
						"fieldName":"properties.accessibleTo",
						"actionType":"ADD",
						"setValue":"knowledge_set/{{ _hamy3.outputs.document.datasource }}"
					},
					{
						"fieldName":"properties.knowledgeSetId",
						"actionType":"SET",
						"setValue":"{{ _hamy3.outputs.document.datasource }}"
					},
					{
						"fieldName":"properties.fileDetails.url",
						"actionType":"SET",
						"setValue":"{{ n_lNhlW.outputs.result.finalFile.url }}"
					}
				],
				"id":"{{ _hamy3.outputs.document.id }}",
				"unsetIfNull":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Upsert Record",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.fileDetails.name",
					"root.record.fileDetails.source",
					"root.record.fileDetails.fileType",
					"root.record.fileDetails.size",
					"root.record.fileDetails.fileExtension",
					"root.record.fileDetails.sourceType",
					"root.record.fileDetails.url",
					"root.record.websiteImportInfo.specificWebpages",
					"root.record.websiteImportInfo.urlList.items",
					"root.record.applicationInfo.inputs",
					"root.record.applicationInfo.context.appName",
					"root.record.applicationInfo.context.connectionId",
					"root.record.applicationInfo.context.resourceName",
					"root.record.refreshDetails.lastRefreshStartTime",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.textExtractionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.image.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.tabularData.indexingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.chunkingAlgorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.summarizingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.text.enableSummarize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.chunkOverlap",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.delimiters.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.processingMethod",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.language",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.transcriptionModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.embeddingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.maxChunkSize",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.thresholdType",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.contentTypeConfig.audio.algorithm",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.mimeType.items",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.agenticParsingModel",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.appName",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.connectionId",
					"root.record.settings.indexingStrategySettings.mimeTypeOverride.items.documentParsingConfig.type",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.entityId",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.automations.items.version",
					"root.record.settings.indexingStrategySettings.metadataEnrichmentSettings.enabled",
					"root.record.settings.indexingStrategySettings.graphRagSettings.enable",
					"root.record.settings.piiMasking.regex.enabled",
					"root.record.settings.piiMasking.automations.enabled",
					"root.record.settings.piiMasking.automations.ids.items",
					"root.record.settings.piiMasking.piiByUA.enabled",
					"root.record.settings.enrichmentStrategies.items.processingMethod",
					"root.record.settings.enrichmentStrategies.items.model",
					"root.record.settings.enrichmentStrategies.items.automationId",
					"root.record.settings.enrichmentStrategies.items.version",
					"root.record.settings.enrichmentStrategies.items.parameters.items.name",
					"root.record.settings.enrichmentStrategies.items.parameters.items.description",
					"root.record.settings.enrichmentStrategies.items.parameters.items.isStandard",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.key",
					"root.record.settings.enrichmentStrategies.items.manualEnrichmentParameters.items.value",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.inputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.key",
					"root.record.settings.enrichmentStrategies.items.outputMappings.items.value",
					"root.record.settings.enrichmentStrategies.items.manualParameters",
					"root.record.settings.enrichmentStrategies.items.automationInput",
					"root.record.settings.enrichmentStrategies.items.enrichmentInput",
					"root.record.settings.enrichment.processingMethod",
					"root.record.settings.enrichment.model",
					"root.record.settings.enrichment.parameters.items.name",
					"root.record.settings.enrichment.parameters.items.description",
					"root.record.settings.enrichment.enabled",
					"root.record.additionalDetails.unifiedEntityModelId",
					"root.record.additionalDetails.metadataIndexing",
					"root.record.additionalDetails.embeddingModel",
					"root.record.additionalDetails.knowledgeInstructionsForPrompt",
					"root.record.additionalDetails.summary",
					"root.record.additionalDetails.faqs.items",
					"root.record.additionalDetails.vectorStore",
					"root.record.additionalDetails.vectorStoreConnectionId",
					"root.record.dataCatalogInfo.id",
					"root.record.customMetadata.items.name",
					"root.record.accessibleTo.items",
					"root.record.errorDetails.errorMessage"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":522,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_yfjkI@_5NVxH-1@n",
			"id":"_WKBTn",
			"index":24,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"knowledge",
				"skipIfBlank":false,
				"record":{
					"fileDetails":{
						"name":"{{ n_3nEyg.outputs.name }}",
						"source":"{{ n_lNhlW.outputs.result.finalFile.source }}",
						"fileType":"{{ n_lNhlW.outputs.result.finalFile.fileType }}",
						"fileExtension":"{{ n_lNhlW.outputs.result.finalFile.fileExtension }}",
						"sourceType":"{{ n_lNhlW.outputs.result.finalFile.sourceType }}",
						"url":"{{ n_lNhlW.outputs.result.finalFile.url }}"
					},
					"sourceType":"FILE",
					"name":"{{ n_3nEyg.outputs.name }}",
					"status":"DRAFT",
					"enabled":true,
					"settings":{
						"indexingStrategySettings":{
							"graphRagSettings":{
								"enable":false
							}
						},
						"enrichment":{
							"enabled":false
						}
					},
					"additionalDetails":{
						"embeddingModel":"e_ai_agent_openai_emebedding_3_large"
					},
					"knowledgeSetId":"{{ _hamy3.outputs.document.datasource }}",
					"newIndexingFlowEnabled":false,
					"forwardGrabberScheduled":false,
					"realtimeIndexingEnabled":false,
					"knowledgeScheduleEnabled":false,
					"accessibleTo":{
						"items":"knowledge_set/{{ _hamy3.outputs.document.datasource }}",
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_5NVxH-1",
			"id":"_Oriex",
			"index":25,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		"AI Agent"
	],
	"version":23
}