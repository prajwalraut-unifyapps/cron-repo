{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1754552800252,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1758278300295,
		"deployedBy":1,
		"deployedDefinitionId":"68cd329c38ec2d796ace878a",
		"status":"DEPLOYED",
		"version":7,
		"workflowVersion":109
	},
	"edges":[
		{
			"fromNodeId":"n_iGWAQ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QO6RD",
			"type":"next"
		},
		{
			"fromNodeId":"n_QO6RD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_gg8yH",
			"type":"next"
		},
		{
			"fromNodeId":"n_gg8yH",
			"priority":0,
			"skip":false,
			"toNodeId":"n_C3yAv",
			"type":"next"
		},
		{
			"fromNodeId":"n_C3yAv",
			"priority":0,
			"skip":false,
			"toNodeId":"n_wVLiy",
			"type":"next"
		},
		{
			"fromNodeId":"n_wVLiy",
			"priority":0,
			"skip":false,
			"toNodeId":"_3nhUc",
			"type":"next"
		},
		{
			"fromNodeId":"_3nhUc",
			"priority":0,
			"skip":false,
			"toNodeId":"n_fkPOm",
			"type":"next"
		},
		{
			"fromNodeId":"n_fkPOm",
			"priority":0,
			"skip":false,
			"toNodeId":"n_0zp4y",
			"type":"next"
		},
		{
			"fromNodeId":"n_0zp4y",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aZbqZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_aZbqZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7OVvM",
			"type":"next"
		},
		{
			"fromNodeId":"n_7OVvM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Oo61g",
			"type":"next"
		},
		{
			"fromNodeId":"n_Oo61g",
			"priority":0,
			"skip":false,
			"toNodeId":"n_DfpVZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_DfpVZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7QW4Y",
			"type":"next"
		},
		{
			"fromNodeId":"n_7QW4Y",
			"priority":0,
			"skip":false,
			"toNodeId":"n_BX1HD",
			"type":"next"
		},
		{
			"fromNodeId":"n_BX1HD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_CTns7",
			"type":"next"
		},
		{
			"fromNodeId":"n_CTns7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_P0Wpj",
			"type":"next"
		},
		{
			"fromNodeId":"n_P0Wpj",
			"priority":0,
			"skip":false,
			"toNodeId":"n_hgAlX",
			"type":"next"
		},
		{
			"fromNodeId":"n_hgAlX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aKguc",
			"type":"loop"
		},
		{
			"fromNodeId":"n_aKguc",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_apYzH",
			"type":"if"
		},
		{
			"fromNodeId":"n_aKguc",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_BWwJ1",
			"type":"next"
		},
		{
			"fromNodeId":"n_apYzH",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_hgAlX",
			"type":"next"
		},
		{
			"fromNodeId":"n_BWwJ1",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_hgAlX",
			"type":"next"
		},
		{
			"fromNodeId":"n_hgAlX",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Fwzus",
			"type":"next"
		},
		{
			"fromNodeId":"n_Fwzus",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Eyiax",
			"type":"next"
		},
		{
			"fromNodeId":"n_Eyiax",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jcTaU",
			"type":"next"
		},
		{
			"fromNodeId":"n_jcTaU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_jLRKk",
			"type":"next"
		},
		{
			"fromNodeId":"n_jLRKk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_XbPIR",
			"type":"next"
		},
		{
			"fromNodeId":"n_XbPIR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ugjfF",
			"type":"next"
		},
		{
			"fromNodeId":"n_ugjfF",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h3YGe",
			"type":"next"
		},
		{
			"fromNodeId":"n_h3YGe",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h2kxP",
			"type":"loop"
		},
		{
			"fromNodeId":"n_h2kxP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Xa0mS",
			"type":"next"
		},
		{
			"fromNodeId":"n_Xa0mS",
			"priority":0,
			"skip":false,
			"toNodeId":"n_c1N3c",
			"type":"next"
		},
		{
			"fromNodeId":"n_c1N3c",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cgESh",
			"type":"next"
		},
		{
			"fromNodeId":"n_cgESh",
			"priority":0,
			"skip":false,
			"toNodeId":"_2x7Mk",
			"type":"next"
		},
		{
			"fromNodeId":"_2x7Mk",
			"priority":0,
			"skip":false,
			"toNodeId":"_rHkR4",
			"type":"loop"
		},
		{
			"fromNodeId":"_rHkR4",
			"priority":0,
			"skip":false,
			"toNodeId":"_lhCkS",
			"type":"next"
		},
		{
			"fromNodeId":"_lhCkS",
			"priority":0,
			"skip":false,
			"toNodeId":"_3ZCVC",
			"type":"next"
		},
		{
			"fromNodeId":"_3ZCVC",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_2x7Mk",
			"type":"next"
		},
		{
			"fromNodeId":"_2x7Mk",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h3YGe",
			"type":"next"
		},
		{
			"fromNodeId":"n_h3YGe",
			"priority":0,
			"skip":false,
			"toNodeId":"n_iwuZh",
			"type":"next"
		},
		{
			"fromNodeId":"n_iwuZh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_j6EEC",
			"type":"next"
		},
		{
			"fromNodeId":"n_j6EEC",
			"priority":0,
			"skip":false,
			"toNodeId":"n_evknv",
			"type":"next"
		},
		{
			"fromNodeId":"n_evknv",
			"priority":0,
			"skip":false,
			"toNodeId":"n_59b6q",
			"type":"next"
		},
		{
			"fromNodeId":"n_59b6q",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h8TCK",
			"type":"next"
		},
		{
			"fromNodeId":"n_h8TCK",
			"priority":0,
			"skip":false,
			"toNodeId":"n_EBVX4",
			"type":"loop"
		},
		{
			"fromNodeId":"n_EBVX4",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FJjLY",
			"type":"next"
		},
		{
			"fromNodeId":"n_FJjLY",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ZprAA",
			"type":"if"
		},
		{
			"fromNodeId":"n_ZprAA",
			"priority":0,
			"skip":false,
			"toNodeId":"n_O6rxZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_O6rxZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_COFmh",
			"type":"next"
		},
		{
			"fromNodeId":"n_COFmh",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_xleVE",
			"type":"next"
		},
		{
			"fromNodeId":"n_COFmh",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_f8Efy",
			"type":"if"
		},
		{
			"fromNodeId":"n_xleVE",
			"priority":0,
			"skip":false,
			"toNodeId":"n_f8Efy",
			"type":"next"
		},
		{
			"fromNodeId":"n_FJjLY",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_f8Efy",
			"type":"next"
		},
		{
			"fromNodeId":"n_f8Efy",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h8TCK",
			"type":"next"
		},
		{
			"fromNodeId":"n_h8TCK",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FbVv6",
			"type":"next"
		},
		{
			"fromNodeId":"n_FbVv6",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bE7Ey",
			"type":"next"
		},
		{
			"fromNodeId":"n_bE7Ey",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QVrg2",
			"type":"next"
		},
		{
			"fromNodeId":"n_QVrg2",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1QJrG",
			"type":"next"
		}
	],
	"id":"6853b4abc2f89c23458360c7",
	"lastModifiedBy":1,
	"lcName":"dqm start asset scan",
	"modifiedTime":1759217125362,
	"name":"DQM Start Asset Scan",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":784,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_iGWAQ",
			"index":1,
			"inputs":{
				"setup":{
					"type":"object",
					"properties":{
						"monitoringExperimentId":{
							"type":"string",
							"title":"Monitoring Experiment Id"
						},
						"assetRecordId":{
							"type":"string",
							"title":"Asset Record Id"
						},
						"scanId":{
							"type":"string",
							"title":"Scan Id"
						},
						"assetScanId":{
							"type":"string",
							"title":"Asset Scan Id",
							"help":"DataQualityAssetScan ID"
						}
					},
					"additionalProperties":false,
					"required":[
						"monitoringExperimentId",
						"assetRecordId",
						"scanId",
						"assetScanId"
					]
				}
			},
			"skip":false,
			"subTitle":"Start Quality scan",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2789,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_QO6RD",
			"index":2,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_iGWAQ.outputs.assetRecordId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"data_quality_assets",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch DQ Asset By ID",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2779,
				"resourceName":"storage_by_unifyapps_count_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_gg8yH",
			"index":3,
			"inputs":{
				"object_type":"{{ n_QO6RD.outputs.properties.entityId }}"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ n_QO6RD.outputs.properties.entityId }}",
					"enabled":true,
					"filter":{
						"filters":[
							{
								"filter":{
									"operator":"EQUAL",
									"value":"FILE"
								},
								"property":"{{ n_QO6RD.outputs.properties.sourceType }}"
							}
						],
						"operator":"AND"
					},
					"timeToLive":"3600",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Find total records for asset",
			"title":"Count records",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":859,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_C3yAv",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"countOfRecords":{
							"type":"object",
							"properties":{
								"count":{
									"type":"integer",
									"title":"Count"
								}
							},
							"additionalProperties":false,
							"title":"Count Of Records",
							"required":[
								"count"
							]
						},
						"simpleRulesLength":{
							"type":"integer",
							"title":"Simple Rules Length"
						}
					},
					"required":[
						"countOfRecords",
						"simpleRulesLength"
					]
				}
			},
			"inputs":{
				"countOfRecords":{
					"count":"{{ n_gg8yH.outputs.count }}"
				}
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"countOfRecords":{
							"type":"object",
							"properties":{
								"count":{
									"type":"integer",
									"title":"Count"
								}
							},
							"additionalProperties":false,
							"title":"Count Of Records",
							"required":[
								"count"
							]
						},
						"simpleRulesLength":{
							"type":"integer",
							"title":"Simple Rules Length"
						}
					},
					"required":[
						"countOfRecords",
						"simpleRulesLength"
					]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":801,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_wVLiy",
			"index":5,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"currentTimeMillis":{
							"type":"integer",
							"title":"Current Time Millis"
						}
					},
					"additionalProperties":false,
					"required":[
						"currentTimeMillis"
					]
				},
				"compile_static":false,
				"code":"return [\"currentTimeMillis\": System.currentTimeMillis()]"
			},
			"skip":false,
			"subTitle":"Get Start Time",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.dimensionAverageScores.items.averageScore",
					"root.record.ruleResults.items.resultBreakdown.items.result",
					"root.record.ruleResults.items.resultBreakdown.items.count",
					"root.record.ruleResults.items.attributes",
					"root.record.ruleResults.items.parameters",
					"root.record.ruleResults.items.filter"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2718,
				"resourceName":"storage_by_unifyapps_update_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"_3nhUc",
			"index":6,
			"inputs":{
				"recordId":"{{ n_iGWAQ.outputs.assetScanId }}",
				"writeThroughSessionVariables":false,
				"object_type":"data_quality_asset_scan",
				"record":{
					"scanId":"{{ n_iGWAQ.outputs.scanId }}",
					"assetId":"{{ n_iGWAQ.outputs.assetRecordId }}",
					"sourceType":"{{ n_QO6RD.outputs.properties.sourceType }}",
					"totalRecordsCount":"{{ n_gg8yH.outputs.count }}",
					"status":"RUNNING",
					"executionTime":"{{ n_wVLiy.outputs.result.currentTimeMillis }}",
					"ruleResults":{
						"source":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].ruleId }}",
							"attributes":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].inputParameters.attributes }}",
							"parameters":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].inputParameters.parameters }}",
							"filter":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].filter }}"
						}
					}
				},
				"upsert":true
			},
			"skip":false,
			"subTitle":"Update status of scan",
			"title":"Update an existing record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":859,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_fkPOm",
			"index":7,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"cursor":{
							"type":"object",
							"properties":{
								"next":{
									"type":"string",
									"title":"Next"
								}
							},
							"additionalProperties":false,
							"title":"Cursor",
							"required":[
								"next"
							]
						},
						"hasMore":{
							"type":"boolean",
							"title":"Has More",
							"default":"true"
						},
						"result":{
							"type":"object",
							"properties":{
								"scanStarted":{
									"type":"boolean",
									"title":"Scan Started"
								}
							},
							"additionalProperties":false,
							"title":"Result",
							"required":[
								"scanStarted"
							]
						}
					},
					"required":[
						"cursor",
						"hasMore",
						"result"
					]
				}
			},
			"inputs":{
				"result":{
					"scanStarted":true
				},
				"hasMore":"true"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"cursor":{
							"type":"object",
							"properties":{
								"next":{
									"type":"string",
									"title":"Next"
								}
							},
							"additionalProperties":false,
							"title":"Cursor",
							"required":[
								"next"
							]
						},
						"hasMore":{
							"type":"boolean",
							"title":"Has More",
							"default":"true"
						},
						"result":{
							"type":"object",
							"properties":{
								"scanStarted":{
									"type":"boolean",
									"title":"Scan Started"
								}
							},
							"additionalProperties":false,
							"title":"Result",
							"required":[
								"scanStarted"
							]
						}
					},
					"required":[
						"cursor",
						"hasMore",
						"result"
					]
				}
			},
			"skip":false,
			"subTitle":"Intialize Pagination Variables",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":859,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_0zp4y",
			"index":8,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsResultCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"count",
									"result",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Id Vs Result Count"
						}
					},
					"required":[
						"ruleIdVsResultCount"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsResultCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"count",
									"result",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Id Vs Result Count"
						}
					},
					"required":[
						"ruleIdVsResultCount"
					]
				}
			},
			"skip":false,
			"subTitle":"Initialize RuleId vs Result count",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":865,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_aZbqZ",
			"index":9,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsSkippedCount":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Skipped Count"
						}
					},
					"required":[
						"ruleIdVsSkippedCount"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsSkippedCount":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Skipped Count"
						}
					},
					"required":[
						"ruleIdVsSkippedCount"
					]
				}
			},
			"skip":false,
			"subTitle":"RuleIdVsSkippedCountAndDimension",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":861,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_7OVvM",
			"index":10,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleVsRuleSetBreakdown":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"ruleSetId":{
										"type":"string",
										"title":"Rule Set Id"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"ruleSetId",
									"result",
									"count",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Vs Rule Set Breakdown"
						}
					},
					"required":[
						"ruleVsRuleSetBreakdown"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleVsRuleSetBreakdown":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"ruleSetId":{
										"type":"string",
										"title":"Rule Set Id"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"ruleSetId",
									"result",
									"count",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Vs Rule Set Breakdown"
						}
					},
					"required":[
						"ruleVsRuleSetBreakdown"
					]
				}
			},
			"skip":false,
			"subTitle":"Initialize Rule Vs RuleSet Breakdown",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":861,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_Oo61g",
			"index":11,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsRuleName":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Rule Name"
						}
					},
					"required":[
						"ruleIdVsRuleName"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsRuleName":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Rule Name"
						}
					},
					"required":[
						"ruleIdVsRuleName"
					]
				}
			},
			"skip":false,
			"subTitle":"Initialize RuleId vs RuleName",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":861,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_DfpVZ",
			"index":12,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsFilter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Filter"
						}
					},
					"required":[
						"ruleIdVsFilter"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ruleIdVsFilter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Filter"
						}
					},
					"required":[
						"ruleIdVsFilter"
					]
				}
			},
			"skip":false,
			"subTitle":"Create RuleID vs Filter",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":865,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_7QW4Y",
			"index":13,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"dimensionVsCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									},
									"skippedCount":{
										"type":"integer",
										"title":"Skipped Count"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"count",
									"attributes",
									"parameters",
									"skippedCount"
								]
							},
							"title":"Dimension Vs Count"
						}
					},
					"required":[
						"dimensionVsCount"
					]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"dimensionVsCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									},
									"skippedCount":{
										"type":"integer",
										"title":"Skipped Count"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"count",
									"attributes",
									"parameters",
									"skippedCount"
								]
							},
							"title":"Dimension Vs Count"
						}
					},
					"required":[
						"dimensionVsCount"
					]
				}
			},
			"skip":false,
			"subTitle":"dimensionWiseCount",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.rulesAndParams.items.filter",
					"root.parameters.rulesAndParams.items.isFilterApplied",
					"root.parameters.rulesAndParams.items.ruleCategory",
					"root.parameters.rulesAndParams.items.groups.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_BX1HD",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"ruleIdVsRuleProperties":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Rule Properties"
						}
					},
					"additionalProperties":false,
					"required":[
						"ruleIdVsRuleProperties"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"rulesAndParams":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"filter":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Filter"
									},
									"inputParameters":{
										"type":"object",
										"properties":{
											"attributes":{
												"type":"object",
												"properties":{},
												"additionalProperties":false,
												"title":"Attributes"
											},
											"parameters":{
												"type":"object",
												"properties":{},
												"additionalProperties":false,
												"title":"Parameters"
											}
										},
										"additionalProperties":false,
										"title":"Input Parameters",
										"required":[
											"attributes",
											"parameters"
										]
									},
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"ruleName":{
										"type":"string",
										"title":"Rule Name"
									},
									"isFilterApplied":{
										"type":"boolean",
										"title":"Is Filter Applied"
									},
									"ruleCategory":{
										"type":"string",
										"title":"Rule Category"
									},
									"groups":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Groups"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"inputParameters",
									"dimension",
									"ruleName"
								]
							},
							"title":"Rules And Params"
						}
					},
					"additionalProperties":false,
					"required":[
						"rulesAndParams"
					]
				},
				"compile_static":false,
				"code":"if (binding.hasVariable(\"rulesAndParams\")) {\n    Map<String, Object> ruleIdVsProperties = new HashMap<>();\n    for (final def entry in rulesAndParams) {\n        String ruleId = entry[\"ruleId\"]\n       ruleIdVsProperties.put(ruleId, entry)\n    }\n    return [\"ruleIdVsRuleProperties\": ruleIdVsProperties]\n}\n\nreturn [\"ruleIdVsRuleProperties\": [:]]",
				"parameters":{
					"rulesAndParams":{
						"source":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].ruleId }}",
							"inputParameters":{
								"attributes":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].inputParameters.attributes }}",
								"parameters":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].inputParameters.parameters }}"
							},
							"dimension":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].dimension }}",
							"ruleName":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].ruleName }}",
							"isFilterApplied":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].isFilterApplied }}",
							"filter":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].filter }}",
							"ruleCategory":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].ruleCategory }}",
							"groups":{
								"source":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].inputParameters.groups }}",
								"ua:type":"mappedArray",
								"items":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].inputParameters.groups[0] }}"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Get Rule ID Vs Rule Properties",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":851,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_CTns7",
			"index":15,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"ruleId":{
											"type":"string",
											"title":"ruleId"
										},
										"inputParameters":{
											"type":"object",
											"properties":{
												"attributes":{
													"type":"object",
													"properties":{},
													"title":"attributes",
													"additionalProperties":false,
													"required":[]
												},
												"parameters":{
													"type":"object",
													"properties":{},
													"title":"parameters",
													"additionalProperties":false,
													"required":[]
												},
												"groups":{
													"type":"array",
													"items":{
														"type":"object",
														"properties":{
															"groupId":{
																"type":"string",
																"title":"groupId"
															},
															"groupName":{
																"type":"string",
																"title":"groupName"
															},
															"attributes":{
																"type":"array",
																"items":{
																	"type":"object",
																	"properties":{},
																	"additionalProperties":false,
																	"required":[]
																},
																"title":"attributes"
															}
														},
														"additionalProperties":false
													},
													"title":"groups"
												}
											},
											"title":"inputParameters",
											"additionalProperties":false
										},
										"dimension":{
											"type":"string",
											"title":"dimension"
										},
										"ruleName":{
											"type":"string",
											"title":"ruleName"
										},
										"filter":{
											"type":"object",
											"properties":{},
											"title":"filter",
											"additionalProperties":false,
											"required":[]
										},
										"isFilterApplied":{
											"type":"boolean",
											"title":"isFilterApplied"
										},
										"ruleCategory":{
											"type":"string",
											"title":"ruleCategory"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"AggregationRules",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"AggregationRules",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"ruleId"
									},
									"inputParameters":{
										"type":"object",
										"properties":{
											"attributes":{
												"type":"object",
												"properties":{},
												"title":"attributes",
												"additionalProperties":false,
												"required":[]
											},
											"parameters":{
												"type":"object",
												"properties":{},
												"title":"parameters",
												"additionalProperties":false,
												"required":[]
											},
											"groups":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"groupId":{
															"type":"string",
															"title":"groupId"
														},
														"groupName":{
															"type":"string",
															"title":"groupName"
														},
														"attributes":{
															"type":"array",
															"items":{
																"type":"object",
																"properties":{},
																"additionalProperties":false,
																"required":[]
															},
															"title":"attributes"
														}
													},
													"additionalProperties":false
												},
												"title":"groups"
											}
										},
										"title":"inputParameters",
										"additionalProperties":false
									},
									"dimension":{
										"type":"string",
										"title":"dimension"
									},
									"ruleName":{
										"type":"string",
										"title":"ruleName"
									},
									"filter":{
										"type":"object",
										"properties":{},
										"title":"filter",
										"additionalProperties":false,
										"required":[]
									},
									"isFilterApplied":{
										"type":"boolean",
										"title":"isFilterApplied"
									},
									"ruleCategory":{
										"type":"string",
										"title":"ruleCategory"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"AggregationRules",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":851,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_P0Wpj",
			"index":16,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"ruleId":{
											"type":"string",
											"title":"ruleId"
										},
										"inputParameters":{
											"type":"object",
											"properties":{
												"attributes":{
													"type":"object",
													"title":"attributes"
												},
												"parameters":{
													"type":"object",
													"title":"parameters"
												}
											},
											"title":"inputParameters",
											"additionalProperties":false
										},
										"dimension":{
											"type":"string",
											"title":"dimension"
										},
										"ruleName":{
											"type":"string",
											"title":"ruleName"
										},
										"filter":{
											"type":"object",
											"title":"filter"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"SimpleRules",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"SimpleRules",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"ruleId"
									},
									"inputParameters":{
										"type":"object",
										"properties":{
											"attributes":{
												"type":"object",
												"title":"attributes"
											},
											"parameters":{
												"type":"object",
												"title":"parameters"
											}
										},
										"title":"inputParameters",
										"additionalProperties":false
									},
									"dimension":{
										"type":"string",
										"title":"dimension"
									},
									"ruleName":{
										"type":"string",
										"title":"ruleName"
									},
									"filter":{
										"type":"object",
										"title":"filter"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"SimpleRules",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":831,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_hgAlX",
			"index":17,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"For each rule",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_hgAlX@_klfvA-1@l",
			"id":"n_aKguc",
			"index":18,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_hgAlX.outputs.item.ruleCategory }}",
						"filter":{
							"operator":"EQUAL",
							"value":"AGGREGATION"
						}
					},
					{
						"property":"{{ n_hgAlX.outputs.item.dimension }}",
						"filter":{
							"operator":"EQUAL",
							"value":"UNIQUENESS"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"If Aggregation",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.inputParameters.attributes",
					"root.itemToAdd.inputParameters.parameters",
					"root.itemToAdd.inputParameters.groups.items.groupId",
					"root.itemToAdd.inputParameters.groups.items.groupName",
					"root.itemToAdd.inputParameters.groups.items.attributes.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":804,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aKguc@n_hgAlX@_klfvA-1@l@y",
			"id":"n_apYzH",
			"index":19,
			"inputs":{
				"itemToAdd":{
					"ruleId":"{{ n_hgAlX.outputs.item.ruleId }}",
					"dimension":"{{ n_hgAlX.outputs.item.dimension }}",
					"ruleName":"{{ n_hgAlX.outputs.item.ruleName }}",
					"filter":"{{ n_hgAlX.outputs.item.filter }}",
					"isFilterApplied":"{{ n_hgAlX.outputs.item.isFilterApplied }}",
					"ruleCategory":"{{ n_hgAlX.outputs.item.ruleCategory }}",
					"inputParameters":{
						"attributes":"{{ n_hgAlX.outputs.item.inputParameters.attributes }}",
						"parameters":"{{ n_hgAlX.outputs.item.inputParameters.parameters }}",
						"groups":{
							"source":"{{ n_hgAlX.outputs.item.inputParameters.groups }}",
							"ua:type":"mappedArray",
							"items":{
								"groupId":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].groupId }}",
								"groupName":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].groupName }}",
								"attributes":{
									"source":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].attributes }}",
									"ua:type":"mappedArray",
									"items":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].attributes[0] }}"
								}
							}
						}
					}
				},
				"insertLocation":"END",
				"listName":"{{ n_CTns7.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add to aggregation rules",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.inputParameters.attributes",
					"root.itemToAdd.inputParameters.parameters",
					"root.itemToAdd.inputParameters.groups.items.groupId",
					"root.itemToAdd.inputParameters.groups.items.groupName",
					"root.itemToAdd.inputParameters.groups.items.attributes"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":804,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_aKguc@n_hgAlX@_klfvA-1@l@n",
			"id":"n_BWwJ1",
			"index":20,
			"inputs":{
				"itemToAdd":{
					"ruleId":"{{ n_hgAlX.outputs.item.ruleId }}",
					"dimension":"{{ n_hgAlX.outputs.item.dimension }}",
					"ruleName":"{{ n_hgAlX.outputs.item.ruleName }}",
					"filter":"{{ n_hgAlX.outputs.item.filter }}",
					"isFilterApplied":"{{ n_hgAlX.outputs.item.isFilterApplied }}",
					"ruleCategory":"{{ n_hgAlX.outputs.item.ruleCategory }}",
					"inputParameters":{
						"attributes":"{{ n_hgAlX.outputs.item.inputParameters.attributes }}",
						"parameters":"{{ n_hgAlX.outputs.item.inputParameters.parameters }}",
						"groups":{
							"source":"{{ n_hgAlX.outputs.item.inputParameters.groups }}",
							"ua:type":"mappedArray",
							"items":{
								"groupId":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].groupId }}",
								"groupName":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].groupName }}",
								"attributes":{
									"source":"{{ n_hgAlX.outputs.item.inputParameters.groups[0].attributes }}",
									"ua:type":"mappedArray"
								}
							}
						}
					}
				},
				"insertLocation":"END",
				"listName":"{{ n_P0Wpj.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add to simple rules",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_Fwzus",
			"index":21,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"length":{
							"type":"integer",
							"title":"Length"
						}
					},
					"additionalProperties":false,
					"required":[
						"length"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"simpleRules":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Simple Rules"
						}
					},
					"additionalProperties":false,
					"required":[
						"simpleRules"
					]
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable(\"simpleRules\")) {\n  binding.setVariable(\"simpleRules\", [])\n}\nreturn [\"length\": simpleRules.size()]",
				"parameters":{
					"simpleRules":{
						"source":"{{ n_P0Wpj.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_P0Wpj.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Simple Rule Size",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":792,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_Eyiax",
			"index":22,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_C3yAv.outputs.simpleRulesLength }}",
						"value":"{{ n_Fwzus.outputs.result.length }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Simple Rules Length Update",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":812,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_jcTaU",
			"index":23,
			"inputs":{
				"automationId":"687784860297d0af5b8e9d87",
				"runtimeConnections":{},
				"synchronous":true,
				"triggerWorkflowWithRuntimeType":"DEFAULT",
				"version":"-1",
				"parameters":{
					"aggregationRules":{
						"source":"{{ n_CTns7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_CTns7.outputs.items[0].ruleId }}",
							"inputParameters":{
								"attributes":"{{ n_CTns7.outputs.items[0].inputParameters.attributes }}",
								"parameters":"{{ n_CTns7.outputs.items[0].inputParameters.parameters }}",
								"groups":{
									"source":"{{ n_CTns7.outputs.items[0].inputParameters.groups }}",
									"ua:type":"mappedArray",
									"items":{
										"groupId":"{{ n_CTns7.outputs.items[0].inputParameters.groups[0].groupId }}",
										"groupName":"{{ n_CTns7.outputs.items[0].inputParameters.groups[0].groupName }}",
										"attributes":{
											"source":"{{ n_CTns7.outputs.items[0].inputParameters.groups[0].attributes }}",
											"ua:type":"mappedArray"
										}
									}
								}
							},
							"dimension":"{{ n_CTns7.outputs.items[0].dimension }}",
							"ruleName":"{{ n_CTns7.outputs.items[0].ruleName }}",
							"filter":"{{ n_CTns7.outputs.items[0].filter }}",
							"isFilterApplied":"{{ n_CTns7.outputs.items[0].isFilterApplied }}",
							"ruleCategory":"{{ n_CTns7.outputs.items[0].ruleCategory }}"
						}
					},
					"assetId":"{{ n_iGWAQ.outputs.assetRecordId }}",
					"scanId":"{{ n_iGWAQ.outputs.scanId }}",
					"assetScanId":"{{ n_iGWAQ.outputs.assetScanId }}",
					"monitoringExperimentId":"{{ n_iGWAQ.outputs.monitoringExperimentId }}",
					"entityId":"{{ n_QO6RD.outputs.properties.entityId }}",
					"totalRecordsCount":"{{ n_gg8yH.outputs.count }}"
				}
			},
			"skip":false,
			"subTitle":"Evaluate Aggregation Rules",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.ruleVsResults.items.attributes",
					"root.parameters.ruleVsResults.items.parameters"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_jLRKk",
			"index":24,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"dimensionVsCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"count"
								]
							},
							"title":"Dimension Vs Count"
						}
					},
					"additionalProperties":false,
					"required":[
						"dimensionVsCount"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"ruleVsResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"ruleName":{
										"type":"string",
										"title":"Rule Name"
									},
									"resultVsCount":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"result":{
													"type":"string",
													"title":"Result"
												},
												"count":{
													"type":"integer",
													"title":"Count"
												},
												"ruleSetId":{
													"type":"string",
													"title":"Rule Set Id"
												}
											},
											"additionalProperties":false,
											"required":[
												"result",
												"count",
												"ruleSetId"
											]
										},
										"title":"Result Vs Count"
									},
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"ruleName",
									"resultVsCount",
									"dimension"
								]
							},
							"title":"Rule Vs Results"
						}
					},
					"additionalProperties":false,
					"required":[
						"ruleVsResults"
					]
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable(\"ruleVsResults\")) {\n    binding.setVariable(\"ruleVsResults\", [])\n}\n\ndef dimensionWiseResults = []\nfor (final def ruleVsResult in ruleVsResults) {\n    Long dimensionCount = 0L\n    String dimension = ruleVsResult[\"dimension\"]\n    List<Map<String, Object>> resultVsCount = ruleVsResult[\"resultVsCount\"]\n    for (final def entry in resultVsCount) {\n        String result = entry.get(\"result\")\n        Long count = entry.get(\"count\")\n        if (passesRule(result, dimension)) {\n            dimensionCount = count\n        }\n    }\n    def attributes = ruleVsResult[\"attributes\"] ? ruleVsResult[\"attributes\"] : [:]\n    def parameters = ruleVsResult[\"parameters\"] ? ruleVsResult[\"parameters\"] : [:]\n    def result = [\n            \"dimension\": dimension,\n            \"count\": dimensionCount,\n            \"attributes\": attributes,\n            \"parameters\": parameters\n    ]\n    dimensionWiseResults.add(result)\n}\n\nreturn [\"dimensionVsCount\": dimensionWiseResults]\n\nstatic def passesRule(String result, String dimension) {\n    switch (dimension) {\n        case \"VALIDITY\":\n            return result == \"VALID\"\n        case \"ACCURACY\":\n            return result == \"ACCURATE\"\n        case \"COMPLETENESS\":\n            return result == \"COMPLETE\"\n        case \"UNIQUENESS\":\n            return result == \"UNIQUE\"\n        case \"TIMELINESS\":\n            return result == \"TIMELINESS_OK\"\n        default:\n            return false\n    }\n}",
				"parameters":{
					"ruleVsResults":{
						"source":"{{ n_jcTaU.outputs.ruleVsResults }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_jcTaU.outputs.ruleVsResults[0].ruleId }}",
							"ruleName":"{{ n_jcTaU.outputs.ruleVsResults[0].ruleName }}",
							"resultVsCount":{
								"source":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount }}",
								"ua:type":"mappedArray",
								"items":{
									"result":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].result }}",
									"count":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].count }}",
									"ruleSetId":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].ruleSetId }}"
								}
							},
							"dimension":"{{ n_jcTaU.outputs.ruleVsResults[0].dimension }}",
							"attributes":"{{ n_jcTaU.outputs.ruleVsResults[0].attributes }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Calculate Dimension Vs Count for aggregation rule",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.ruleVsResults.items.attributes"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_XbPIR",
			"index":25,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"ruleVsRuleSetBreakdown":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"ruleSetId":{
										"type":"string",
										"title":"Rule Set Id"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"ruleSetId",
									"result",
									"count"
								]
							},
							"title":"Rule Vs Rule Set Breakdown"
						}
					},
					"additionalProperties":false,
					"required":[
						"ruleVsRuleSetBreakdown"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"ruleVsResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"resultVsCount":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"result":{
													"type":"string",
													"title":"Result"
												},
												"count":{
													"type":"integer",
													"title":"Count"
												},
												"ruleSetId":{
													"type":"string",
													"title":"Rule Set Id"
												}
											},
											"additionalProperties":false,
											"required":[
												"result",
												"count",
												"ruleSetId"
											]
										},
										"title":"Result Vs Count"
									},
									"ruleName":{
										"type":"string",
										"title":"Rule Name"
									},
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"resultVsCount",
									"ruleName",
									"dimension"
								]
							},
							"title":"Rule Vs Results"
						}
					},
					"additionalProperties":false,
					"required":[
						"ruleVsResults"
					]
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable(\"ruleVsResults\")) {\n    binding.setVariable(\"ruleVsResults\", [])\n}\n\ndef ruleVsResultBreakdown = []\n\nfor (final def ruleVsResult in ruleVsResults) {\n    def resultEntryToPublish = [:]\n    String ruleId = ruleVsResult[\"ruleId\"]\n    resultEntryToPublish[\"ruleId\"] = ruleId\n    Map<String, Object> attributes = ruleVsResult[\"attributes\"]\n    if (attributes != null) {\n        resultEntryToPublish[\"attributes\"] = attributes\n    }\n    Map<String, Object> parameters = ruleVsResult[\"parameters\"]\n    if (parameters != null) {\n        resultEntryToPublish[\"parameters\"] = parameters\n    }\n    List<Map<String, Object>> resultVsCount = ruleVsResult[\"resultVsCount\"]\n    for (final def entry in resultVsCount) {\n        String result = entry[\"result\"]\n        resultEntryToPublish[\"result\"] = result\n        String ruleSetId = entry[\"ruleSetId\"]\n        resultEntryToPublish[\"ruleSetId\"] = ruleSetId\n        Long count = entry[\"count\"]\n        resultEntryToPublish[\"count\"] = count\n        def publishingEntry = new HashMap(resultEntryToPublish)\n        ruleVsResultBreakdown.add(publishingEntry)\n    }\n}\n\nreturn [\"ruleVsRuleSetBreakdown\": ruleVsResultBreakdown]",
				"parameters":{
					"ruleVsResults":{
						"source":"{{ n_jcTaU.outputs.ruleVsResults }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_jcTaU.outputs.ruleVsResults[0].ruleId }}",
							"resultVsCount":{
								"source":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount }}",
								"ua:type":"mappedArray",
								"items":{
									"result":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].result }}",
									"count":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].count }}",
									"ruleSetId":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].ruleSetId }}"
								}
							},
							"ruleName":"{{ n_jcTaU.outputs.ruleVsResults[0].ruleName }}",
							"dimension":"{{ n_jcTaU.outputs.ruleVsResults[0].dimension }}",
							"attributes":"{{ n_jcTaU.outputs.ruleVsResults[0].attributes }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Rule Vs Ruleset breakdown calculate",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":792,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_ugjfF",
			"index":26,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_0zp4y.outputs.ruleIdVsResultCount }}",
						"value":{
							"source":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown }}",
							"ua:type":"mappedArray",
							"items":{
								"ruleId":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].ruleId }}",
								"count":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].count }}",
								"result":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].result }}",
								"attributes":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].attributes }}",
								"parameters":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].parameters }}"
							}
						}
					},
					{
						"source":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown }}",
						"value":{
							"source":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown }}",
							"ua:type":"mappedArray",
							"items":{
								"ruleId":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].ruleId }}",
								"ruleSetId":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].ruleSetId }}",
								"result":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].result }}",
								"count":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].count }}",
								"attributes":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].attributes }}",
								"parameters":"{{ n_XbPIR.outputs.result.ruleVsRuleSetBreakdown[0].parameters }}"
							}
						}
					},
					{
						"source":"{{ n_7QW4Y.outputs.dimensionVsCount }}",
						"value":{
							"source":"{{ n_jLRKk.outputs.result.dimensionVsCount }}",
							"ua:type":"mappedArray",
							"items":{
								"dimension":"{{ n_jLRKk.outputs.result.dimensionVsCount[0].dimension }}",
								"count":"{{ n_jLRKk.outputs.result.dimensionVsCount[0].count }}",
								"attributes":"{{ n_jLRKk.outputs.result.dimensionVsCount[0].attributes }}",
								"parameters":"{{ n_jLRKk.outputs.result.dimensionVsCount[0].parameters }}",
								"skippedCount":0
							}
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Update multiple variables for rule result",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":839,
				"resourceName":"loop_while",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_h3YGe",
			"index":27,
			"inputs":{
				"condition":{
					"filters":[
						{
							"property":"{{ n_C3yAv.outputs.countOfRecords.count }}",
							"filter":{
								"operator":"GT",
								"value":"0"
							}
						},
						{
							"property":"{{ n_C3yAv.outputs.simpleRulesLength }}",
							"filter":{
								"operator":"GT",
								"value":"0"
							}
						}
					],
					"operator":"AND"
				},
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"While count of records is greater than 0",
			"title":"While loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2789,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h3YGe@_klfvA-1@l",
			"id":"n_h2kxP",
			"index":28,
			"inputs":{
				"object_type":"{{ n_QO6RD.outputs.properties.entityId }}",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[],
				"page":{
					"paginateBy":"CURSOR",
					"limit":300,
					"cursor":"{{ n_fkPOm.outputs.cursor.next }}"
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":true
			},
			"skip":false,
			"subTitle":"Fetch records for Entity",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":861,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h3YGe@_klfvA-1@l",
			"id":"n_Xa0mS",
			"index":29,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"countVariable":{
							"type":"integer",
							"title":"Count Variable"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"countVariable":"=LEN({{ n_h2kxP.outputs.objects }})"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"countVariable":{
							"type":"integer",
							"title":"Count Variable"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":790,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h3YGe@_klfvA-1@l",
			"id":"n_c1N3c",
			"index":30,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_fkPOm.outputs.cursor }}",
						"value":{
							"next":"{{ n_h2kxP.outputs.cursor.next }}"
						}
					},
					{
						"source":"{{ n_fkPOm.outputs.hasMore }}",
						"value":"{{ n_h2kxP.outputs.hasMore }}"
					},
					{
						"source":"{{ n_C3yAv.outputs.countOfRecords }}",
						"value":{
							"count":"= {{ n_C3yAv.outputs.countOfRecords.count }} - {{ n_Xa0mS.outputs.countVariable }}"
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Update Pagination Variables",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":60,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h3YGe@_klfvA-1@l",
			"id":"n_cgESh",
			"index":31,
			"inputs":{
				"automationId":"6853dff05dc0036c9d64cc16",
				"runtimeConnections":{},
				"synchronous":true,
				"triggerWorkflowWithRuntimeType":"IN_MEMORY",
				"distributeWorkflowLoad":true,
				"parametersList":{
					"source":"{{ n_h2kxP.outputs.objects }}",
					"ua:type":"mappedArray",
					"items":{
						"inputs":{
							"rulesAndParams":{
								"source":"{{ n_P0Wpj.outputs.items }}",
								"ua:type":"mappedArray",
								"items":{
									"ruleId":"{{ n_P0Wpj.outputs.items[0].ruleId }}",
									"inputParameters":{
										"attributes":"{{ n_P0Wpj.outputs.items[0].inputParameters.attributes }}",
										"parameters":"{{ n_P0Wpj.outputs.items[0].inputParameters.parameters }}"
									},
									"dimension":"{{ n_P0Wpj.outputs.items[0].dimension }}",
									"ruleName":"{{ n_P0Wpj.outputs.items[0].ruleName }}",
									"filter":"{{ n_P0Wpj.outputs.items[0].filter }}"
								}
							}
						},
						"scanId":"{{ n_iGWAQ.outputs.scanId }}",
						"monitoringExperimentId":"{{ n_iGWAQ.outputs.monitoringExperimentId }}",
						"assetRecordId":"{{ n_iGWAQ.outputs.assetRecordId }}",
						"assetScanId":"{{ n_iGWAQ.outputs.assetScanId }}",
						"record":"{{ n_h2kxP.outputs.objects[0].properties }}",
						"recordId":"{{ n_h2kxP.outputs.objects[0].id }}",
						"entityId":"{{ n_QO6RD.outputs.properties.entityId }}"
					}
				},
				"version":"-1"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						{
							"metricType":"WORKFLOW_NODE_EXECUTION",
							"tags":[
								
							]
						}
					]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation (batch)",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":99,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h3YGe@_klfvA-1@l",
			"id":"_2x7Mk",
			"index":32,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_cgESh.outputs.result }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Result Loop",
			"title":"For each result",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":99,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_2x7Mk@n_h3YGe@_klfvA-1@l@l",
			"id":"_rHkR4",
			"index":33,
			"inputs":{
				"loop":"_2x7Mk",
				"conditions":{
					"filters":[
						{
							"property":"{{ _2x7Mk.outputs.item.ruleIdVsResult }}",
							"filter":{
								"operator":"MISSING"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":801,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_2x7Mk@n_h3YGe@_klfvA-1@l@l",
			"id":"_lhCkS",
			"index":34,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"ruleIdVsResultCount",
						"dimensionVsCount",
						"ruleVsRulesetBreakdown"
					],
					"properties":{
						"ruleIdVsResultCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"result",
									"count",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Id Vs Result Count"
						},
						"dimensionVsCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									},
									"skippedCount":{
										"type":"integer",
										"title":"Skipped Count"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"count",
									"attributes",
									"parameters",
									"skippedCount"
								]
							},
							"title":"Dimension Vs Count"
						},
						"ruleVsRulesetBreakdown":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"ruleSetId":{
										"type":"string",
										"title":"Rule Set Id"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"count",
									"result",
									"ruleId",
									"ruleSetId",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Vs Ruleset Breakdown"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"ruleIdVsResult",
						"dimensionVsCount",
						"ruleIdVsRuleName",
						"ruleVsRulesetBreakdown",
						"ruleIdVsResultCount"
					],
					"properties":{
						"ruleIdVsResult":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"ruleSetId":{
										"type":"string",
										"title":"Rule Set Id"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"result",
									"dimension",
									"ruleSetId",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Id Vs Result"
						},
						"dimensionVsCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									},
									"skippedCount":{
										"type":"integer",
										"title":"Skipped Count"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"count",
									"attributes",
									"parameters",
									"skippedCount"
								]
							},
							"title":"Dimension Vs Count"
						},
						"ruleIdVsRuleName":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Rule Name"
						},
						"ruleVsRulesetBreakdown":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"ruleSetId":{
										"type":"string",
										"title":"Rule Set Id"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"ruleSetId",
									"result",
									"count",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Vs Rule Set Breakdown"
						},
						"ruleIdVsResultCount":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"count",
									"result",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Id Vs Result Count"
						}
					}
				},
				"code":"if (binding.hasVariable(\"ruleIdVsResult\")) {\n    def ruleIdVsResultCount = (binding.hasVariable(\"ruleIdVsResultCount\") &&\n            binding.getVariable(\"ruleIdVsResultCount\") instanceof List &&\n            binding.getVariable(\"ruleIdVsResultCount\") != null) ?\n            binding.getVariable(\"ruleIdVsResultCount\") : []\n\n    def dimensionVsCount = (binding.hasVariable(\"dimensionVsCount\") &&\n            binding.getVariable(\"dimensionVsCount\") instanceof List &&\n            binding.getVariable(\"dimensionVsCount\") != null) ?\n            binding.getVariable(\"dimensionVsCount\") : []\n\n    def ruleVsRulesetBreakdown = (binding.hasVariable(\"ruleVsRulesetBreakdown\") &&\n            binding.getVariable(\"ruleVsRulesetBreakdown\") instanceof List &&\n            binding.getVariable(\"ruleVsRulesetBreakdown\") != null) ?\n            binding.getVariable(\"ruleVsRulesetBreakdown\") : []\n\n    def ruleIdVsRuleName = (binding.hasVariable(\"ruleIdVsRuleName\") &&\n            binding.getVariable(\"ruleIdVsRuleName\") instanceof Map &&\n            binding.getVariable(\"ruleIdVsRuleName\") != null) ?\n            binding.getVariable(\"ruleIdVsRuleName\") : [:]\n\n    for (final def entry in ruleIdVsResult) {\n        String ruleId = entry.ruleId\n        String result = entry.result\n        String dimension = entry.dimension\n        String ruleSetId = entry.ruleSetId\n        String ruleName = entry.ruleName\n        def attributes = entry.attributes ?: [:]\n        def parameters = entry.parameters ?: [:]\n\n        // --------- ruleIdVsResultCountList Update ---------\n        def resultEntry = ruleIdVsResultCount.find {\n            it.ruleId == ruleId &&\n                    it.result == result &&\n                    it.attributes == attributes &&\n                    it.parameters == parameters\n        }\n        if (resultEntry) {\n            resultEntry.count += 1\n        } else {\n            ruleIdVsResultCount.add([\n                    ruleId       : ruleId,\n                    attributes   : attributes,\n                    parameters   : parameters,\n                    result       : result,\n                    count        : 1\n            ])\n        }\n\n        // --------- dimensionVsCountList Update ---------\n        def dimEntry = dimensionVsCount.find {\n            it.dimension == dimension &&\n                    it.attributes == attributes &&\n                    it.parameters == parameters\n        }\n        if (!dimEntry) {\n            dimEntry = [\n                    dimension    : dimension,\n                    attributes   : attributes,\n                    parameters   : parameters,\n                    skippedCount : 0,\n                    count        : 0\n            ]\n            dimensionVsCount.add(dimEntry)\n        } else {\n            // Ensure fields exist if entry was already in the list\n            if (dimEntry.skippedCount == null) {\n                dimEntry.skippedCount = 0\n            }\n            if (dimEntry.count == null) {\n                dimEntry.count = 0\n            }\n        }\n\n        if (passesRule(result, dimension)) {\n            dimEntry.count += 1\n        }\n\n        if (result == \"SKIPPED\") {\n            dimEntry.skippedCount += 1\n        }\n\n        // --------- ruleVsRulesetBreakdownList Update ---------\n        def breakdownEntry = ruleVsRulesetBreakdown.find {\n            it.ruleId == ruleId &&\n                    it.attributes == attributes &&\n                    it.parameters == parameters &&\n                    it.ruleSetId == ruleSetId &&\n                    it.result == result\n        }\n        if (breakdownEntry) {\n            breakdownEntry.count += 1\n        } else {\n            ruleVsRulesetBreakdown.add([\n                    ruleId       : ruleId,\n                    attributes   : attributes,\n                    parameters   : parameters,\n                    ruleSetId    : ruleSetId,\n                    result       : result,\n                    count        : 1\n            ])\n        }\n\n        // Store rule name (no change here)\n        ruleIdVsRuleName[ruleId] = ruleName\n    }\n\n    // Save updated lists to binding\n    binding.setVariable(\"ruleIdVsResultCount\", ruleIdVsResultCount)\n    binding.setVariable(\"dimensionVsCount\", dimensionVsCount)\n    binding.setVariable(\"ruleVsRulesetBreakdown\", ruleVsRulesetBreakdown)\n    binding.setVariable(\"ruleIdVsRuleName\", ruleIdVsRuleName)\n\n    return [\n            \"ruleIdVsResultCount\"      : ruleIdVsResultCount,\n            \"dimensionVsCount\"         : dimensionVsCount,\n            \"ruleVsRulesetBreakdown\"   : ruleVsRulesetBreakdown,\n            \"ruleVsRuleName\"           : ruleIdVsRuleName\n    ]\n}\n\nstatic def passesRule(String result, String dimension) {\n    switch (dimension) {\n        case \"VALIDITY\":\n            return result == \"VALID\"\n        case \"ACCURACY\":\n            return result == \"ACCURATE\"\n        case \"COMPLETENESS\":\n            return result == \"COMPLETE\"\n        case \"UNIQUENESS\":\n            return result == \"UNIQUE\"\n        case \"TIMELINESS\":\n            return result == \"TIMELINESS_OK\"\n        default:\n            return false\n    }\n}\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"ruleIdVsRuleName":"{{ n_Oo61g.outputs.ruleIdVsRuleName }}",
					"dimensionVsCount":{
						"ua:type":"mappedArray",
						"items":{
							"dimension":"{{ n_7QW4Y.outputs.dimensionVsCount[0].dimension }}",
							"count":"{{ n_7QW4Y.outputs.dimensionVsCount[0].count }}",
							"attributes":"{{ n_7QW4Y.outputs.dimensionVsCount[0].attributes }}",
							"parameters":"{{ n_7QW4Y.outputs.dimensionVsCount[0].parameters }}",
							"skippedCount":"{{ n_7QW4Y.outputs.dimensionVsCount[0].skippedCount }}"
						},
						"source":"{{ n_7QW4Y.outputs.dimensionVsCount }}"
					},
					"ruleVsRulesetBreakdown":{
						"source":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0].ruleId }}",
							"ruleSetId":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0].ruleSetId }}",
							"result":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0].result }}",
							"count":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0].count }}",
							"attributes":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0].attributes }}",
							"parameters":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0].parameters }}"
						}
					},
					"ruleIdVsResultCount":{
						"source":"{{ n_0zp4y.outputs.ruleIdVsResultCount }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].ruleId }}",
							"count":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].count }}",
							"result":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].result }}",
							"attributes":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].attributes }}",
							"parameters":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].parameters }}"
						}
					},
					"ruleIdVsResult":{
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ _2x7Mk.outputs.item.ruleIdVsResult[0].ruleId }}",
							"result":"{{ _2x7Mk.outputs.item.ruleIdVsResult[0].result }}",
							"dimension":"{{ _2x7Mk.outputs.item.ruleIdVsResult[0].dimension }}",
							"ruleSetId":"{{ _2x7Mk.outputs.item.ruleIdVsResult[0].ruleSetId }}",
							"attributes":"{{ _2x7Mk.outputs.item.ruleIdVsResult[0].attributes }}",
							"parameters":"{{ _2x7Mk.outputs.item.ruleIdVsResult[0].parameters }}"
						},
						"source":"{{ _2x7Mk.outputs.item.ruleIdVsResult }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":792,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_2x7Mk@n_h3YGe@_klfvA-1@l@l",
			"id":"_3ZCVC",
			"index":35,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_0zp4y.outputs.ruleIdVsResultCount }}",
						"value":{
							"ua:type":"mappedArray",
							"source":"{{ _lhCkS.outputs.result.ruleIdVsResultCount }}",
							"items":{
								"ruleId":"{{ _lhCkS.outputs.result.ruleIdVsResultCount[0].ruleId }}",
								"count":"{{ _lhCkS.outputs.result.ruleIdVsResultCount[0].count }}",
								"result":"{{ _lhCkS.outputs.result.ruleIdVsResultCount[0].result }}",
								"attributes":"{{ _lhCkS.outputs.result.ruleIdVsResultCount[0].attributes }}",
								"parameters":"{{ _lhCkS.outputs.result.ruleIdVsResultCount[0].parameters }}"
							}
						}
					},
					{
						"source":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown }}",
						"value":{
							"source":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown }}",
							"ua:type":"mappedArray",
							"items":{
								"ruleId":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown[0].ruleId }}",
								"ruleSetId":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown[0].ruleSetId }}",
								"result":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown[0].result }}",
								"count":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown[0].count }}",
								"attributes":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown[0].attributes }}",
								"parameters":"{{ _lhCkS.outputs.result.ruleVsRulesetBreakdown[0].parameters }}"
							}
						}
					},
					{
						"source":"{{ n_7QW4Y.outputs.dimensionVsCount }}",
						"value":{
							"source":"{{ _lhCkS.outputs.result.dimensionVsCount }}",
							"ua:type":"mappedArray",
							"items":{
								"dimension":"{{ _lhCkS.outputs.result.dimensionVsCount[0].dimension }}",
								"count":"{{ _lhCkS.outputs.result.dimensionVsCount[0].count }}",
								"attributes":"{{ _lhCkS.outputs.result.dimensionVsCount[0].attributes }}",
								"parameters":"{{ _lhCkS.outputs.result.dimensionVsCount[0].parameters }}",
								"skippedCount":"{{ _lhCkS.outputs.result.dimensionVsCount[0].skippedCount }}"
							}
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":801,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_iwuZh",
			"index":36,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"durationMillis":{
							"type":"integer",
							"title":"Duration Millis"
						}
					},
					"additionalProperties":false,
					"required":[
						"durationMillis"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"startTimeMillis":{
							"type":"integer",
							"title":"Start Time Millis"
						}
					},
					"additionalProperties":false,
					"required":[
						"startTimeMillis"
					]
				},
				"compile_static":false,
				"code":"Long value = startTimeMillis instanceof Long ? (Long) startTimeMillis : Long.parseLong(startTimeMillis.toString());\n\ndef durationMillis = System.currentTimeMillis().longValue() - value;\nreturn [\"durationMillis\": durationMillis]",
				"parameters":{
					"startTimeMillis":"{{ n_wVLiy.outputs.result.currentTimeMillis }}"
				}
			},
			"skip":false,
			"subTitle":"Get Duration of Scan",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":801,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_j6EEC",
			"index":37,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"dimensionAvgScores":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"averageScore":{
										"type":"integer",
										"title":"Average Score"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"averageScore"
								]
							},
							"title":"Dimension Avg Scores"
						},
						"overallAverageScore":{
							"type":"integer",
							"title":"Overall Average Score"
						}
					},
					"additionalProperties":false,
					"required":[
						"dimensionAvgScores",
						"overallAverageScore"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"totalRecordsCount":{
							"type":"integer",
							"title":"Total Records Count"
						},
						"dimensionVsCountList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"dimension":{
										"type":"string",
										"title":"Dimension"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									},
									"skippedCount":{
										"type":"integer",
										"title":"Skipped Count"
									}
								},
								"additionalProperties":false,
								"required":[
									"dimension",
									"count",
									"attributes",
									"parameters",
									"skippedCount"
								]
							},
							"title":"Dimension Vs Count List"
						}
					},
					"additionalProperties":false,
					"required":[
						"totalRecordsCount",
						"dimensionVsCountList"
					]
				},
				"compile_static":false,
				"code":"if (binding.hasVariable(\"totalRecordsCount\")) {\n    if (!binding.hasVariable(\"dimensionVsCountList\")) {\n        binding.setVariable(\"dimensionVsCountList\", [])\n    }\n\n    List<Map<String, Object>> dimensionVsCountList = binding.getVariable(\"dimensionVsCountList\")\n    Long totalRecordsCount = binding.getVariable(\"totalRecordsCount\")\n\n    // Group by dimension\n    Map<String, List<Map>> groupedByDimension = dimensionVsCountList.groupBy { it.dimension }\n\n    List<Map<String, Object>> dimensionVsAvgScores = []\n    Long sumOfDimensionScores = 0\n\n    groupedByDimension.each { dimension, entries ->\n        Long totalCount = entries.sum { it.count ?: 0 }\n        Long totalSkippedCount = entries.sum { it.skippedCount ?: 0 }\n        int n = entries.size()\n\n        // Deduct skippedCount from totalRecordsCount for this dimension's calculation\n        Long effectiveTotalRecords = (totalRecordsCount * n) - totalSkippedCount\n\n        // Average = (totalCount / (effectiveTotalRecords * n)) * 100\n        Long score = 0\n        if (effectiveTotalRecords > 0 && n > 0) {\n            score = Math.round((totalCount * 100.0) / effectiveTotalRecords)\n        }\n\n        dimensionVsAvgScores << [\n                dimension    : dimension,\n                averageScore : score\n        ]\n\n        sumOfDimensionScores += score\n    }\n\n    Long overallScore = null\n    if (!dimensionVsAvgScores.isEmpty()) {\n        overallScore = Math.round(sumOfDimensionScores / dimensionVsAvgScores.size())\n    }\n\n    return [\n            dimensionAvgScores    : dimensionVsAvgScores,\n            overallAverageScore   : overallScore\n    ]\n}",
				"parameters":{
					"totalRecordsCount":"{{ n_gg8yH.outputs.count }}",
					"dimensionVsCountList":{
						"ua:type":"mappedArray",
						"items":{
							"dimension":"{{ n_7QW4Y.outputs.dimensionVsCount[0].dimension }}",
							"count":"{{ n_7QW4Y.outputs.dimensionVsCount[0].count }}",
							"attributes":"{{ n_7QW4Y.outputs.dimensionVsCount[0].attributes }}",
							"parameters":"{{ n_7QW4Y.outputs.dimensionVsCount[0].parameters }}",
							"skippedCount":"{{ n_7QW4Y.outputs.dimensionVsCount[0].skippedCount }}"
						},
						"source":"{{ n_7QW4Y.outputs.dimensionVsCount }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Calculate Dimension Vs Count",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":801,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_evknv",
			"index":38,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"ruleIdVsResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"resultBreakdown":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"result":{
													"type":"string",
													"title":"Result"
												},
												"count":{
													"type":"integer",
													"title":"Count"
												}
											},
											"additionalProperties":false,
											"required":[
												"result",
												"count"
											]
										},
										"title":"Result Breakdown"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									},
									"filter":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Filter"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"resultBreakdown",
									"attributes",
									"parameters",
									"filter"
								]
							},
							"title":"Rule Id Vs Results"
						}
					},
					"additionalProperties":false,
					"required":[
						"ruleIdVsResults"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"rulesAndParams":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"filter":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Filter"
									},
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									}
								},
								"additionalProperties":false,
								"required":[
									"filter",
									"ruleId"
								]
							},
							"title":"Rules And Params"
						},
						"ruleIdVsResultCountList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"count":{
										"type":"integer",
										"title":"Count"
									},
									"result":{
										"type":"string",
										"title":"Result"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"count",
									"result",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Id Vs Result Count List"
						}
					},
					"additionalProperties":false,
					"required":[
						"rulesAndParams",
						"ruleIdVsResultCountList"
					]
				},
				"compile_static":false,
				"code":"if (!binding.hasVariable(\"ruleIdVsResultCountList\")) {\n    binding.setVariable(\"ruleIdVsResultCountList\", [])\n}\nif (!binding.hasVariable(\"rulesAndParams\")) {\n    binding.setVariable(\"rulesAndParams\", [])\n}\n\nList<Map<String, Object>> ruleIdVsResultCountList = binding.getVariable(\"ruleIdVsResultCountList\")\nList<Map<String, Object>> rulesAndParams = binding.getVariable(\"rulesAndParams\")\n\nList<Map<String, Object>> ruleIdVsResults = []\n\n// Lookup map for rule metadata (ruleId -> rule entry)\nMap<String, Map<String, Object>> ruleIdToParamsMap = [:]\nrulesAndParams.each { ruleEntry ->\n    ruleIdToParamsMap[ruleEntry.ruleId] = ruleEntry\n}\n\nruleIdVsResultCountList.each { entry ->\n    String ruleId = entry.ruleId\n    String result = entry.result\n    Long count = entry.count ?: 0\n\n    // Default to empty maps if null\n    def attributes = entry.attributes ?: [:]\n    def parameters = entry.parameters ?: [:]\n\n    // Find existing result group by ruleId, attributes, and parameters\n    def existing = ruleIdVsResults.find {\n        it.ruleId == ruleId &&\n        it.attributes == attributes &&\n        it.parameters == parameters\n    }\n\n    if (existing) {\n        // Try to find if this result already exists in resultBreakdown\n        def resultEntry = existing.resultBreakdown.find { it.result == result }\n        if (resultEntry) {\n            resultEntry.count += count\n        } else {\n            existing.resultBreakdown << [result: result, count: count]\n        }\n    } else {\n        def newEntry = [\n            ruleId         : ruleId,\n            attributes     : attributes,\n            parameters     : parameters,\n            resultBreakdown: [[result: result, count: count]]\n        ]\n\n        // Add filter info if available\n        if (ruleIdToParamsMap.containsKey(ruleId)) {\n            def ruleParams = ruleIdToParamsMap[ruleId]\n            newEntry[\"filter\"] = ruleParams.filter ?: [:]\n        }\n\n        ruleIdVsResults << newEntry\n    }\n}\n\nreturn [\"ruleIdVsResults\": ruleIdVsResults]",
				"parameters":{
					"rulesAndParams":{
						"source":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams }}",
						"ua:type":"mappedArray",
						"items":{
							"filter":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].filter }}",
							"ruleId":"{{ n_QO6RD.outputs.properties.associatedRules.rulesAndParams[0].ruleId }}"
						}
					},
					"ruleIdVsResultCountList":{
						"source":"{{ n_0zp4y.outputs.ruleIdVsResultCount }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].ruleId }}",
							"count":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].count }}",
							"result":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].result }}",
							"attributes":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].attributes }}",
							"parameters":"{{ n_0zp4y.outputs.ruleIdVsResultCount[0].parameters }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Create rules vs results",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_59b6q",
			"index":39,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"ruleVsRuleSetResults"
					],
					"properties":{
						"ruleVsRuleSetResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"resultVsCount":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"result":{
													"type":"string",
													"title":"Result"
												},
												"count":{
													"type":"integer",
													"title":"Count"
												},
												"ruleSetId":{
													"type":"string",
													"title":"Rule Set Id"
												}
											},
											"additionalProperties":false,
											"required":[
												"result",
												"count",
												"ruleSetId"
											]
										},
										"title":"Result Vs Count"
									},
									"ruleName":{
										"type":"string",
										"title":"Rule Name"
									},
									"attributes":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Attributes"
									},
									"parameters":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Parameters"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"resultVsCount",
									"attributes",
									"parameters"
								]
							},
							"title":"Rule Vs Rule Set Results"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"ruleVsRulesetBreakdown",
						"ruleVsRuleName",
						"aggregationRulesVsRulesetResults"
					],
					"properties":{
						"ruleVsRulesetBreakdown":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Rule Vs Ruleset Breakdown"
						},
						"ruleVsRuleName":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Vs Rule Name"
						},
						"aggregationRulesVsRulesetResults":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"ruleId":{
										"type":"string",
										"title":"Rule Id"
									},
									"resultVsCount":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"result":{
													"type":"string",
													"title":"Result"
												},
												"count":{
													"type":"integer",
													"title":"Count"
												},
												"ruleSetId":{
													"type":"string",
													"title":"Rule Set Id"
												}
											},
											"additionalProperties":false,
											"required":[
												"result",
												"count",
												"ruleSetId"
											]
										},
										"title":"Result Vs Count"
									},
									"ruleName":{
										"type":"string",
										"title":"Rule Name"
									}
								},
								"additionalProperties":false,
								"required":[
									"ruleId",
									"resultVsCount",
									"ruleName"
								]
							},
							"title":"Aggregation Rules Vs Ruleset Results"
						}
					}
				},
				"code":"if (!binding.hasVariable(\"ruleVsRulesetBreakdown\") ||\n        !(binding.getVariable(\"ruleVsRulesetBreakdown\") instanceof List) ||\n        binding.getVariable(\"ruleVsRulesetBreakdown\") == null) {\n    binding.setVariable(\"ruleVsRulesetBreakdown\", [])\n}\nif (!binding.hasVariable(\"ruleVsRuleName\") ||\n        !(binding.getVariable(\"ruleVsRuleName\") instanceof Map) ||\n        binding.getVariable(\"ruleVsRuleName\") == null) {\n    binding.setVariable(\"ruleVsRuleName\", [:])\n}\nif (!binding.hasVariable(\"aggregationRulesVsRulesetResults\") ||\n        !(binding.getVariable(\"aggregationRulesVsRulesetResults\") instanceof List) ||\n        binding.getVariable(\"aggregationRulesVsRulesetResults\") == null) {\n    binding.setVariable(\"aggregationRulesVsRulesetResults\", [])\n}\n\nList<Map<String, Object>> ruleVsRulesetBreakdownList = binding.getVariable(\"ruleVsRulesetBreakdown\")\nMap<String, String> ruleVsRuleName = binding.getVariable(\"ruleVsRuleName\")\nList<Map<String, Object>> aggregationRulesVsRulesetResults = binding.getVariable(\"aggregationRulesVsRulesetResults\")\n\nList<Map<String, Object>> ruleVsRuleSetResults = []\n\nruleVsRulesetBreakdownList.each { entry ->\n    String ruleId = entry.ruleId\n    String ruleSetId = entry.ruleSetId\n    String result = entry.result\n    Long count = entry.count ?: 0\n    def attribute = entry.attributes ?: [:]\n    def parameter = entry.parameters ?: [:]\n\n    // Find or create matching group in final result list\n    def existingGroup = ruleVsRuleSetResults.find {\n        it.ruleId == ruleId &&\n        it.attributes == attribute &&\n        it.parameters == parameter\n    }\n\n    if (!existingGroup) {\n        existingGroup = [\n            ruleId       : ruleId,\n            ruleName     : ruleVsRuleName[ruleId] ?: \"\",\n            attributes   : attribute,\n            parameters   : parameter,\n            resultVsCount: []\n        ]\n        ruleVsRuleSetResults.add(existingGroup)\n    }\n\n    // Append to result breakdown\n    existingGroup.resultVsCount.add([\n        ruleSetId: ruleSetId,\n        result   : result,\n        count    : count\n    ])\n}\n\n// Add any aggregation rules that already follow the updated format\nruleVsRuleSetResults.addAll(aggregationRulesVsRulesetResults)\n\nreturn [\"ruleVsRuleSetResults\": ruleVsRuleSetResults]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"ruleVsRuleName":"{{ n_Oo61g.outputs.ruleIdVsRuleName }}",
					"aggregationRulesVsRulesetResults":{
						"source":"{{ n_jcTaU.outputs.ruleVsResults }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_jcTaU.outputs.ruleVsResults[0].ruleId }}",
							"resultVsCount":{
								"source":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount }}",
								"ua:type":"mappedArray",
								"items":{
									"result":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].result }}",
									"count":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].count }}",
									"ruleSetId":"{{ n_jcTaU.outputs.ruleVsResults[0].resultVsCount[0].ruleSetId }}"
								}
							},
							"ruleName":"{{ n_jcTaU.outputs.ruleVsResults[0].ruleName }}"
						}
					},
					"ruleVsRulesetBreakdown":{
						"source":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown }}",
						"ua:type":"mappedArray",
						"items":"{{ n_7OVvM.outputs.ruleVsRuleSetBreakdown[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Convert rule vs ruleset results map to list format",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":831,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_h8TCK",
			"index":40,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_59b6q.outputs.result.ruleVsRuleSetResults }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"For Each Rule Update Rule Scan Entry",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h8TCK@_klfvA-1@l",
			"id":"n_EBVX4",
			"index":41,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"filter":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Filter"
						},
						"inputParameters":{
							"type":"object",
							"properties":{
								"attributes":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Attributes"
								},
								"parameters":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Parameters"
								}
							},
							"additionalProperties":false,
							"title":"Input Parameters",
							"required":[
								"attributes",
								"parameters"
							]
						},
						"dimension":{
							"type":"string",
							"title":"Dimension"
						}
					},
					"additionalProperties":false,
					"required":[
						"inputParameters",
						"dimension"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"ruleIdVsProperties":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Rule Id Vs Properties"
						},
						"ruleId":{
							"type":"string",
							"title":"Rule Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"ruleIdVsProperties",
						"ruleId"
					]
				},
				"compile_static":false,
				"code":"if (binding.hasVariable(\"ruleIdVsProperties\") && binding.hasVariable(\"ruleId\")) {\n    Map<String, Object> properties = ruleIdVsProperties.get(ruleId)\n    if (properties == null) {\n        properties = [:]\n    }\n    Object filter = properties.get(\"filter\")\n    Map<String, Object> inputParameters = properties.get(\"inputParameters\")\n    String dimension = properties.get(\"dimension\")\n    return [\"filter\": filter, \"inputParameters\": inputParameters, \"dimension\": dimension]\n}\nreturn [\"filter\": null, \"inputParameters\": [:], \"dimension\": null]",
				"parameters":{
					"ruleIdVsProperties":"{{ n_BX1HD.outputs.result.ruleIdVsRuleProperties }}",
					"ruleId":"{{ n_h8TCK.outputs.item.ruleId }}"
				}
			},
			"skip":false,
			"subTitle":"Get Filter, InputParameters, Dimension For RuleId",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h8TCK@_klfvA-1@l",
			"id":"n_FJjLY",
			"index":42,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_EBVX4.outputs.result.filter }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":664,
				"resourceName":"analytics_by_unifyapps_filter_to_sql_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_FJjLY@n_h8TCK@_klfvA-1@l@y",
			"id":"n_ZprAA",
			"index":43,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"resolvedFilter":{
								"filter":"{{ n_EBVX4.outputs.result.filter }}"
							}
						}
					],
					"operator":"AND"
				},
				"entityType":"{{ n_QO6RD.outputs.properties.entityId }}",
				"group":"ENTITY_REPORTING"
			},
			"skip":true,
			"subTitle":"Get SQL Condition from Filter",
			"title":"Converts filter to SQL condition",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":803,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_FJjLY@n_h8TCK@_klfvA-1@l@y",
			"id":"n_O6rxZ",
			"index":44,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"isEmpty"
					],
					"properties":{
						"isEmpty":{
							"type":"boolean",
							"title":"Is Empty"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"condition"
					],
					"properties":{
						"condition":{
							"type":"string",
							"title":"Condition"
						}
					}
				},
				"code":"if (binding.hasVariable(\"condition\")) {\n  return [\"isEmpty\": condition == null || condition.isEmpty()]\n}\nreturn [\"isEmpty\": true]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"condition":"{{ n_ZprAA.outputs.condition }}"
				}
			},
			"skip":true,
			"subTitle":"Check if condition is empty",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":757,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_FJjLY@n_h8TCK@_klfvA-1@l@y",
			"id":"n_COFmh",
			"index":45,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_O6rxZ.outputs.result.isEmpty }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":737,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_COFmh@n_FJjLY@n_h8TCK@_klfvA-1@l@y@n",
			"id":"n_xleVE",
			"index":46,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"count":{
									"type":"integer",
									"title":"Count"
								}
							},
							"additionalProperties":false,
							"title":"Columns",
							"required":[
								"count"
							]
						}
					},
					"additionalProperties":false,
					"required":[
						"columns"
					]
				},
				"query":"SELECT COUNT(*) AS count FROM ENTITY_{{ n_QO6RD.outputs.properties.entityId }} WHERE {{ n_ZprAA.outputs.condition }}",
				"group":"ENTITY_REPORTING"
			},
			"skip":true,
			"subTitle":"Analytics",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.inputParameters.attributes",
					"root.record.inputParameters.parameters"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2793,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_h8TCK@_klfvA-1@l",
			"id":"n_f8Efy",
			"index":47,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"data_quality_rule_scan",
				"skipIfBlank":false,
				"record":{
					"ruleName":"{{ n_h8TCK.outputs.item.ruleName }}",
					"assetScanId":"{{ n_iGWAQ.outputs.assetScanId }}",
					"scanId":"{{ n_iGWAQ.outputs.scanId }}",
					"filter":"{{ n_EBVX4.outputs.result.filter }}",
					"totalRecords":"{{ n_gg8yH.outputs.count }}",
					"filteredRecords":"=IF(ISBLANK({{ n_xleVE.outputs.objects[0].columns.count }}), 0, {{ n_xleVE.outputs.objects[0].columns.count }})",
					"ruleSetBreakdown":{
						"source":"{{ n_h8TCK.outputs.item.resultVsCount }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleSetId":"{{ n_h8TCK.outputs.item.resultVsCount[0].ruleSetId }}",
							"result":"{{ n_h8TCK.outputs.item.resultVsCount[0].result }}",
							"count":"{{ n_h8TCK.outputs.item.resultVsCount[0].count }}"
						}
					},
					"inputParameters":{
						"attributes":"{{ n_EBVX4.outputs.result.inputParameters.attributes }}",
						"parameters":"{{ n_EBVX4.outputs.result.inputParameters.parameters }}"
					},
					"dimension":"{{ n_EBVX4.outputs.result.dimension }}",
					"ruleId":"{{ n_h8TCK.outputs.item.ruleId }}"
				}
			},
			"skip":true,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.dimensionAverageScores.items.averageScore",
					"root.record.ruleResults.items.resultBreakdown.items.result",
					"root.record.ruleResults.items.resultBreakdown.items.count",
					"root.record.ruleResults.items.filter",
					"root.record.ruleResults.items.attributes",
					"root.record.ruleResults.items.parameters"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2718,
				"resourceName":"storage_by_unifyapps_update_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_FbVv6",
			"index":48,
			"inputs":{
				"recordId":"{{ n_iGWAQ.outputs.assetScanId }}",
				"writeThroughSessionVariables":false,
				"object_type":"data_quality_asset_scan",
				"record":{
					"scanId":"{{ n_iGWAQ.outputs.scanId }}",
					"assetId":"{{ n_iGWAQ.outputs.assetRecordId }}",
					"sourceType":"{{ n_QO6RD.outputs.properties.sourceType }}",
					"totalRecordsCount":"{{ n_gg8yH.outputs.count }}",
					"status":"COMPLETED",
					"executionTime":"{{ n_wVLiy.outputs.result.currentTimeMillis }}",
					"scanDurationMillis":"{{ n_iwuZh.outputs.result.durationMillis }}",
					"averageOverallScore":"{{ n_j6EEC.outputs.result.overallAverageScore }}",
					"dimensionAverageScores":{
						"source":"{{ n_j6EEC.outputs.result.dimensionAvgScores }}",
						"ua:type":"mappedArray",
						"items":{
							"dimension":"{{ n_j6EEC.outputs.result.dimensionAvgScores[0].dimension }}",
							"averageScore":"{{ n_j6EEC.outputs.result.dimensionAvgScores[0].averageScore }}"
						}
					},
					"ruleResults":{
						"source":"{{ n_evknv.outputs.result.ruleIdVsResults }}",
						"ua:type":"mappedArray",
						"items":{
							"ruleId":"{{ n_evknv.outputs.result.ruleIdVsResults[0].ruleId }}",
							"resultBreakdown":{
								"source":"{{ n_evknv.outputs.result.ruleIdVsResults[0].resultBreakdown }}",
								"ua:type":"mappedArray",
								"items":{
									"result":"{{ n_evknv.outputs.result.ruleIdVsResults[0].resultBreakdown[0].result }}",
									"count":"{{ n_evknv.outputs.result.ruleIdVsResults[0].resultBreakdown[0].count }}"
								}
							},
							"attributes":"{{ n_evknv.outputs.result.ruleIdVsResults[0].attributes }}",
							"parameters":"{{ n_evknv.outputs.result.ruleIdVsResults[0].parameters }}",
							"filter":"{{ n_evknv.outputs.result.ruleIdVsResults[0].filter }}"
						}
					}
				},
				"upsert":true
			},
			"skip":false,
			"subTitle":"Update status of scan",
			"title":"Update an existing record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"delay",
				"resourceVersion":101,
				"resourceName":"delay_for",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_bE7Ey",
			"index":49,
			"inputs":{
				"duration":10,
				"unit":"SECONDS"
			},
			"skip":false,
			"subTitle":"Delay",
			"title":"Set delay duration",
			"type":"DELAY"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":107,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_QVrg2",
			"index":50,
			"inputs":{
				"automationId":"689793347d8037fd8dcc86ee",
				"runtimeConnections":{},
				"synchronous":true,
				"triggerWorkflowWithRuntimeType":"DEFAULT",
				"version":"-1",
				"parameters":{
					"assetScanId":"{{ n_iGWAQ.outputs.assetScanId }}",
					"scanId":"{{ n_iGWAQ.outputs.scanId }}"
				}
			},
			"skip":false,
			"subTitle":"Publish Event",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":795,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_klfvA-1",
			"id":"n_1QJrG",
			"index":51,
			"inputs":{
				"result":"{{ n_FbVv6.outputs.object }}"
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		"dqm",
		"Internal"
	],
	"version":115
}