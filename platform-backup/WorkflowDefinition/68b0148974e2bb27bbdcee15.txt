{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1756901133760,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760102422362,
		"deployedBy":1,
		"deployedDefinitionId":"68e90816aa15f745769e14c6",
		"status":"DEPLOYED",
		"version":64,
		"workflowVersion":83
	},
	"edges":[
		{
			"fromNodeId":"n_R5ujw",
			"priority":0,
			"skip":false,
			"toNodeId":"0DA7Z",
			"type":"next"
		},
		{
			"fromNodeId":"0DA7Z",
			"priority":0,
			"skip":false,
			"toNodeId":"mwIiy",
			"type":"next"
		},
		{
			"fromNodeId":"mwIiy",
			"priority":0,
			"skip":false,
			"toNodeId":"T0gif",
			"type":"next"
		},
		{
			"fromNodeId":"T0gif",
			"priority":0,
			"skip":false,
			"toNodeId":"qeqQ7",
			"type":"next"
		},
		{
			"fromNodeId":"qeqQ7",
			"priority":0,
			"skip":false,
			"toNodeId":"n_QgLL5",
			"type":"next"
		},
		{
			"fromNodeId":"n_QgLL5",
			"priority":0,
			"skip":false,
			"toNodeId":"MtlCa",
			"type":"next"
		},
		{
			"fromNodeId":"MtlCa",
			"priority":0,
			"skip":false,
			"toNodeId":"s1RhJ",
			"type":"next"
		},
		{
			"fromNodeId":"s1RhJ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"Cy4Ol",
			"type":"if"
		},
		{
			"fromNodeId":"Cy4Ol",
			"priority":0,
			"skip":false,
			"toNodeId":"AVEpj",
			"type":"next"
		},
		{
			"fromNodeId":"s1RhJ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"AVEpj",
			"type":"next"
		},
		{
			"fromNodeId":"AVEpj",
			"priority":0,
			"skip":false,
			"toNodeId":"_GtOZg",
			"type":"next"
		},
		{
			"fromNodeId":"_GtOZg",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"3lIvV",
			"type":"if"
		},
		{
			"fromNodeId":"3lIvV",
			"priority":0,
			"skip":false,
			"toNodeId":"_L8bsI",
			"type":"next"
		},
		{
			"fromNodeId":"_L8bsI",
			"priority":0,
			"skip":false,
			"toNodeId":"ugcjl",
			"type":"next"
		},
		{
			"fromNodeId":"_GtOZg",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"ugcjl",
			"type":"next"
		},
		{
			"fromNodeId":"ugcjl",
			"priority":0,
			"skip":false,
			"toNodeId":"M1ZX3",
			"type":"next"
		},
		{
			"fromNodeId":"M1ZX3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_c7EPf",
			"type":"next"
		},
		{
			"fromNodeId":"n_c7EPf",
			"priority":0,
			"skip":false,
			"toNodeId":"n_x0ov7",
			"type":"next"
		},
		{
			"fromNodeId":"n_x0ov7",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_KoM80",
			"type":"if"
		},
		{
			"fromNodeId":"n_KoM80",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nDfkA",
			"type":"next"
		},
		{
			"fromNodeId":"n_x0ov7",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nDfkA",
			"type":"next"
		},
		{
			"fromNodeId":"n_nDfkA",
			"priority":0,
			"skip":false,
			"toNodeId":"n_6mWZi",
			"type":"next"
		},
		{
			"fromNodeId":"n_6mWZi",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9Y6p6",
			"type":"if"
		},
		{
			"fromNodeId":"n_9Y6p6",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7nYCU",
			"type":"next"
		},
		{
			"fromNodeId":"n_6mWZi",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_7nYCU",
			"type":"next"
		},
		{
			"fromNodeId":"n_7nYCU",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lyfZG",
			"type":"next"
		},
		{
			"fromNodeId":"n_lyfZG",
			"priority":0,
			"skip":false,
			"toNodeId":"6BmZz",
			"type":"next"
		},
		{
			"fromNodeId":"6BmZz",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"KXL6n",
			"type":"if"
		},
		{
			"fromNodeId":"KXL6n",
			"priority":0,
			"skip":false,
			"toNodeId":"mp2CF",
			"type":"next"
		},
		{
			"fromNodeId":"mp2CF",
			"priority":0,
			"skip":false,
			"toNodeId":"sOyKV",
			"type":"next"
		},
		{
			"fromNodeId":"sOyKV",
			"priority":0,
			"skip":false,
			"toNodeId":"k1JTW",
			"type":"next"
		},
		{
			"fromNodeId":"k1JTW",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"LyENK",
			"type":"if"
		},
		{
			"fromNodeId":"LyENK",
			"priority":0,
			"skip":false,
			"toNodeId":"db4tQ",
			"type":"next"
		},
		{
			"fromNodeId":"k1JTW",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"db4tQ",
			"type":"next"
		},
		{
			"fromNodeId":"db4tQ",
			"priority":0,
			"skip":false,
			"toNodeId":"JFmBg",
			"type":"next"
		},
		{
			"fromNodeId":"JFmBg",
			"priority":0,
			"skip":false,
			"toNodeId":"ghtK3",
			"type":"next"
		},
		{
			"fromNodeId":"ghtK3",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"OajFa",
			"type":"if"
		},
		{
			"fromNodeId":"OajFa",
			"priority":0,
			"skip":false,
			"toNodeId":"HgyNd",
			"type":"next"
		},
		{
			"fromNodeId":"ghtK3",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"HgyNd",
			"type":"next"
		},
		{
			"fromNodeId":"HgyNd",
			"priority":0,
			"skip":false,
			"toNodeId":"_u6WJr",
			"type":"next"
		},
		{
			"fromNodeId":"6BmZz",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_u6WJr",
			"type":"next"
		},
		{
			"fromNodeId":"_u6WJr",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"_B3lOV",
			"type":"error"
		},
		{
			"fromNodeId":"_u6WJr",
			"priority":0,
			"skip":false,
			"toNodeId":"n_dfjrh",
			"type":"next"
		},
		{
			"fromNodeId":"_B3lOV",
			"priority":0,
			"skip":false,
			"toNodeId":"n_dfjrh",
			"type":"next"
		},
		{
			"fromNodeId":"n_dfjrh",
			"priority":0,
			"skip":false,
			"toNodeId":"n_wNBoH",
			"type":"next"
		},
		{
			"fromNodeId":"n_wNBoH",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_JnxRl",
			"type":"if"
		},
		{
			"fromNodeId":"n_JnxRl",
			"priority":0,
			"skip":false,
			"toNodeId":"_7H7j9",
			"type":"next"
		},
		{
			"fromNodeId":"_7H7j9",
			"priority":0,
			"skip":false,
			"toNodeId":"_3f8LX",
			"type":"next"
		},
		{
			"fromNodeId":"n_wNBoH",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_3f8LX",
			"type":"next"
		},
		{
			"fromNodeId":"_3f8LX",
			"priority":0,
			"skip":false,
			"toNodeId":"_hNBbI",
			"type":"next"
		},
		{
			"fromNodeId":"_hNBbI",
			"priority":0,
			"skip":false,
			"toNodeId":"_WCurd",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68b0148974e2bb27bbdcee15",
	"lastModifiedBy":-1,
	"lcName":"convert action to tool (batch)",
	"modifiedTime":1760117642684,
	"name":"Convert Action to Tool (Batch)",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":447,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_R5ujw",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"inaccessibleApps":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"appName":{
										"type":"string",
										"title":"App Name"
									},
									"connectionLookupResponse":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Connection Lookup Response"
									},
									"appLookupResponse":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"App Lookup Response"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Inaccessible Apps"
						},
						"tools":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"Id"
									},
									"name":{
										"type":"string",
										"title":"Name"
									},
									"description":{
										"type":"string",
										"title":"Description"
									},
									"toolInputSchema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Tool Input Schema"
									},
									"additional":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Additional"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Tools"
						},
						"lookups":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{
											"connnectionId":{
												"type":"string",
												"title":"Connnection Id"
											},
											"resourceName":{
												"type":"string",
												"title":"Resource Name"
											},
											"appName":{
												"type":"string",
												"title":"App Name"
											}
										},
										"additionalProperties":false,
										"title":"Context",
										"required":[]
									},
									"inputSchema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Input Schema"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Lookups"
						},
						"toolsWithLookup":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Tools With Lookup"
						},
						"isDynamicToolEnabled":{
							"type":"boolean",
							"title":"Is Dynamic Tool Enabled"
						},
						"enableClarifyConnection":{
							"type":"boolean",
							"title":"Enable Clarify Connection"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						},
						"id":{
							"type":"string",
							"title":"Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"description":{
							"type":"string",
							"title":"Description"
						},
						"runTimeConnectionEnabled":{
							"type":"string",
							"title":"Run Time Connection Enabled"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":28,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"0DA7Z",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"dynamicSchema":{
							"type":"boolean",
							"title":"Dynamic Schema"
						},
						"enableClarifyConnection":{
							"type":"boolean",
							"title":"Enable Clarify Connection"
						},
						"tool":{
							"type":"object",
							"properties":{
								"id":{
									"type":"string",
									"title":"Id"
								},
								"name":{
									"type":"string",
									"title":"Name"
								},
								"description":{
									"type":"string",
									"title":"Description"
								},
								"toolInputSchema":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Tool Input Schema"
								},
								"additional":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Additional"
								}
							},
							"additionalProperties":false,
							"title":"Tool",
							"required":[]
						},
						"inaccessibleApp":{
							"type":"object",
							"properties":{
								"appName":{
									"type":"string",
									"title":"App Name"
								},
								"connectionLookupResponse":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Connection Lookup Response"
								},
								"appLookupResponse":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"App Lookup Response"
								}
							},
							"additionalProperties":false,
							"title":"Inaccessible App",
							"required":[]
						},
						"lookup":{
							"type":"object",
							"properties":{
								"context":{
									"type":"object",
									"properties":{
										"connectionId":{
											"type":"string",
											"title":"Connection Id"
										},
										"resourceName":{
											"type":"string",
											"title":"Resource Name"
										},
										"appName":{
											"type":"string",
											"title":"App Name"
										}
									},
									"additionalProperties":false,
									"title":"Context",
									"required":[]
								},
								"inputSchema":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Input Schema"
								}
							},
							"additionalProperties":false,
							"title":"Lookup",
							"required":[]
						},
						"toolWithLookup":{
							"type":"string",
							"title":"Tool With Lookup"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"enableClarifyConnection":false,
				"dynamicSchema":false
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"dynamicSchema":{
							"type":"boolean",
							"title":"Dynamic Schema"
						},
						"enableClarifyConnection":{
							"type":"boolean",
							"title":"Enable Clarify Connection"
						},
						"tool":{
							"type":"object",
							"properties":{
								"id":{
									"type":"string",
									"title":"Id"
								},
								"name":{
									"type":"string",
									"title":"Name"
								},
								"description":{
									"type":"string",
									"title":"Description"
								},
								"toolInputSchema":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Tool Input Schema"
								},
								"additional":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Additional"
								}
							},
							"additionalProperties":false,
							"title":"Tool",
							"required":[]
						},
						"inaccessibleApp":{
							"type":"object",
							"properties":{
								"appName":{
									"type":"string",
									"title":"App Name"
								},
								"connectionLookupResponse":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Connection Lookup Response"
								},
								"appLookupResponse":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"App Lookup Response"
								}
							},
							"additionalProperties":false,
							"title":"Inaccessible App",
							"required":[]
						},
						"lookup":{
							"type":"object",
							"properties":{
								"context":{
									"type":"object",
									"properties":{
										"connectionId":{
											"type":"string",
											"title":"Connection Id"
										},
										"resourceName":{
											"type":"string",
											"title":"Resource Name"
										},
										"appName":{
											"type":"string",
											"title":"App Name"
										}
									},
									"additionalProperties":false,
									"title":"Context",
									"required":[]
								},
								"inputSchema":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Input Schema"
								}
							},
							"additionalProperties":false,
							"title":"Lookup",
							"required":[]
						},
						"toolWithLookup":{
							"type":"string",
							"title":"Tool With Lookup"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":342,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"mwIiy",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"appName":{
											"type":"string",
											"title":"appName"
										},
										"connectionLookupResponse":{
											"type":"object",
											"title":"connectionLookupResponse"
										},
										"appLookupResponse":{
											"type":"object",
											"title":"appLookupResponse"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"inaccessibleApps",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"inaccessibleApps",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"appName":{
										"type":"string",
										"title":"appName"
									},
									"connectionLookupResponse":{
										"type":"object",
										"title":"connectionLookupResponse"
									},
									"appLookupResponse":{
										"type":"object",
										"title":"appLookupResponse"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"inaccessibleApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"T0gif",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"id":{
											"type":"string",
											"title":"Id"
										},
										"name":{
											"type":"string",
											"title":"Name"
										},
										"description":{
											"type":"string",
											"title":"Description"
										},
										"toolInputSchema":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Tool Input Schema"
										},
										"additional":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Additional"
										}
									},
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"tools",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"tools",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"id":{
										"type":"string",
										"title":"Id"
									},
									"name":{
										"type":"string",
										"title":"Name"
									},
									"description":{
										"type":"string",
										"title":"Description"
									},
									"toolInputSchema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Tool Input Schema"
									},
									"additional":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Additional"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Tools",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":122,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"qeqQ7",
			"index":5,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"context":{
											"type":"object",
											"properties":{
												"connectionId":{
													"type":"string",
													"title":"connectionId"
												},
												"resourceName":{
													"type":"string",
													"title":"Resource Name"
												},
												"appName":{
													"type":"string",
													"title":"App Name"
												}
											},
											"additionalProperties":false,
											"title":"Context",
											"required":[]
										},
										"inputSchema":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Input Schema"
										}
									},
									"additionalProperties":false,
									"required":[]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"lookups",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"lookups",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"context":{
										"type":"object",
										"properties":{
											"connectionId":{
												"type":"string",
												"title":"connectionId"
											},
											"resourceName":{
												"type":"string",
												"title":"Resource Name"
											},
											"appName":{
												"type":"string",
												"title":"App Name"
											}
										},
										"additionalProperties":false,
										"title":"Context",
										"required":[]
									},
									"inputSchema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Input Schema"
									}
								},
								"required":[]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Lookups",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":450,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_QgLL5",
			"index":6,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"toolsWithLookup",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"toolsWithLookup",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"toolsWithLookup",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":154,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"MtlCa",
			"index":7,
			"inputs":{
				"keys":[
					"=MAPGET({{ n_R5ujw.outputs.context }},\"appName\")"
				],
				"lookupType":"ENABLED_CONNECTOR_RESOURCES",
				"type":"ByKeys"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"=MAPGET({{ n_R5ujw.outputs.context }},\"appName\")",
					"enabled":true,
					"timeToLive":"300",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"count":3,
					"enabled":true,
					"initialDelay":100
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Application",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":156,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"s1RhJ",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"=MAPGET({{ n_R5ujw.outputs.context }},\"connectionId\")",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"=MAPGET({{ n_R5ujw.outputs.context }},\"connectionId\")",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"0"
						}
					},
					{
						"property":"{{ n_R5ujw.outputs.runTimeConnectionEnabled }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":159,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"s1RhJ@_yALIl-1@y",
			"id":"Cy4Ol",
			"index":9,
			"inputs":{
				"keys":[
					"=MAPGET({{ n_R5ujw.outputs.context }},\"connectionId\")"
				],
				"lookupType":"CONNECTION",
				"type":"ByKeys"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"=MAPGET({{ n_R5ujw.outputs.context }},\"connectionId\")",
					"enabled":true,
					"timeToLive":"300",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"connectionId",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":154,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"AVEpj",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"isAccessible":{
							"type":"boolean",
							"title":"Is Accessible"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"runTimeConnectionEnabled":{
							"type":"boolean",
							"title":"Run Time Connection Enabled"
						},
						"actionLookupResponseNew":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Action Lookup Response New"
						},
						"connectionLookupResponseNew":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Connection Lookup Response"
						}
					}
				},
				"code":"import com.unifyapps.infra.utils.JsonUtils\n\nboolean isAccessible = false\nString inAccessibleReason = \"\"\n\n// Context Map\nMap<String, Object> context = (binding.hasVariable(\"context\") && binding.getVariable(\"context\") instanceof Map) ? \n    (Map<String, Object>) binding.getVariable(\"context\") : [:]\nString appName = context.containsKey(\"appName\") && context[\"appName\"] != null ? context[\"appName\"].toString() : null\nString resourceName = context.containsKey(\"resourceName\") && context[\"resourceName\"] != null ? context[\"resourceName\"].toString() : null\nString connectionId = context.containsKey(\"connectionId\") && context[\"connectionId\"] != null ? context[\"connectionId\"].toString() : null\n\n// Action Lookup Response\ndef actionLookupResponseNew = binding.hasVariable(\"actionLookupResponseNew\") ? binding.getVariable(\"actionLookupResponseNew\") : [:]\nMap<String, Object> objects = [:]\n\nif (actionLookupResponseNew instanceof com.unifyapps.infra.utils.response.MappedHits) {\n    objects = actionLookupResponseNew.getObjects() ?: [:]\n} else if (actionLookupResponseNew instanceof Map) {\n    objects = actionLookupResponseNew.containsKey(\"objects\") && actionLookupResponseNew[\"objects\"] instanceof Map ?\n        (Map<String, Object>) actionLookupResponseNew[\"objects\"] : [:]\n}\n\nMap<String, Object> appDetails = objects.containsKey(appName) && objects[appName] instanceof Map ?\n    (Map<String, Object>) objects[appName] : [:]\n\nList actions = appDetails.containsKey(\"actions\") && appDetails[\"actions\"] instanceof List ?\n    (List) appDetails[\"actions\"] : []\n\nboolean runTimeConnectionEnabled = binding.hasVariable(\"runTimeConnectionEnabled\") && binding.getVariable(\"runTimeConnectionEnabled\") ? true : false\n// Map<String, Object> connectionLookupResponseNew = (binding.hasVariable(\"connectionLookupResponseNew\") && binding.getVariable(\"connectionLookupResponseNew\") instanceof Map) ? \n//     (Map<String, Object>) binding.getVariable(\"connectionLookupResponseNew\") : [:]\n// def connectionLookupResponseNew = binding.hasVariable(\"connectionLookupResponseNew\")?binding.getVariable(\"connectionLookupResponseNew\"):[:]\n// Map<String, Object> connectionObjects = connectionLookupResponseNew.containsKey(\"objects\") && connectionLookupResponseNew[\"objects\"] instanceof Map ? \n//     (Map<String, Object>) connectionLookupResponseNew[\"objects\"] : [:]\n\n//---\ndef connectionLookupResponseNew = binding.hasVariable(\"connectionLookupResponseNew\") ? binding.getVariable(\"connectionLookupResponseNew\") : [:]\nMap<String, Object> connectionObjects = [:]\nif (connectionLookupResponseNew instanceof com.unifyapps.infra.utils.response.MappedHits) {\n    connectionObjects = connectionLookupResponseNew.getObjects() ?: [:]\n} else if (connectionLookupResponseNew instanceof Map) {\n    connectionObjects = connectionLookupResponseNew.containsKey(\"objects\") && connectionLookupResponseNew[\"objects\"] instanceof Map ? \n        (Map<String, Object>) connectionLookupResponseNew[\"objects\"] : [:]\n}\n//---\n\n// Use a robust string matching for 'resourceName'\nList<String> actionNames = actions.collect { it != null ? it.toString() : null }\n\nif (resourceName != null && actionNames.contains(resourceName)) {\n    boolean connectionOk =\n            runTimeConnectionEnabled ||\n            connectionId == null ||\n            connectionObjects.containsKey(connectionId)\n    if (connectionOk) {\n        isAccessible = true\n    } else {\n        inAccessibleReason = \"Connection InAccessible\"\n    }\n} else {\n    inAccessibleReason = \"resourceName Not Present\"\n}\n\nreturn [\"isAccessible\": isAccessible, \"inAccessibleReason\": inAccessibleReason, \"connectionId\":connectionId, \"connectionObjects\":connectionObjects, \"connectionLookupResponseNew\":connectionLookupResponseNew]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"context":"{{ n_R5ujw.outputs.context }}",
					"runTimeConnectionEnabled":"{{ n_R5ujw.outputs.runTimeConnectionEnabled }}",
					"actionLookupResponseNew":"{{ MtlCa.outputs.response }}",
					"connectionLookupResponseNew":"{{ Cy4Ol.outputs.response }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"check access",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":333,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"_GtOZg",
			"index":11,
			"inputs":{
				"filters":[
					{
						"property":"{{ AVEpj.outputs.result.isAccessible }}",
						"filter":{
							"operator":"EQUAL",
							"value":"false"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":341,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"_GtOZg@_yALIl-1@y",
			"id":"3lIvV",
			"index":12,
			"inputs":{
				"itemToAdd":{
					"connectionLookupResponse":"{{ Cy4Ol.outputs }}",
					"appLookupResponse":"{{ MtlCa.outputs }}"
				},
				"insertLocation":"END",
				"listName":"{{ mwIiy.outputs.items[0] }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_GtOZg@_yALIl-1@y",
			"id":"_L8bsI",
			"index":13,
			"inputs":{
				"result":{
					"isDynamicToolEnabled":"{{ 0DA7Z.outputs.dynamicSchema }}",
					"enableClarifyConnection":"{{ 0DA7Z.outputs.enableClarifyConnection }}",
					"lookups":{
						"source":"{{ qeqQ7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"context":{
								"connnectionId":"{{ qeqQ7.outputs.items[0].context.connectionId }}",
								"resourceName":"{{ qeqQ7.outputs.items[0].context.resourceName }}",
								"appName":"{{ qeqQ7.outputs.items[0].context.appName }}"
							},
							"inputSchema":"{{ qeqQ7.outputs.items[0].inputSchema }}"
						}
					},
					"inaccessibleApps":{
						"source":"{{ mwIiy.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"appName":"{{ mwIiy.outputs.items[0].appName }}",
							"connectionLookupResponse":"{{ mwIiy.outputs.items[0].connectionLookupResponse }}",
							"appLookupResponse":"{{ mwIiy.outputs.items[0].appLookupResponse }}"
						}
					},
					"tools":{
						"source":"{{ T0gif.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ T0gif.outputs.items[0].id }}",
							"name":"{{ T0gif.outputs.items[0].name }}",
							"description":"{{ T0gif.outputs.items[0].description }}",
							"toolInputSchema":"{{ T0gif.outputs.items[0].toolInputSchema }}",
							"additional":"{{ T0gif.outputs.items[0].additional }}"
						}
					},
					"toolsWithLookup":{
						"source":"{{ n_QgLL5.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_QgLL5.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":142,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"ugcjl",
			"index":14,
			"inputs":{
				"automationId":"67d2ec336341135beaf0cb02",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"context":"{{ n_R5ujw.outputs.context }}",
					"input":"{{ n_R5ujw.outputs.input }}"
				}
			},
			"skip":false,
			"subTitle":"GET ACTION SCHEMA",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":540,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"M1ZX3",
			"index":15,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"runTimeConnectionEnabled":{
							"type":"boolean",
							"title":"Run Time Connection Enabled"
						},
						"runTimeConnectionId":{
							"type":"string",
							"title":"Run Time Connection Id",
							"format":"skip"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"runTimeConnectionEnabled":false
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"runTimeConnectionEnabled":{
							"type":"boolean",
							"title":"Run Time Connection Enabled"
						},
						"runTimeConnectionId":{
							"type":"string",
							"title":"Run Time Connection Id",
							"format":"skip"
						},
						"_ua_variableDetails":{
							"items":{
								"type":"object",
								"properties":{
									"dataType":{
										"type":"string",
										"description":"Data type of the variable"
									},
									"name":{
										"type":"string",
										"description":"Name of the variable"
									},
									"description":{
										"type":"string",
										"description":"Description of the variable"
									}
								}
							},
							"type":"array",
							"title":"Variable Details"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_c7EPf",
			"index":16,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"resourceName":{
							"type":"string",
							"title":"Resource Name"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						}
					}
				},
				"code":"def context=binding.hasVariable(\"context\")?binding.context:[:]\ndef resourceName=context?.resourceName?:\"\"\n\nreturn [\"resourceName\":resourceName]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"context":"{{ n_R5ujw.outputs.context }}"
				}
			},
			"skip":false,
			"subTitle":"resourceName",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":438,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_x0ov7",
			"index":17,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_R5ujw.outputs.id }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"=MAPGET({{ n_R5ujw.outputs.context }},\"resourceName\")",
						"filter":{
							"operator":"EQUAL",
							"value":"callables_call_automation"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":464,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_x0ov7@_yALIl-1@y",
			"id":"n_KoM80",
			"index":18,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_R5ujw.outputs.id }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_action_ai_agent",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_nDfkA",
			"index":19,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"automationId":{
							"type":"string",
							"title":"Automation Id"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"inputs":{
							"type":"string",
							"title":"Inputs"
						}
					}
				},
				"code":"def inputs=binding.hasVariable(\"inputs\")?binding.inputs:[:]\nreturn [\"automationId\":inputs?.automationId?:\"\"]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"inputs":"{{ n_KoM80.outputs.properties.inputs }}"
				}
			},
			"skip":false,
			"subTitle":"automationId",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":438,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_6mWZi",
			"index":20,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ n_nDfkA.outputs.result.automationId }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"automationId length > 0?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":451,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"n_6mWZi@_yALIl-1@y",
			"id":"n_9Y6p6",
			"index":21,
			"inputs":{
				"keys":[
					"{{ n_nDfkA.outputs.result.automationId }}"
				],
				"lookupType":"WORKFLOW_DEFINITION",
				"type":"ByKeys"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_7nYCU",
			"index":22,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"runtimeConnectionObj":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Runtime Connection Obj"
						},
						"resourceName":{
							"type":"string",
							"title":"Resource Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"response":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response"
						},
						"automationId":{
							"type":"string",
							"title":"Automation Id"
						}
					}
				},
				"code":"def response = binding.hasVariable(\"response\") ? binding.response : [:]\nif (!response) {\n  return [\"runtimeConnectionObj\": []]\n}\n\ndef automationId = binding.hasVariable(\"automationId\") ? binding.automationId : \"\"\ndef objects = response[\"objects\"] ?: [:]\ndef automationObject = objects[automationId] ?: [:]\ndef runtimeConnectionObj = automationObject[\"runtimeConnectionAppNames\"] ?: []\n\ndef matchedResourceName\ndef matchedAppName\n\nif (runtimeConnectionObj && runtimeConnectionObj.size() > 0) {\n    def targetAppName = runtimeConnectionObj.get(0)\n    def nodes = automationObject[\"nodes\"] ?: []\n\n    for (def node : nodes) {\n        def context = node[\"context\"]\n        if (context?.appName == targetAppName) {\n            matchedResourceName = context[\"resourceName\"]\n            matchedAppName = context[\"appName\"]\n            break\n        }\n    }\n}\n\nreturn [\n    \"runtimeConnectionObj\": runtimeConnectionObj,\n    \"resourceName\": matchedResourceName,\n    \"appName\": matchedAppName\n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"response":"{{ n_9Y6p6.outputs.response }}",
					"automationId":"{{ n_nDfkA.outputs.result.automationId }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.runTimeConnectionApplications.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_lyfZG",
			"index":23,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"resourceName":{
							"type":"string",
							"title":"Resource Name"
						},
						"runTimeConnectionApplications":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Run Time Connection Applications"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def context=binding.hasVariable(\"context\")?binding.context:[:]\ndef appName=binding.hasVariable(\"appName\")?binding.appName:\"\"\ndef runTimeConnectionApplications=binding.hasVariable(\"runTimeConnectionApplications\")?binding.runTimeConnectionApplications:[]\ndef resourceName=binding.hasVariable(\"resourceName\")?binding.resourceName:\"\"\ndef currentResourceName=context?.resourceName?:\"\"\nif (\"callables_call_automation\".equals(currentResourceName) && runTimeConnectionApplications.size()>0)\n{\n  context[\"appName\"]=appName\n  context[\"resourceName\"]=resourceName\n  return [\"context\":context]\n}\nreturn [\"context\":context]\n\n",
				"parameters":{
					"appName":"{{ n_7nYCU.outputs.result.appName }}",
					"resourceName":"{{ n_7nYCU.outputs.result.resourceName }}",
					"runTimeConnectionApplications":{
						"source":"{{ n_7nYCU.outputs.result.runtimeConnectionObj }}",
						"ua:type":"mappedArray",
						"items":"{{ n_7nYCU.outputs.result.runtimeConnectionObj[0] }}"
					},
					"context":"{{ n_R5ujw.outputs.context }}"
				}
			},
			"skip":false,
			"subTitle":"Change Context based on callable runtime",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":444,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"6BmZz",
			"index":24,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_R5ujw.outputs.runTimeConnectionEnabled }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"filters":[
							{
								"property":"{{ n_c7EPf.outputs.result.resourceName }}",
								"filter":{
									"operator":"EQUAL",
									"value":"callables_call_automation"
								}
							},
							{
								"property":"=LEN({{ n_7nYCU.outputs.result.runtimeConnectionObj }})",
								"filter":{
									"operator":"GT",
									"value":"0"
								}
							}
						],
						"operator":"AND"
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"runTime",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":229,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"KXL6n",
			"index":25,
			"inputs":{
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"id":"{{ n_R5ujw.outputs.caseId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"convState",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":226,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"mp2CF",
			"index":26,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"connectionLookupOptions":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Connection Lookup Options"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"return [\"appName\": context.appName, \"connectionLookupOptions\": [\"appName\": [context.appName]]]",
				"parameters":{
					"context":"{{ n_lyfZG.outputs.result.context }}"
				}
			},
			"skip":false,
			"subTitle":"appName filter",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2463,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"sOyKV",
			"index":27,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_appName",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ mp2CF.outputs.result.appName }}"
							}
						},
						{
							"property":"properties_userId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ __RUN__.outputs.userId }}"
							}
						},
						{
							"property":"properties_aiAgentId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ KXL6n.outputs.properties.currentAIAgentId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"run_time_connection_store",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"runtimeconnectionStore",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":333,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"k1JTW",
			"index":28,
			"inputs":{
				"filters":[
					{
						"property":"{{ sOyKV.outputs.properties.connectionId }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":225,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"k1JTW@6BmZz@_yALIl-1@y@y",
			"id":"LyENK",
			"index":29,
			"inputs":{
				"keys":[
					"{{ sOyKV.outputs.properties.connectionId }}"
				],
				"options":"{{ mp2CF.outputs.result.connectionLookupOptions }}",
				"lookupType":"CONNECTION",
				"page":{
					"limit":20,
					"offset":0
				},
				"type":"ByKeys"
			},
			"skip":false,
			"subTitle":"connection Lookup",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":225,
				"resourceName":"standard_entities_lookup_entities",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"db4tQ",
			"index":30,
			"inputs":{
				"options":"{{ mp2CF.outputs.result.connectionLookupOptions }}",
				"lookupType":"CONNECTION",
				"page":{
					"limit":20,
					"offset":0
				},
				"type":"ByQuery"
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"connection Lookup",
			"title":"Lookup Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":226,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"JFmBg",
			"index":31,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"connectionId":{
							"type":"string",
							"title":"Connection Id"
						},
						"upsert":{
							"type":"boolean",
							"title":"Upsert"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"connectionLookupResponse":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Connection Lookup Response"
						},
						"runTimeConnectionId":{
							"type":"string",
							"title":"Run Time Connection Id"
						},
						"userId":{
							"type":"number",
							"title":"User Id"
						},
						"runtTimeConnectionLookupResponse":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Runt Time Connection Lookup Response"
						}
					}
				},
				"code":"if(binding.hasVariable('runTimeConnectionId')) {\n  def accessibleConnections = runtTimeConnectionLookupResponse.objects;\nif(accessibleConnections.size() == 1) {\n  return [\"connectionId\": runTimeConnectionId]\n}\n}\ndef accessibleConnections = connectionLookupResponse.objects;\nif(accessibleConnections.size() == 1) {\n  def connection = accessibleConnections.get(0)\n  def ownerUserId = connection.ownerUserId\n  if(userId == ownerUserId) {\n    return [\"connectionId\": accessibleConnections.get(0).get(\"id\"), \"upsert\":true]\n  }\n}\n\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"connectionLookupResponse":"{{ db4tQ.outputs.response }}",
					"runTimeConnectionId":"{{ sOyKV.outputs.properties.connectionId }}",
					"userId":"{{ __RUN__.outputs.userId }}",
					"runtTimeConnectionLookupResponse":"{{ LyENK.outputs.response }}"
				}
			},
			"skip":false,
			"subTitle":"find connection",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":69,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"ghtK3",
			"index":32,
			"inputs":{
				"filters":[
					{
						"property":"{{ JFmBg.outputs.result.upsert }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":69,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"ghtK3@6BmZz@_yALIl-1@y@y",
			"id":"OajFa",
			"index":33,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"run_time_connection_store",
				"skipIfBlank":false,
				"record":{
					"caseId":"{{ n_R5ujw.outputs.caseId }}",
					"aiAgentId":"{{ KXL6n.outputs.properties.currentAIAgentId }}",
					"appName":"{{ mp2CF.outputs.result.appName }}",
					"userId":"=CONCATENATE({{ __RUN__.outputs.userId }},\"\")",
					"connectionId":"{{ JFmBg.outputs.result.connectionId }}"
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":474,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"6BmZz@_yALIl-1@y",
			"id":"HgyNd",
			"index":34,
			"inputs":{
				"variables":[
					{
						"source":"{{ M1ZX3.outputs.runTimeConnectionId }}",
						"value":"{{ JFmBg.outputs.result.connectionId }}"
					},
					{
						"source":"{{ M1ZX3.outputs.runTimeConnectionEnabled }}",
						"value":true
					},
					{
						"source":"{{ 0DA7Z.outputs.enableClarifyConnection }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_yALIl-1",
			"id":"_u6WJr",
			"index":35,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"toolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Input Schema"
						},
						"toolName":{
							"type":"string",
							"title":"Tool Name"
						},
						"lookups":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"connectionId":{
										"type":"string",
										"title":"Connection Id"
									},
									"appName":{
										"type":"string",
										"title":"App Name"
									},
									"resourceName":{
										"type":"string",
										"title":"Resource Name"
									},
									"inputSchema":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Input Schema"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Lookups"
						},
						"dynamicSchema":{
							"type":"boolean",
							"title":"Dynamic Schema"
						},
						"custom":{
							"type":"boolean",
							"title":"Custom"
						},
						"descriptionToAdd":{
							"type":"string",
							"title":"Description To Add"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"toolName":{
							"type":"string",
							"title":"Tool Name"
						},
						"inputSchemaObj":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input Schema Obj"
						},
						"actionInput":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Action Input"
						},
						"runTimeConnectionId":{
							"type":"string",
							"title":"Run Time Connection Id"
						},
						"runTimeConnectionEnabled":{
							"type":"boolean",
							"title":"Run Time Connection Enabled"
						}
					}
				},
				"code":"// temp fix for adding pathParams in custom http application\nif (binding.hasVariable(\"actionInput\") && binding.hasVariable(\"context\") && context?.resourceName == \"custom_http_application_execute\") {\n    def path = actionInput?.path\n    def paramsList = actionInput?.pathParamsList\n    def matcher = (path =~ /:(\\w+)/)\n    def pathParams = matcher.collect { it[1] }\n    def existingParams = paramsList?.collect { it.key } as Set\n    for (def param : pathParams) {\n        if (!existingParams.contains(param)) {\n            paramsList << [\"key\": param]\n        }\n    }\n}\n\n// removing extra fields from input for callables_call_automation\nif (binding.hasVariable(\"actionInput\") && binding.hasVariable(\"context\") && context?.resourceName == \"callables_call_automation\") {\n    actionInput = actionInput.parameters ?: [:]\n}\n\n\ndef slots = []\ndef lookups = []\ndef inputSchema = null;\ndef actionInput = binding.hasVariable(\"actionInput\") ? actionInput : null\n\nif (binding.hasVariable('inputSchemaObj')) {\n    inputSchema = com.unifyapps.infra.utils.JsonUtils.toJSON(inputSchemaObj)\n}\n\ndef dynamicSchema = []\ndef toolInputSchema = inputSchema?.schema\n\nif (toolInputSchema == null || toolInputSchema.type == null) {\n    toolInputSchema = [\n            \"type\"      : \"object\",\n            \"properties\": [:]\n    ]\n}\n\ndef toolInputSchemaMain = toolInputSchema\nif (toolInputSchema?.properties?.containsKey(\"_ua_schema_override_\")) {\n    toolInputSchema = toolInputSchema.properties.get(\"_ua_schema_override_\")\n}\n\n// temporary handling for allOf case\nif (toolInputSchema.containsKey(\"allOf\")) {\n    toolInputSchema.allOf = checkTemplateStrings(toolInputSchema.allOf)\n}\n\ndef schemaLayout = inputSchema?.layout\n\nprocessSchemaProperties(toolInputSchema, schemaLayout, lookups, dynamicSchema, actionInput, runTimeConnectionEnabled, binding.hasVariable('runTimeConnectionId') ? runTimeConnectionId : \"\")\n\nif (toolInputSchema?.dependencies && !schemaLayout?.dependencies) {\n    toolInputSchema.dependencies.each { key, value ->\n        if (value instanceof Map && value.containsKey(\"oneOf\")) {\n            value.oneOf.each { entry ->\n                if (entry instanceof Map && entry.containsKey(\"properties\")) {\n                    processSchemaProperties(entry, schemaLayout, lookups, dynamicSchema, actionInput, runTimeConnectionEnabled, binding.hasVariable('runTimeConnectionId') ? runTimeConnectionId : \"\")\n                }\n            }\n        }\n    }\n}\n\n// Deprecated : because the user input can become too big in some cases, leading to higher token consumption\n\n// def descriptionToAdd = \"\";\n// if (binding.hasVariable(\"actionInput\") && actionInput != null) {\n//     descriptionToAdd = \" These are the inputs currently prefilled by the user , consider these as well while creating the tool input : \" + com.unifyapps.infra.utils.JsonUtils.toJson(actionInput)\n// }\n\n\n// Deprecated : because the user inputs from Dynamic schema fields were missed in case we traverse on schema for this processing\n\n// def descriptionToAdd = \"\";\n// if (binding.hasVariable(\"actionInput\") && actionInput != null) {    \n//     def filterBySchema\n//     filterBySchema = { input, schemaProps ->\n//         if (input == null || schemaProps == null) return input\n        \n//         def filtered = [:]\n//         schemaProps.each { fieldName, fieldSchema ->\n//             if (input.containsKey(fieldName)) {\n//                 def fieldValue = input[fieldName]\n//                 def stringFieldValue = fieldValue.toString()\n//                 if(stringFieldValue.length() > 5){\n//                     stringFieldValue = stringFieldValue.take(5)\n//                     stringFieldValue += \"...\"\n//                 }\n                \n//                 if (fieldSchema.type == \"object\" && fieldSchema.properties != null) {\n//                     def filteredNested = filterBySchema(fieldValue, fieldSchema.properties)\n                    \n//                     // remove id from path object if user inputs already contain it\n//                     // if (fieldName == \"path\" && filteredNested != null && filteredNested.containsKey(\"id\")) {\n//                     //     filteredNested.remove(\"id\")\n//                     // }\n                    \n//                     if (filteredNested != null && !filteredNested.isEmpty()) {\n//                         filtered[fieldName] = filteredNested\n//                     } else if (filteredNested != null && filteredNested.isEmpty() && fieldSchema.properties.size() > 1) {\n//                         filtered[fieldName] = filteredNested\n//                     }\n//                 }else {\n//                     filtered[fieldName] = stringFieldValue\n//                 }\n//             }\n//         }\n//         return filtered\n//     }\n    \n//     def schemaProperties = inputSchemaObj?.schema?.properties\n//     def filteredActionInput = filterBySchema(actionInput, schemaProperties)\n    \n//     if(filteredActionInput != null){\n//         descriptionToAdd = \" These are the inputs currently prefilled by the user , consider these as well while creating the tool input : \" + com.unifyapps.infra.utils.JsonUtils.toJson(filteredActionInput)\n//     }\n// }\n\n// Final handling : TODO: in case we want to take some user specified fields, this limit should not be there exmple: path field in custom_http_endpoint\n\n\ndef descriptionToAdd = \"\"\nif (binding.hasVariable(\"context\") && context?.resourceName == \"utility_by_unifyapps_generate_public_url\") {\n  descriptionToAdd = \" The file could either be a base64 encoded content of a file or a map of file details produced by a previous tool call. Example : {\\\"expiryTime\\\":1, \\\"file\\\": {\\\"fileType\\\":\\\"<file_type>\\\",\\\"name\\\":\\\"<name>\\\",\\\"source\\\":\\\"<source>\\\",\\\"sourceType\\\":\\\"<source_type>\\\",\\\"ua:type\\\":\\\"FILE\\\"}}}.\"\n}\n\nif (binding.hasVariable(\"actionInput\")) {\n    final int MAX_LEN = 30\n\n    def processUserInput\n    processUserInput = { input ->\n        if (input == null) {\n            return null\n        }\n\n        if (input instanceof String) {\n            return (input.length() > MAX_LEN) ? input[0..<MAX_LEN] + \"...\" : input\n        }\n\n        if (input instanceof Map) {\n            def processed = [:]\n            input.each { fieldName, fieldValue ->\n                def processedItem = processUserInput(fieldValue)\n                if (processedItem != null) {\n                    processed[fieldName] = processedItem\n                }\n            }\n            return processed.isEmpty() ? null : processed\n        }\n\n        if (input instanceof List) {\n            def processed = input.collect { processUserInput(it) }.findAll { it != null }\n            return processed.isEmpty() ? null : processed\n        }\n\n        // all other types\n        return input\n    }\n\n    def processedActionInput = processUserInput(actionInput)\n    if (processedActionInput != null) {\n        descriptionToAdd = \" These are the inputs currently prefilled by the user , consider these as well while creating the tool input : \" +\n                           com.unifyapps.infra.utils.JsonUtils.toJson(processedActionInput)\n    }\n}\n\n\nif(dynamicSchema.size()>0){\n    descriptionToAdd+=\" and this tool has a field of type DynamicSchemaField, its schema must be retrieved using the FetchDynamicSchema tool, the FetchDynamicSchema tool must be executed before this tool to provide the necessary schema, regardless of whatever input formate provided by user. When using a dynamically fetched schema (e.g., for a \\\"record\\\" field), always nest the schema output under that field’s name in the actual tool input. All other required fields (like \\\"objectId\\\") should remain at the top level. Flattening dynamic fields into the top-level of the input is strictly incorrect!\"\n}\n\nif (runTimeConnectionEnabled) {\n    toolInputSchema?.properties << getRunTimeConnectionIdField(context?.appName, binding.hasVariable('runTimeConnectionId') ? runTimeConnectionId : \"\")\n    if(toolInputSchema?.required == null) {\n        toolInputSchema.put(\"required\", [\"_ua_connectionId\"])\n    } else {\n        def required = toolInputSchema.required;\n        required.add(\"_ua_connectionId\")\n    }\n    descriptionToAdd = \" to call this tool we need to have _ua_connectionId \"\n    if(binding.hasVariable('runTimeConnectionId') && runTimeConnectionId != null) {\n        descriptionToAdd += \" and as this already filled we can use this value\" + runTimeConnectionId + \", in case the tool has failed using this connection, you can use ClarifyConnection tool with appName \" + context?.appName + \" and update this field\"\n    } else {\n        descriptionToAdd += \" and as this not present we need to confirm this from user using ClarifyConnection tool and appName for this tool would be \" + context?.appName\n    }\n    //lookups << [\"appName\": context?.appName, \"resourceName\": \"CONNECTION_\" + context?.appName, \"inputSchema\": [\"properties\": [:], \"type\": \"object\"]]\n}\n\nif (toolInputSchemaMain?.properties?.inputFooter) {\n    toolInputSchemaMain?.properties.remove(\"inputFooter\")\n}\nreturn ['toolInputSchema': toolInputSchemaMain, \"toolName\": getSanitizedName(toolName), \"lookups\": lookups, \"dynamicSchema\": dynamicSchema.size() > 0 ? true : false, \"descriptionToAdd\": descriptionToAdd]\n\ndef processSchemaProperties(schema, layout, lookups, dynamicSchema, actionInput, runTimeConnectionEnabled, runTimeConnectionId) {\n    def properties = schema?.properties\n    def required = schema?.required ?: []\n    def renameMap = [:]\n\n    properties.each { propName, propValue ->\n        if (propName == 'dependencies' && !layout?.dependencies) {\n            propValue.each { key, value ->\n                if (value instanceof Map && value.containsKey(\"oneOf\")) {\n                    value.oneOf.each { entry ->\n                        if (entry instanceof Map && entry.containsKey(\"properties\")) {\n                            processSchemaProperties(entry, schemaLayout, lookups, dynamicSchema, actionInput, runTimeConnectionEnabled, runTimeConnectionId)\n                        }\n                    }\n                }\n            }\n        }\n\n        def layoutProps = layout?.get(propName)\n\n        // Replace with empty string to all templatedField\n        if (propValue instanceof Map || propValue instanceof List) {\n            propValue = checkTemplateStrings(propValue)\n        }\n\n        // Copy ui:help or ui:description to description if present\n        if (layoutProps?.get(\"ui:help\")) {\n            propValue[\"description\"] = layoutProps.get(\"ui:help\")\n        }\n        if (!propValue.containsKey('description') && (layoutProps?.get(\"ui:description\") != null)) {\n            propValue[\"description\"] = layoutProps.get(\"ui:description\")\n        }\n\n        // add required fields according to action input\n        if (actionInput instanceof Map && actionInput?.containsKey(propName)) {\n            if (!required.contains(propName)) {\n                required << propName\n            }\n        }\n\n        // DynamicSchemaField handling\n        if (layoutProps?.get(\"ui:field\") == \"DynamicSchemaField\") {\n            def dynamicFieldName = layoutProps?.get(\"ui:options\")?.get(\"ua:field_name\")\n            def requirements = getTemplatedFields(layoutProps?.get(\"ui:options\")?.get(\"ua:payload\")?.get(\"object\"))\n            if (runTimeConnectionEnabled) {\n                if (requirements == null) {\n                    requirements = []\n                }\n                requirements.add(\"_ua_connectionId\")\n            }\n            if (dynamicFieldName != null) {\n                if (propValue.description == null) {\n                    propValue.description = \"\"\n                }\n                propValue[\"description\"] += \", this field is of type DynamicSchemaField, its schema must be retrieved using the FetchDynamicSchema tool, the FetchDynamicSchema tool must be executed before this tool to provide the necessary schema, regardless of whatever input formate provided by user. All fields returned by FetchDynamicSchema must be nested inside this dynamic field (e.g., \\\"record\\\": { … }), not at the top level of the tool input.\"\n                if (requirements.size() > 0) {\n                    propValue[\"description\"] += \", required fields for fetching the schema are \" + requirements.toString()\n                }\n                \n                if(required.contains(propName)){             //Resolving dynamic field name in required array\n                    required.remove(propName)\n                    required.add(dynamicFieldName)\n                }\n\n                renameMap[propName] = dynamicFieldName\n                dynamicSchema << dynamicFieldName\n            }\n        }\n\n        // Lookup handling\n        if (layoutProps?.get(\"ui:widget\") == \"LookupWidget\") {\n            def resourceName = layoutProps?.get(\"ui:options\")?.get(\"ua:payload\")?.get(\"options\")?.get(\"source_resource_name\")\n            def requirements = getTemplatedFieldsFromObj(layoutProps?.get(\"ui:options\")?.get(\"ua:payload\")?.get(\"options\")?.get(\"inputs\"))\n            def requirementsSchema = generateJsonSchema(layoutProps?.get(\"ui:options\")?.get(\"ua:payload\")?.get(\"options\")?.get(\"inputs\"))\n            if (resourceName != null) {\n                if (propValue.description == null) {\n                    propValue.description = \"\"\n                }\n                propValue[\"description\"] += \", this field can be found using tool lookup_\" + resourceName + \" and taking the id field from its response\"\n                if (requirements.size() > 0) {\n                    propValue[\"description\"] += \", required fields for running lookup are \" + requirements.toString()\n                }\n                if (runTimeConnectionEnabled) {\n                    if (requirementsSchema == null) {\n                        requirementsSchema = [\"type\": \"object\", \"properties\": [:]]\n                    }\n                    lookups << [\"appName\": context?.appName, \"resourceName\": resourceName, \"inputSchema\": requirementsSchema]\n                    if(!runTimeConnectionId.isBlank()) {\n                        lookups << [\"connectionId\": runTimeConnectionId]\n                    }\n                } else {\n                    lookups << [\"appName\": context?.appName, \"resourceName\": resourceName, \"connectionId\": context?.connectionId, \"inputSchema\": requirementsSchema]\n                }\n            }\n\n            //multiple field handling\n            if (layoutProps?.get(\"ui:options\")?.get(\"multiple\") == true) {\n                def type = propValue.type\n                //propValue[\"items\"] = [\"type\": type]\n                propValue[\"type\"] = \"array\"\n            }\n        }\n\n        if (propValue.type == \"object\" && propValue.properties != null) {\n            processSchemaProperties(propValue, layoutProps ?: [:], lookups, dynamicSchema, actionInput?.get(propName), runTimeConnectionEnabled, runTimeConnectionId)\n        }\n\n        if (propValue.type == \"array\" && propValue.items != null) {\n            def actionInputForArray = actionInput?.get(propName)?.size() > 0 ? actionInput?.get(propName)?.get(0) : null\n            processSchemaProperties(propValue.items, layoutProps?.items ? layoutProps?.items : [:], lookups, dynamicSchema, actionInputForArray, runTimeConnectionEnabled, runTimeConnectionId)\n        }\n\n    }\n    if (required.size() > 0) {\n        schema.required = required\n    }\n\n    renameMap.each { oldName, newName ->\n        def oldValue = properties.remove(oldName)\n        properties[newName] = oldValue\n    }\n}\n\ndef getTemplatedFields(String template) {\n    if (template == null) {\n        return []\n    }\n    return (template =~ /\\{\\{\\s*(.*?)\\s*\\}\\}/).collect { it[1] }\n}\n\ndef removeTemplatedFields(String input1) {\n    return input1.replaceAll(/\\{\\{\\s*.*?\\s*\\}\\}/, '')\n}\n\ndef getTemplatedFieldsFromObj(Object inputs) {\n    def templatedFields = []\n    if (inputs != null) {\n        inputs.each { key, value ->\n            templatedFields.addAll(getTemplatedFields(value))\n        }\n    }\n    return templatedFields\n}\n\ndef getSanitizedName(String header) {\n    String sanitized = header.trim().replaceAll(\"[^a-zA-Z0-9]\", \"_\")\n    if (sanitized.length() > 64) {\n        sanitized = sanitized.substring(0, 63)\n    }\n    return sanitized\n}\n\ndef checkTemplateStrings(obj) {\n    if (obj instanceof Map) {\n        obj.each { key, value ->\n            obj[key] = checkTemplateStrings(value)\n        }\n    } else if (obj instanceof List) {\n        obj = obj.collect { item -> checkTemplateStrings(item) }\n    } else if (obj instanceof String) {\n        obj = removeTemplatedFields(obj)\n    }\n    return obj\n}\n\ndef generateJsonSchema(def input) {\n    if (input == null) {\n        return null\n    }\n    def schema = [:]\n    if (input instanceof Map) {\n        schema.type = \"object\"\n        schema.properties = [:]\n        input.each { key, value ->\n            schema.properties[key] = generateJsonSchema(value)\n        }\n    } else if (input instanceof List) {\n        schema.type = \"array\"\n        if (!input.isEmpty()) {\n            schema.items = generateJsonSchema(input[0])\n        } else {\n            schema.items = [:]\n        }\n    } else {\n        schema.type = input.getClass().simpleName.toLowerCase()\n    }\n\n    return schema\n}\n\ndef getRunTimeConnectionIdField(String appName, String connectionId) {\n    // def props = [\"type\": \"string\", \"description\": \"Never fill this field randomly always ask user if there isnt a value provided. Connection Id with which we are going to execute this tool and this is a required field, if value of this field is unknown and used has mentioned some name on what connection to use we can fetch this from lookup_CONNECTION_\" + appName + \" tool or else we can ask this connection from user Using the ClarifyConnection tool.\"]\n    def props = [\"type\": \"string\", \"description\": \"This will be an alphaNumericId usually a mongoId , Do not fill in name. Connection Id with which we are going to execute this tool and this is a required field, if value of this field is unknown , we can ask this connection from user Using the ClarifyConnection tool\" + \" appName for this connection is \" + appName]\n    if (connectionId && !connectionId.isBlank()) {\n        props << [\"const\": connectionId]\n    }\n    return [\"_ua_connectionId\": props]\n}",
				"compile_static":false,
				"isAsync":false,
				"captureStdOutput":false,
				"parameters":{
					"context":"{{ n_lyfZG.outputs.result.context }}",
					"toolName":"{{ n_R5ujw.outputs.name }}",
					"inputSchemaObj":"{{ ugcjl.outputs.schema }}",
					"actionInput":"{{ n_R5ujw.outputs.input }}",
					"runTimeConnectionId":"{{ M1ZX3.outputs.runTimeConnectionId }}",
					"runTimeConnectionEnabled":"{{ M1ZX3.outputs.runTimeConnectionEnabled }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"slots Extractor",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_u6WJr@_yALIl-1@error",
			"id":"_B3lOV",
			"index":36,
			"inputs":{
				"result":{
					"isDynamicToolEnabled":"{{ 0DA7Z.outputs.dynamicSchema }}",
					"enableClarifyConnection":"{{ 0DA7Z.outputs.enableClarifyConnection }}",
					"lookups":{
						"source":"{{ qeqQ7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"context":{
								"connnectionId":"{{ qeqQ7.outputs.items[0].context.connectionId }}",
								"resourceName":"{{ qeqQ7.outputs.items[0].context.resourceName }}",
								"appName":"{{ qeqQ7.outputs.items[0].context.appName }}"
							},
							"inputSchema":"{{ qeqQ7.outputs.items[0].inputSchema }}"
						}
					},
					"inaccessibleApps":{
						"source":"{{ mwIiy.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"appName":"{{ mwIiy.outputs.items[0].appName }}",
							"connectionLookupResponse":"{{ mwIiy.outputs.items[0].connectionLookupResponse }}",
							"appLookupResponse":"{{ mwIiy.outputs.items[0].appLookupResponse }}"
						}
					},
					"tools":{
						"source":"{{ T0gif.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ T0gif.outputs.items[0].id }}",
							"name":"{{ T0gif.outputs.items[0].name }}",
							"description":"{{ T0gif.outputs.items[0].description }}",
							"toolInputSchema":"{{ T0gif.outputs.items[0].toolInputSchema }}",
							"additional":"{{ T0gif.outputs.items[0].additional }}"
						}
					},
					"toolsWithLookup":{
						"source":"{{ n_QgLL5.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_QgLL5.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":97,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_dfjrh",
			"index":37,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"toolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Input Schema"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"toolInputSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tool Input Schema"
						}
					}
				},
				"code":"// Recursive function to process the schema\nvoid processSchema(Map node) {\n    if (!(node instanceof Map) || node == null) return\n\n    if (node.containsKey('oneOf') && node.oneOf instanceof List) {\n      def constValues = node.oneOf*.const\n      def oneOfString = com.unifyapps.infra.utils.JsonUtils.toJson(constValues)\n      def desc = node.description ?: \"\"\n      node.description = desc + \"\\n\\nPossible Values (stringified):\\n\" + oneOfString\n      node.remove('oneOf')\n    }\n    if (node.containsKey('allOf') && node.allOf instanceof List) {\n      def allOfString = com.unifyapps.infra.utils.JsonUtils.toJson(node.allOf)\n      def desc = node.description ?: \"\"\n      node.description = desc + \"\\n\\nConditional schema (stringified):\\n\" + allOfString\n      node.remove('allOf')\n    }\n    if (node.containsKey('dependencies')) {\n        def depString = com.unifyapps.infra.utils.JsonUtils.toJson(node.dependencies)\n        def desc = node.description ?: \"\"\n        node.description = desc + \"\\n\\nDependencies (stringified):\\n\" + depString\n        node.remove('dependencies')\n    }\n    if (node.containsKey('properties') && (node.properties instanceof Map)){\n        node.properties.each { k, v ->\n            if (v instanceof Map) processSchema(v)\n        }\n    }\n\n    // items (array schemas) — support schema or tuple typing\n    if (node.containsKey('items')) {\n        def items = node.items\n        if (items instanceof Map) {\n            processSchema(items)\n        }\n    }\n}\nif(binding.hasVariable(\"toolInputSchema\")){\n    processSchema(toolInputSchema)\n    return [\n        \"toolInputSchema\": toolInputSchema\n    ]\n}\nreturn [\n    \"toolInputSchema\": [:]\n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"toolInputSchema":"{{ _u6WJr.outputs.result.toolInputSchema }}"
				}
			},
			"skip":false,
			"subTitle":"dependencies to description string",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"n_wNBoH",
			"index":38,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ _u6WJr.outputs.result.lookups }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"lookups present",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_wNBoH@_yALIl-1@y",
			"id":"n_JnxRl",
			"index":39,
			"inputs":{
				"itemToAdd":"{{ _u6WJr.outputs.result.toolName }}",
				"insertLocation":"END",
				"listName":"{{ n_QgLL5.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"toolWithLookup",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemsToAdd.items.context.connectionId",
					"root.itemsToAdd.items.context.resourceName",
					"root.itemsToAdd.items.context.appName",
					"root.itemsToAdd.items.inputSchema"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":119,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_wNBoH@_yALIl-1@y",
			"id":"_7H7j9",
			"index":40,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ _u6WJr.outputs.result.lookups }}",
					"items":{
						"connectionId":"{{ _u6WJr.outputs.result.lookups[0].connectionId }}",
						"appName":"{{ _u6WJr.outputs.result.lookups[0].appName }}",
						"resourceName":"{{ _u6WJr.outputs.result.lookups[0].resourceName }}",
						"context":{
							"connectionId":"{{ _u6WJr.outputs.result.lookups[0].connectionId }}",
							"resourceName":"{{ _u6WJr.outputs.result.lookups[0].resourceName }}",
							"appName":"{{ _u6WJr.outputs.result.lookups[0].appName }}"
						},
						"inputSchema":"{{ _u6WJr.outputs.result.lookups[0].inputSchema }}"
					}
				},
				"listName":"{{ qeqQ7.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add lookups",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.toolInputs.items.possibleValues.items",
					"root.itemToAdd.toolInputs.items.fieldName",
					"root.itemToAdd.toolInputs.items.fieldDescription",
					"root.itemToAdd.toolInputs.items.fieldType",
					"root.itemToAdd.toolInputs.items.mandatory"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":68,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"_3f8LX",
			"index":41,
			"inputs":{
				"itemToAdd":{
					"id":"{{ n_R5ujw.outputs.id }}",
					"name":"{{ _u6WJr.outputs.result.toolName }}",
					"description":"=CONCATENATE({{ n_R5ujw.outputs.description }},{{ _u6WJr.outputs.result.descriptionToAdd }})",
					"toolInputSchema":"{{ n_dfjrh.outputs.result.toolInputSchema }}"
				},
				"insertLocation":"END",
				"listName":"{{ T0gif.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add tool",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":28,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"_hNBbI",
			"index":42,
			"inputs":{
				"variables":[
					{
						"source":"{{ 0DA7Z.outputs.dynamicSchema }}",
						"value":"{{ _u6WJr.outputs.result.dynamicSchema }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yALIl-1",
			"id":"_WCurd",
			"index":43,
			"inputs":{
				"result":{
					"isDynamicToolEnabled":"{{ 0DA7Z.outputs.dynamicSchema }}",
					"enableClarifyConnection":"{{ 0DA7Z.outputs.enableClarifyConnection }}",
					"lookups":{
						"source":"{{ qeqQ7.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"context":{
								"connnectionId":"{{ qeqQ7.outputs.items[0].context.connectionId }}",
								"resourceName":"{{ qeqQ7.outputs.items[0].context.resourceName }}",
								"appName":"{{ qeqQ7.outputs.items[0].context.appName }}"
							},
							"inputSchema":"{{ qeqQ7.outputs.items[0].inputSchema }}"
						}
					},
					"inaccessibleApps":{
						"source":"{{ mwIiy.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"appName":"{{ mwIiy.outputs.items[0].appName }}",
							"connectionLookupResponse":"{{ mwIiy.outputs.items[0].connectionLookupResponse }}",
							"appLookupResponse":"{{ mwIiy.outputs.items[0].appLookupResponse }}"
						}
					},
					"tools":{
						"source":"{{ T0gif.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"id":"{{ T0gif.outputs.items[0].id }}",
							"name":"{{ T0gif.outputs.items[0].name }}",
							"description":"{{ T0gif.outputs.items[0].description }}",
							"toolInputSchema":"{{ T0gif.outputs.items[0].toolInputSchema }}",
							"additional":"{{ T0gif.outputs.items[0].additional }}"
						}
					},
					"toolsWithLookup":{
						"source":"{{ n_QgLL5.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ n_QgLL5.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":0,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":85
}