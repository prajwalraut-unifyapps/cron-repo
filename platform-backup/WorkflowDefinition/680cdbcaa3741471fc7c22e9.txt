{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1747000716662,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759166594839,
		"deployedBy":1,
		"deployedDefinitionId":"68dac082d46b57677a9794f3",
		"status":"DEPLOYED",
		"version":83,
		"workflowVersion":121
	},
	"edges":[
		{
			"fromNodeId":"4Duue",
			"priority":0,
			"skip":false,
			"toNodeId":"1pM9o",
			"type":"next"
		},
		{
			"fromNodeId":"1pM9o",
			"priority":0,
			"skip":false,
			"toNodeId":"QVN2V",
			"type":"next"
		},
		{
			"fromNodeId":"QVN2V",
			"priority":0,
			"skip":false,
			"toNodeId":"4z6fa",
			"type":"next"
		},
		{
			"fromNodeId":"4z6fa",
			"priority":0,
			"skip":false,
			"toNodeId":"Sph9E",
			"type":"next"
		},
		{
			"fromNodeId":"Sph9E",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"WPuEm",
			"type":"if"
		},
		{
			"fromNodeId":"Sph9E",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"DRv8u",
			"type":"next"
		},
		{
			"fromNodeId":"DRv8u",
			"priority":0,
			"skip":false,
			"toNodeId":"edLMQ",
			"type":"next"
		},
		{
			"fromNodeId":"edLMQ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"kX2Gx",
			"type":"if"
		},
		{
			"fromNodeId":"kX2Gx",
			"priority":0,
			"skip":false,
			"toNodeId":"NqiyC",
			"type":"next"
		},
		{
			"fromNodeId":"edLMQ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"NqiyC",
			"type":"next"
		},
		{
			"fromNodeId":"NqiyC",
			"priority":0,
			"skip":false,
			"toNodeId":"lm9Qa",
			"type":"next"
		},
		{
			"fromNodeId":"WPuEm",
			"priority":0,
			"skip":false,
			"toNodeId":"VWU23",
			"type":"next"
		},
		{
			"fromNodeId":"lm9Qa",
			"priority":0,
			"skip":false,
			"toNodeId":"VWU23",
			"type":"next"
		},
		{
			"fromNodeId":"VWU23",
			"priority":0,
			"skip":false,
			"toNodeId":"n_mMf35",
			"type":"next"
		},
		{
			"fromNodeId":"n_mMf35",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"njg21",
			"type":"if"
		},
		{
			"fromNodeId":"njg21",
			"priority":0,
			"skip":false,
			"toNodeId":"dFTNb",
			"type":"next"
		},
		{
			"fromNodeId":"dFTNb",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ahFK8",
			"type":"next"
		},
		{
			"fromNodeId":"n_ahFK8",
			"priority":0,
			"skip":false,
			"toNodeId":"44bRk",
			"type":"next"
		},
		{
			"fromNodeId":"44bRk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_vQEPa",
			"type":"loop"
		},
		{
			"fromNodeId":"n_vQEPa",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GZu5a",
			"type":"next"
		},
		{
			"fromNodeId":"n_GZu5a",
			"priority":0,
			"skip":false,
			"toNodeId":"CeIul",
			"type":"next"
		},
		{
			"fromNodeId":"CeIul",
			"priority":0,
			"skip":false,
			"toNodeId":"n_CrbEo",
			"type":"next"
		},
		{
			"fromNodeId":"n_CrbEo",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"44bRk",
			"type":"next"
		},
		{
			"fromNodeId":"44bRk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_hcRDb",
			"type":"next"
		},
		{
			"fromNodeId":"n_mMf35",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_GPYdD",
			"type":"next"
		},
		{
			"fromNodeId":"_GPYdD",
			"priority":0,
			"skip":false,
			"toNodeId":"_rOuTX",
			"type":"next"
		},
		{
			"fromNodeId":"_rOuTX",
			"priority":0,
			"skip":false,
			"toNodeId":"_rCFHi",
			"type":"next"
		},
		{
			"fromNodeId":"_rCFHi",
			"priority":0,
			"skip":false,
			"toNodeId":"CVK5B",
			"type":"loop"
		},
		{
			"fromNodeId":"CVK5B",
			"priority":0,
			"skip":false,
			"toNodeId":"U6J5u",
			"type":"next"
		},
		{
			"fromNodeId":"U6J5u",
			"priority":0,
			"skip":false,
			"toNodeId":"_M8eup",
			"type":"next"
		},
		{
			"fromNodeId":"_M8eup",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"_rCFHi",
			"type":"next"
		},
		{
			"fromNodeId":"n_hcRDb",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bDi5Z",
			"type":"next"
		},
		{
			"fromNodeId":"_rCFHi",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bDi5Z",
			"type":"next"
		},
		{
			"fromNodeId":"n_bDi5Z",
			"priority":0,
			"skip":false,
			"toNodeId":"n_tWmTx",
			"type":"next"
		},
		{
			"fromNodeId":"n_tWmTx",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"2bJM9",
			"type":"if"
		},
		{
			"fromNodeId":"2bJM9",
			"priority":0,
			"skip":false,
			"toNodeId":"mrpCx",
			"type":"next"
		},
		{
			"fromNodeId":"mrpCx",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FvUnW",
			"type":"next"
		},
		{
			"fromNodeId":"n_tWmTx",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_Xp9Fm",
			"type":"next"
		},
		{
			"fromNodeId":"_Xp9Fm",
			"priority":0,
			"skip":false,
			"toNodeId":"_zOQEt",
			"type":"next"
		},
		{
			"fromNodeId":"_zOQEt",
			"priority":0,
			"skip":false,
			"toNodeId":"n_B9yOn",
			"type":"next"
		},
		{
			"fromNodeId":"n_FvUnW",
			"priority":0,
			"skip":false,
			"toNodeId":"3bQHm",
			"type":"next"
		},
		{
			"fromNodeId":"n_B9yOn",
			"priority":0,
			"skip":false,
			"toNodeId":"3bQHm",
			"type":"next"
		},
		{
			"fromNodeId":"3bQHm",
			"priority":0,
			"skip":false,
			"toNodeId":"P6jPO",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"680cdbcaa3741471fc7c22e9",
	"lastModifiedBy":-1,
	"lcName":"observability | get trace timeline",
	"modifiedTime":1759169828151,
	"name":"Observability | Get Trace Timeline",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":296,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"4Duue",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"timeline":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Timeline"
						},
						"title":{
							"type":"string",
							"title":"Title"
						}
					},
					"additionalProperties":false,
					"required":[
						"timeline",
						"title"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"traceId":{
							"type":"string",
							"title":"traceId"
						}
					},
					"additionalProperties":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":290,
				"resourceName":"storage_by_unifyapps_get_records_by_ids",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"1pM9o",
			"index":2,
			"inputs":{
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"ids":[
					"{{ 4Duue.outputs.traceId }}"
				],
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Storage",
			"title":"Get records by IDs",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":299,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"QVN2V",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"fanMessage":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Fan Message"
						},
						"brandMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"content":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Content"
									},
									"createdTime":{
										"type":"number",
										"title":"Created Time"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Brand Messages"
						},
						"latency":{
							"type":"number",
							"title":"Latency"
						},
						"fanMessageCreatedTime":{
							"type":"integer",
							"title":"Fan Message Created Time"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"fanMessage":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Fan Message"
						},
						"brandMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"content":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Content"
									},
									"createdTime":{
										"type":"number",
										"title":"Created Time"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Brand Messages"
						},
						"latency":{
							"type":"number",
							"title":"Latency"
						},
						"fanMessageCreatedTime":{
							"type":"integer",
							"title":"Fan Message Created Time"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":300,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"4z6fa",
			"index":4,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"object":{
											"type":"string",
											"title":"Object"
										}
									},
									"required":[
										"object"
									]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"list",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"list",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"object":{
										"type":"string",
										"title":"Object"
									}
								},
								"required":[
									"object"
								]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":291,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"Sph9E",
			"index":5,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ 1pM9o.outputs.objects }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":302,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Sph9E@2bylS-1@y",
			"id":"WPuEm",
			"index":6,
			"inputs":{
				"result":{
					"timeline":{}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":303,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Sph9E@2bylS-1@n",
			"id":"DRv8u",
			"index":7,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_additional_parentMessageId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ 1pM9o.outputs.objects[0].id }}"
							}
						},
						{
							"filters":[
								{
									"property":"properties_additional_temporaryMessage",
									"filter":{
										"operator":"EQUAL",
										"value":"false"
									}
								},
								{
									"property":"properties_additional_temporaryMessage",
									"filter":{
										"operator":"MISSING"
									}
								}
							],
							"operator":"OR"
						},
						{
							"property":"properties_type",
							"filter":{
								"operator":"NOT_EQUAL",
								"value":"fan"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"service_hub_message",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"ASC"
					}
				],
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20,
					"offset":0
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":291,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Sph9E@2bylS-1@n",
			"id":"edLMQ",
			"index":8,
			"inputs":{
				"filters":[
					{
						"property":"=LEN({{ DRv8u.outputs.objects }})",
						"filter":{
							"operator":"EQUAL",
							"value":"0"
						}
					}
				],
				"operator":"AND"
			},
			"skip":true,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":302,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"edLMQ@Sph9E@2bylS-1@n@y",
			"id":"kX2Gx",
			"index":9,
			"inputs":{
				"result":{
					"timeline":{}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.brandMessages.items.modifiedTime",
					"root.parameters.brandMessages.items.streamCompletionTime"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":300,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Sph9E@2bylS-1@n",
			"id":"NqiyC",
			"index":10,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"latency"
					],
					"properties":{
						"latency":{
							"type":"number",
							"title":"Latency"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"brandMessages",
						"fanMessageCreatedTime"
					],
					"properties":{
						"brandMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"content":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Content"
									},
									"createdTime":{
										"type":"integer",
										"title":"Created Time"
									},
									"modifiedTime":{
										"type":"integer",
										"title":"Modified Time"
									},
									"streamCompletionTime":{
										"type":"integer",
										"title":"Stream Completion Time"
									}
								},
								"additionalProperties":false,
								"required":[
									"content",
									"createdTime"
								]
							},
							"title":"Brand Messages"
						},
						"fanMessageCreatedTime":{
							"type":"integer",
							"title":"Fan Message Created Time"
						}
					}
				},
				"code":"def latency = 0\ndef endTime = System.currentTimeMillis()\n\nif (!binding.hasVariable('brandMessages')) {\n    brandMessages = []\n}\n\nif (brandMessages && brandMessages.size() > 0) {\n    def lastBrandMessage = brandMessages.last()\n    def lastModified = lastBrandMessage?.modifiedTime\n    def streamCompletionTime = lastBrandMessage?.streamCompletionTime\n\n    if (streamCompletionTime != null) {\n        endTime = streamCompletionTime\n    } else if (lastModified != null && fanMessageCreatedTime != null) {\n        endTime = lastModified\n    }\n}\n\nlatency = endTime - fanMessageCreatedTime\n\nreturn ['latency': latency, 'endTime': endTime]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"fanMessageCreatedTime":"{{ 1pM9o.outputs.objects[0].createdTime }}",
					"brandMessages":{
						"source":"{{ DRv8u.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":{
							"createdTime":"{{ DRv8u.outputs.objects[0].createdTime }}",
							"content":"{{ DRv8u.outputs.objects[0].properties.content }}",
							"modifiedTime":"{{ DRv8u.outputs.objects[0].modifiedTime }}",
							"streamCompletionTime":"{{ DRv8u.outputs.objects[0].properties.additional.streamingCompletionTime }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Latency and end time",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":297,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Sph9E@2bylS-1@n",
			"id":"lm9Qa",
			"index":11,
			"inputs":{
				"variables":[
					{
						"source":"{{ QVN2V.outputs.fanMessage }}",
						"value":"{{ 1pM9o.outputs.objects[0].properties.content }}"
					},
					{
						"source":"{{ QVN2V.outputs.brandMessages }}",
						"value":{
							"source":"{{ DRv8u.outputs.objects }}",
							"ua:type":"mappedArray",
							"items":{
								"content":"{{ DRv8u.outputs.objects[0].properties.content }}",
								"createdTime":"{{ DRv8u.outputs.objects[0].createdTime }}"
							}
						}
					},
					{
						"source":"{{ QVN2V.outputs.fanMessageCreatedTime }}",
						"value":"{{ 1pM9o.outputs.objects[0].createdTime }}"
					},
					{
						"source":"{{ QVN2V.outputs.latency }}",
						"value":"{{ NqiyC.outputs.result.latency }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":300,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"VWU23",
			"index":12,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{
										"timeTaken":{
											"type":"number",
											"title":"Time Taken"
										},
										"messageId":{
											"type":"string",
											"title":"Message Id"
										},
										"input":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Input"
										},
										"output":{
											"type":"object",
											"properties":{},
											"additionalProperties":false,
											"title":"Output"
										},
										"parent":{
											"type":"string",
											"title":"Parent"
										},
										"step":{
											"type":"string",
											"title":"Step"
										},
										"startTime":{
											"type":"integer",
											"title":"Start Time"
										},
										"id":{
											"type":"string",
											"title":"Id"
										},
										"toolName":{
											"type":"string",
											"title":"Tool Name"
										},
										"success":{
											"type":"boolean",
											"title":"Success"
										},
										"endTime":{
											"type":"integer",
											"title":"End Time"
										},
										"modelId":{
											"type":"string",
											"title":"Model Id"
										},
										"inputTokens":{
											"type":"integer",
											"title":"Input Tokens"
										},
										"outputTokens":{
											"type":"integer",
											"title":"Output Tokens"
										},
										"cost":{
											"type":"number",
											"title":"Cost"
										},
										"automationId":{
											"type":"string",
											"title":"Automation Id"
										},
										"executionInstanceId":{
											"type":"string",
											"title":"Execution Instance Id"
										}
									},
									"required":[
										"timeTaken",
										"messageId",
										"input",
										"output",
										"parent",
										"step",
										"startTime",
										"id",
										"endTime"
									]
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"spans",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"spans",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"timeTaken":{
										"type":"number",
										"title":"Time Taken"
									},
									"messageId":{
										"type":"string",
										"title":"Message Id"
									},
									"input":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Input"
									},
									"output":{
										"type":"object",
										"properties":{},
										"additionalProperties":false,
										"title":"Output"
									},
									"parent":{
										"type":"string",
										"title":"Parent"
									},
									"step":{
										"type":"string",
										"title":"Step"
									},
									"startTime":{
										"type":"integer",
										"title":"Start Time"
									},
									"id":{
										"type":"string",
										"title":"Id"
									},
									"toolName":{
										"type":"string",
										"title":"Tool Name"
									},
									"success":{
										"type":"boolean",
										"title":"Success"
									},
									"endTime":{
										"type":"integer",
										"title":"End Time"
									},
									"modelId":{
										"type":"string",
										"title":"Model Id"
									},
									"inputTokens":{
										"type":"integer",
										"title":"Input Tokens"
									},
									"outputTokens":{
										"type":"integer",
										"title":"Output Tokens"
									},
									"cost":{
										"type":"number",
										"title":"Cost"
									},
									"automationId":{
										"type":"string",
										"title":"Automation Id"
									},
									"executionInstanceId":{
										"type":"string",
										"title":"Execution Instance Id"
									}
								},
								"required":[
									"timeTaken",
									"messageId",
									"input",
									"output",
									"parent",
									"step",
									"startTime",
									"id",
									"endTime"
								]
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"n_mMf35",
			"index":13,
			"inputs":{
				"filters":[
					{
						"property":"{{ __ENV__.outputs.read_traces_from_e_traces }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ __ENV__.outputs.read_traces_from_e_traces }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@y",
			"id":"njg21",
			"index":14,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"sqlQuery"
					],
					"properties":{
						"sqlQuery":{
							"type":"string",
							"title":"Sql Query"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"messageId",
						"startTime"
					],
					"properties":{
						"messageId":{
							"type":"string",
							"title":"Message Id"
						},
						"startTime":{
							"type":"string",
							"title":"Start Time"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						}
					}
				},
				"code":"import java.text.SimpleDateFormat\nimport java.util.TimeZone\n\nString epochToFullDate(String input, int hourOffset = 0) {\n    try {\n        if (input.isLong()) {\n            long epoch = input.toLong()\n\n            // If it's in seconds, convert to milliseconds\n            if (epoch < 1000000000000L) {\n                epoch *= 1000\n            }\n\n            // Apply hour offset (in milliseconds)\n            epoch += (hourOffset * 60L * 60L * 1000L)\n\n            Date date = new Date(epoch)\n            // ISO 8601 with timezone and milliseconds\n            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\")\n            sdf.setTimeZone(TimeZone.getDefault())\n            return sdf.format(date)\n        }\n    } catch (Exception e) {\n        // return original string if not epoch\n    }\n    return input\n}\n\ndef generateQuery(messageId, startTime, endTime) {\n    return \"SELECT \" +\n            \" eTraces.id AS id, \" +\n            \" eTraces._pr_success AS success, \" +\n           \"    eTraces._pr_llmTimeTaken AS timeTaken, \" +\n           \"    eTraces._pr_messageId AS messageId, \" +\n           \"    eTraces._pr_input AS input, \" +\n           \"    eTraces._pr_output AS prOutput, \" +\n           \"    eTraces._pr_aiAgentId AS aiAgentId, \" +\n           \"    eTraces._pr_parent AS parent, \" +\n           \"    eTraces._pr_currentType AS step, \" +\n           \"    eTraces._pr_startTime AS startTime, \" +\n           \"    eTraces._pr_toolName AS toolName, \" +\n           \"    eTraces._pr_modelId AS modelId, \" +\n           \"    eTraces._pr_inputToken AS inputTokens, \" +\n           \"    eTraces._pr_outputToken AS outputTokens, \" +\n           \"    eTraces._pr_cost AS cost, \" +\n           \"    eTraces._pr_fromAutomationId AS automationId, \" +\n           \"    eTraces._pr_executionInstanceId AS executionInstanceId, \" +\n           \"    (eTraces._pr_startTime + eTraces._pr_llmTimeTaken) AS endTime \" +\n           \"FROM ENTITY_e_traces AS eTraces \" +\n           \"WHERE eTraces._pr_messageId = '\" + messageId + \"' \" +\n           \"  AND eTraces.timestamp BETWEEN '\" + startTime + \"' AND '\" + endTime + \"' \" +\n           \"  AND eTraces._pr_parent IS NOT NULL \" +\n           \"  AND eTraces._pr_fromAutomationId IN ( \" +\n            \"        '6851442f9e30586f552a6d73', \" +\n            \"        '67df12719fa26d792211be4f', \" +\n            \"        '66ac70650f725f5b425d12d8', \" +\n            \"        '67933cc866e1f1098aa02c39', \" +\n            \"        '66b32227db0c6546b93d3acc', \" +\n            \"        '66a1e74accc70b77f9bf0308', \" +\n            \"        '66b356891a78c401cb586890', \" +\n            \"        '67e6651efd3591529146b261', \" +\n            \"        '67e4346d4718117333c7ee9a', \" +\n            \"        '66b3353e1a78c401cb583431', \" +\n            \"        '679c6521a6583456a7198e97', \" +\n            \"        '68206abcccc45f469e288de0', \" +\n            \"        '6853d10e492bca4185ba983d', \" +\n            \"        '6704f23182227947dd32e79c', \" +\n            \"        '679b7fdad2256d4d7f3277fe', \" +\n            \"        '6784ec5e2bf24b00b3976630', \" +\n            \"        '6784e8da2bf24b00b3975b17', \" +\n            \"        '66b0c2ccd84fac07ea3f3e84', \" +\n            \"        '66ae2f6e381d8834cd6742de', \" +\n            \"        '6784b9216fb83f0972c5625d' \" +\n           \"  ) \" +\n           \"ORDER BY eTraces._pr_startTime DESC\";\n}\n\ndef sqlQuery = generateQuery(messageId, epochToFullDate(startTime.toString(),-1), epochToFullDate(endTime.toString(),1))\n\nreturn [sqlQuery: sqlQuery]\n",
				"compile_static":false,
				"isAsync":false,
				"captureStdOutput":false,
				"parameters":{
					"messageId":"{{ 4Duue.outputs.traceId }}",
					"startTime":"{{ 1pM9o.outputs.objects[0].createdTime }}",
					"endTime":"{{ NqiyC.outputs.result.endTime }}"
				}
			},
			"skip":false,
			"subTitle":"Generate SQL",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":18,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@y",
			"id":"dFTNb",
			"index":15,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"timeTaken":{
									"type":"integer",
									"title":"timeTaken"
								},
								"messageId":{
									"type":"string",
									"title":"messageId"
								},
								"prOutput":{
									"type":"string",
									"title":"prOutput"
								},
								"aiAgentId":{
									"type":"string",
									"title":"aiAgentId"
								},
								"parent":{
									"type":"string",
									"title":"parent"
								},
								"step":{
									"type":"string",
									"title":"step"
								},
								"startTime":{
									"type":"string",
									"title":"startTime"
								},
								"toolName":{
									"type":"string",
									"title":"toolName"
								},
								"input":{
									"type":"string",
									"title":"Input",
									"default":"{}"
								},
								"id":{
									"type":"string",
									"title":"Id"
								},
								"success":{
									"type":"boolean",
									"title":"Success"
								},
								"endTime":{
									"type":"integer",
									"title":"End Time"
								},
								"modelId":{
									"type":"string",
									"title":"Model Id"
								},
								"inputTokens":{
									"type":"integer",
									"title":"Input Tokens"
								},
								"outputTokens":{
									"type":"integer",
									"title":"Output Tokens"
								},
								"cost":{
									"type":"number",
									"title":"Cost"
								},
								"automationId":{
									"type":"string",
									"title":"Automation Id"
								},
								"executionInstanceId":{
									"type":"string",
									"title":"Execution Instance Id"
								}
							},
							"title":"columns",
							"additionalProperties":false,
							"required":[]
						}
					}
				},
				"query":"{{ njg21.outputs.result.sqlQuery }}",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Execute SQL",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":450,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@y",
			"id":"n_ahFK8",
			"index":16,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"modelIds",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"modelIds",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"modelIds List",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":301,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@y",
			"id":"44bRk",
			"index":17,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ dFTNb.outputs.objects }}",
				"captureIterations":true
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"44bRk@n_mMf35@2bylS-1@y@l",
			"id":"n_vQEPa",
			"index":18,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"input":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					}
				},
				"code":"if (!binding.hasVariable('input')) {\n  input = [:]\n}\nif (!binding.hasVariable('success')) {\n  success = true\n}\n\nreturn [\n  \"input\" : input,\n  \"success\" : success\n]",
				"compile_static":false,
				"parameters":{
					"input":"{{ 44bRk.outputs.item.columns.input }}",
					"success":"{{ 44bRk.outputs.item.columns.success }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"44bRk@n_mMf35@2bylS-1@y@l",
			"id":"n_GZu5a",
			"index":19,
			"inputs":{
				"jsonString":"{{ n_vQEPa.outputs.result.input }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.messageId",
					"root.itemToAdd.parent",
					"root.itemToAdd.step",
					"root.itemToAdd.startTime",
					"root.itemToAdd.toolName"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":299,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"44bRk@n_mMf35@2bylS-1@y@l",
			"id":"CeIul",
			"index":20,
			"inputs":{
				"itemToAdd":{
					"timeTaken":"{{ 44bRk.outputs.item.columns.timeTaken }}",
					"messageId":"{{ 44bRk.outputs.item.columns.messageId }}",
					"input":"{{ n_GZu5a.outputs.result }}",
					"output":"{{ 44bRk.outputs.item.columns.prOutput }}",
					"parent":"{{ 44bRk.outputs.item.columns.parent }}",
					"step":"{{ 44bRk.outputs.item.columns.step }}",
					"startTime":"{{ 44bRk.outputs.item.columns.startTime }}",
					"id":"{{ 44bRk.outputs.item.columns.id }}",
					"toolName":"{{ 44bRk.outputs.item.columns.toolName }}",
					"success":"{{ n_vQEPa.outputs.result.success }}",
					"endTime":"{{ 44bRk.outputs.item.columns.endTime }}",
					"modelId":"{{ 44bRk.outputs.item.columns.modelId }}",
					"inputTokens":"{{ 44bRk.outputs.item.columns.inputTokens }}",
					"outputTokens":"{{ 44bRk.outputs.item.columns.outputTokens }}",
					"cost":"{{ 44bRk.outputs.item.columns.cost }}",
					"automationId":"{{ 44bRk.outputs.item.columns.automationId }}",
					"executionInstanceId":"{{ 44bRk.outputs.item.columns.executionInstanceId }}"
				},
				"insertLocation":"END",
				"listName":"{{ VWU23.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"44bRk@n_mMf35@2bylS-1@y@l",
			"id":"n_CrbEo",
			"index":21,
			"inputs":{
				"itemToAdd":"{{ 44bRk.outputs.item.columns.modelId }}",
				"insertLocation":"END",
				"listName":"{{ n_ahFK8.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":632,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@y",
			"id":"n_hcRDb",
			"index":22,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"IN",
								"value":"{{ n_ahFK8.outputs.items }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"ai_agent_llm_model",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"MULTIPLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Fetch Models",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@n",
			"id":"_GPYdD",
			"index":23,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sqlQuery":{
							"type":"string",
							"title":"Sql Query"
						}
					},
					"additionalProperties":false,
					"required":[
						"sqlQuery"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"messageId":{
							"type":"string",
							"title":"Message Id"
						},
						"startTime":{
							"type":"string",
							"title":"Start Time"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						}
					},
					"additionalProperties":false,
					"required":[
						"messageId",
						"startTime"
					]
				},
				"compile_static":false,
				"code":"def generateQuery(messageId) {\n    return \"SELECT * FROM WORKFLOW_NODE_EXECUTION wne \" +\n           \"WHERE wne.currentNodeId IN ('b66uk', 'mfyfl') \" +\n           \"AND CAST(wne.inputs -> 'messageId' AS STRING) = '\" + messageId + \"' \" +\n           \"AND wne.entryTime BETWEEN \" + startTime + \" AND \" + endTime +\n           \" ORDER BY entryTime ASC\"\n}\n\ndef sqlQuery = generateQuery(messageId)\n\nreturn [sqlQuery: sqlQuery]",
				"isAsync":false,
				"parameters":{
					"messageId":"{{ 4Duue.outputs.traceId }}",
					"startTime":"{{ 1pM9o.outputs.objects[0].createdTime }}",
					"endTime":"{{ NqiyC.outputs.result.endTime }}"
				}
			},
			"skip":false,
			"subTitle":"Generate SQL",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":18,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@n",
			"id":"_rOuTX",
			"index":24,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"outputs":{
									"type":"string",
									"title":"outputs"
								},
								"executionInstanceId":{
									"type":"string",
									"title":"executionInstanceId"
								},
								"inputs":{
									"type":"string",
									"title":"inputs"
								},
								"variableKey":{
									"type":"string",
									"title":"variableKey"
								},
								"currentNodeAppName":{
									"type":"string",
									"title":"currentNodeAppName"
								},
								"exitTime":{
									"type":"integer",
									"title":"exitTime"
								},
								"currentNodeId":{
									"type":"string",
									"title":"currentNodeId"
								},
								"id":{
									"type":"string",
									"title":"id"
								},
								"rootExecutionInstanceId":{
									"type":"string",
									"title":"rootExecutionInstanceId"
								},
								"workflowId":{
									"type":"string",
									"title":"workflowId"
								},
								"status":{
									"type":"string",
									"title":"status"
								},
								"parentExecutionInstanceId":{
									"type":"string",
									"title":"parentExecutionInstanceId"
								}
							},
							"additionalProperties":false,
							"required":[]
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"query":"{{ _GPYdD.outputs.result.sqlQuery }}",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Execute SQL",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":301,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_mMf35@2bylS-1@n",
			"id":"_rCFHi",
			"index":25,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ _rOuTX.outputs.objects }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":297,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_rCFHi@n_mMf35@2bylS-1@n@l",
			"id":"CVK5B",
			"index":26,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"agentId":{
							"type":"string",
							"title":"agentId"
						},
						"caseId":{
							"type":"string",
							"title":"caseId"
						},
						"input":{
							"type":"string",
							"title":"input"
						},
						"messageId":{
							"type":"string",
							"title":"messageId"
						},
						"output":{
							"type":"string",
							"title":"output"
						},
						"parent":{
							"type":"string",
							"title":"parent"
						},
						"startTime":{
							"type":"integer",
							"title":"startTime"
						},
						"step":{
							"type":"string",
							"title":"step"
						},
						"modelName":{
							"type":"string",
							"title":"Model Name"
						},
						"toolName":{
							"type":"string",
							"title":"Tool Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"jsonString":"{{ _rCFHi.outputs.item.columns.inputs }}"
			},
			"skip":false,
			"subTitle":"Utility",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":297,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_rCFHi@n_mMf35@2bylS-1@n@l",
			"id":"U6J5u",
			"index":27,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"result":{
							"type":"object",
							"properties":{
								"timeTaken":{
									"type":"integer",
									"title":"timeTaken"
								}
							},
							"title":"result",
							"additionalProperties":false
						}
					},
					"additionalProperties":false
				},
				"jsonString":"{{ _rCFHi.outputs.item.columns.outputs }}"
			},
			"skip":false,
			"subTitle":"Utility",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":299,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_rCFHi@n_mMf35@2bylS-1@n@l",
			"id":"_M8eup",
			"index":28,
			"inputs":{
				"itemToAdd":{
					"timeTaken":"{{ U6J5u.outputs.result.result.timeTaken }}",
					"messageId":"{{ CVK5B.outputs.result.messageId }}",
					"input":"{{ CVK5B.outputs.result.input }}",
					"output":"{{ CVK5B.outputs.result.output }}",
					"parent":"{{ CVK5B.outputs.result.parent }}",
					"step":"{{ CVK5B.outputs.result.step }}",
					"startTime":"{{ CVK5B.outputs.result.startTime }}",
					"id":"{{ _rCFHi.outputs.item.columns.id }}",
					"modelName":"{{ CVK5B.outputs.result.modelName }}",
					"toolName":"{{ CVK5B.outputs.result.toolName }}",
					"success":true
				},
				"insertLocation":"END",
				"listName":"{{ VWU23.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"n_bDi5Z",
			"index":29,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"costs":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"columns":{
										"type":"object",
										"properties":{
											"inputTokens":{
												"type":"integer",
												"title":"inputTokens"
											},
											"outputTokens":{
												"type":"integer",
												"title":"outputTokens"
											},
											"totalCost":{
												"type":"number",
												"title":"totalCost"
											}
										},
										"title":"columns",
										"additionalProperties":false,
										"required":[]
									}
								},
								"additionalProperties":false
							},
							"title":"costs"
						}
					}
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"costs":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"columns":{
										"type":"object",
										"properties":{
											"inputTokens":{
												"type":"integer",
												"title":"inputTokens"
											},
											"outputTokens":{
												"type":"integer",
												"title":"outputTokens"
											},
											"totalCost":{
												"type":"number",
												"title":"totalCost"
											}
										},
										"title":"columns",
										"additionalProperties":false,
										"required":[]
									}
								},
								"additionalProperties":false
							},
							"title":"costs"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":439,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"n_tWmTx",
			"index":30,
			"inputs":{
				"filters":[
					{
						"property":"{{ __ENV__.outputs.read_traces_from_e_traces }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ __ENV__.outputs.read_traces_from_e_traces }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":623,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_tWmTx@2bylS-1@y",
			"id":"2bJM9",
			"index":31,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"sqlQuery"
					],
					"properties":{
						"sqlQuery":{
							"type":"string",
							"title":"Sql Query"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"messageId",
						"startTime",
						"endTime"
					],
					"properties":{
						"messageId":{
							"type":"string",
							"title":"Message Id"
						},
						"startTime":{
							"type":"string",
							"title":"Start Time"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						}
					}
				},
				"code":"import java.text.SimpleDateFormat\nimport java.util.TimeZone\n\nString epochToFullDate(String input, int hourOffset = 0) {\n    try {\n        if (input.isLong()) {\n            long epoch = input.toLong()\n\n            // If it's in seconds, convert to milliseconds\n            if (epoch < 1000000000000L) {\n                epoch *= 1000\n            }\n\n            // Apply hour offset (in milliseconds)\n            epoch += (hourOffset * 60L * 60L * 1000L)\n\n            Date date = new Date(epoch)\n            // ISO 8601 with timezone and milliseconds\n            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\")\n            sdf.setTimeZone(TimeZone.getDefault())\n            return sdf.format(date)\n        }\n    } catch (Exception e) {\n        // return original string if not epoch\n    }\n    return input\n}\n\ndef generateQuery(messageId, startTime, endTime) {\n    return \"SELECT \" +\n           \"    SUM(_pr_inputToken) AS input_tokens, \" +\n           \"    SUM(_pr_outputToken) AS output_tokens, \" +\n           \"    SUM(_pr_cost) AS total_cost \" +\n           \"FROM ENTITY_e_traces \" +\n           \"WHERE _pr_fromAutomationId IN ( \" +\n           \"    '6851442f9e30586f552a6d73', \"+\n           \"    '67df12719fa26d792211be4f', \"+\n           \"    '66ac70650f725f5b425d12d8', \" +\n           \"    '67933cc866e1f1098aa02c39', \" +\n           \"    '66b32227db0c6546b93d3acc', \" +\n           \"    '66a1e74accc70b77f9bf0308', \" +\n           \"    '66b356891a78c401cb586890', \" +\n           \"    '67e6651efd3591529146b261', \" +\n           \"    '67e4346d4718117333c7ee9a', \" +\n           \"    '66b3353e1a78c401cb583431', \" +\n           \"    '679c6521a6583456a7198e97', \" +\n           \"    '68206abcccc45f469e288de0', \" +\n           \"    '6853d10e492bca4185ba983d' \" +\n           \") \" +\n           \"AND timestamp BETWEEN '\" + startTime + \"' AND '\" + endTime + \"' \" +\n           \"AND _pr_messageId = '\" + messageId + \"'\";\n}\n\ndef sqlQuery = generateQuery(messageId, epochToFullDate(startTime.toString(),-1), epochToFullDate(endTime.toString(),1))\n\nreturn [sqlQuery: sqlQuery]\n",
				"compile_static":false,
				"parameters":{
					"messageId":"{{ 4Duue.outputs.traceId }}",
					"startTime":"{{ 1pM9o.outputs.objects[0].createdTime }}",
					"endTime":"{{ NqiyC.outputs.result.endTime }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":554,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_tWmTx@2bylS-1@y",
			"id":"mrpCx",
			"index":32,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"columns"
					],
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"input_tokens":{
									"type":"integer",
									"title":"Input Tokens"
								},
								"total_cost":{
									"type":"number",
									"title":"Total Cost"
								},
								"output_tokens":{
									"type":"integer",
									"title":"Output Tokens"
								},
								"success":{
									"type":"boolean",
									"title":"Success"
								}
							},
							"additionalProperties":false,
							"title":"Columns",
							"required":[
								"input_tokens",
								"total_cost",
								"output_tokens"
							]
						}
					}
				},
				"query":"{{ 2bJM9.outputs.result.sqlQuery }}",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_tWmTx@2bylS-1@y",
			"id":"n_FvUnW",
			"index":33,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_bDi5Z.outputs.costs }}",
						"value":{
							"source":"{{ mrpCx.outputs.objects }}",
							"ua:type":"mappedArray",
							"items":{
								"columns":{
									"inputTokens":"{{ mrpCx.outputs.objects[0].columns.input_tokens }}",
									"outputTokens":"{{ mrpCx.outputs.objects[0].columns.output_tokens }}",
									"totalCost":"{{ mrpCx.outputs.objects[0].columns.total_cost }}"
								}
							}
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":623,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_tWmTx@2bylS-1@n",
			"id":"_Xp9Fm",
			"index":34,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sqlQuery":{
							"type":"string",
							"title":"Sql Query"
						}
					},
					"additionalProperties":false,
					"required":[
						"sqlQuery"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"messageId":{
							"type":"string",
							"title":"Message Id"
						},
						"startTime":{
							"type":"string",
							"title":"Start Time"
						},
						"endTime":{
							"type":"string",
							"title":"End Time"
						}
					},
					"additionalProperties":false,
					"required":[
						"messageId",
						"startTime",
						"endTime"
					]
				},
				"compile_static":false,
				"code":"def generateQuery(messageId) {\n    return \"SELECT \" +\n           \"SUM(CAST(wne.inputs -> 'inputTokens' AS INTEGER)) AS input_tokens, \" +\n           \"SUM(CAST(wne.inputs -> 'outputTokens' AS INTEGER)) AS output_tokens, \" +\n           \"SUM(CAST(wne.inputs -> 'totalCost' AS DOUBLE)) AS total_cost \" +\n           \"FROM WORKFLOW_NODE_EXECUTION wne \" +\n           \"WHERE wne.currentNodeId IN ('b66uk') \" +\n           \"AND wne.workflowId IN ('66ac70650f725f5b425d12d8','67e4346d4718117333c7ee9a') \" +\n           \"AND wne.entryTime BETWEEN \" + startTime + \" AND \" + endTime + \" \" +\n           \"AND CAST(wne.inputs -> 'messageId' AS STRING) = '\" + messageId + \"'\"\n}\n\ndef sqlQuery = generateQuery(messageId)\n\nreturn [sqlQuery: sqlQuery]",
				"parameters":{
					"messageId":"{{ 4Duue.outputs.traceId }}",
					"startTime":"{{ 1pM9o.outputs.objects[0].createdTime }}",
					"endTime":"{{ NqiyC.outputs.result.endTime }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"analytics_by_unifyapps",
				"resourceVersion":554,
				"resourceName":"analytics_by_unifyapps_execute_query",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_tWmTx@2bylS-1@n",
			"id":"_zOQEt",
			"index":35,
			"inputs":{
				"outputSchema":{
					"type":"object",
					"properties":{
						"columns":{
							"type":"object",
							"properties":{
								"input_tokens":{
									"type":"integer",
									"title":"Input Tokens"
								},
								"total_cost":{
									"type":"number",
									"title":"Total Cost"
								},
								"output_tokens":{
									"type":"integer",
									"title":"Output Tokens"
								}
							},
							"additionalProperties":false,
							"title":"Columns",
							"required":[
								"input_tokens",
								"total_cost",
								"output_tokens"
							]
						}
					},
					"additionalProperties":false,
					"required":[
						"columns"
					]
				},
				"query":"{{ _Xp9Fm.outputs.result.sqlQuery }}",
				"group":"PLATFORM"
			},
			"skip":false,
			"subTitle":"Analytics by UnifyApps",
			"title":"Execute Analytics SQL Query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_tWmTx@2bylS-1@n",
			"id":"n_B9yOn",
			"index":36,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_bDi5Z.outputs.costs }}",
						"value":{
							"source":"{{ _zOQEt.outputs.objects }}",
							"ua:type":"mappedArray",
							"items":{
								"columns":{
									"inputTokens":"{{ _zOQEt.outputs.objects[0].columns.input_tokens }}",
									"outputTokens":"{{ _zOQEt.outputs.objects[0].columns.output_tokens }}",
									"totalCost":"{{ _zOQEt.outputs.objects[0].columns.total_cost }}",
									"success":true
								}
							}
						}
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.spans.items.input",
					"root.parameters.spans.items.messageId",
					"root.parameters.spans.items.output",
					"root.parameters.spans.items.parent",
					"root.parameters.spans.items.step",
					"root.parameters.spans.items.timeTaken",
					"root.parameters.spans.items.toolName",
					"root.parameters.spans.items.success",
					"root.parameters.spans.items.endTime",
					"root.parameters.spans.items.modelId",
					"root.parameters.modelDetails.items.modelId",
					"root.parameters.modelDetails.items.modelName",
					"root.parameters.modelDetails.items.iconUrl",
					"root.parameters.spans.items.inputTokens",
					"root.parameters.spans.items.outputTokens",
					"root.parameters.spans.items.cost",
					"root.parameters.spans.items.automationId",
					"root.parameters.spans.items.executionInstanceId"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":300,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"3bQHm",
			"index":37,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"timeline"
					],
					"properties":{
						"timeline":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Timeline"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"messageId",
						"fanMessageContent",
						"brandMessages",
						"timeTaken",
						"totalCost",
						"fanMessageCreatedTime",
						"totalInputTokens",
						"totalOutputTokens"
					],
					"properties":{
						"spans":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"input":{
										"type":"string",
										"title":"input"
									},
									"messageId":{
										"type":"string",
										"title":"messageId"
									},
									"output":{
										"type":"string",
										"title":"output"
									},
									"parent":{
										"type":"string",
										"title":"parent"
									},
									"step":{
										"type":"string",
										"title":"step"
									},
									"timeTaken":{
										"type":"integer",
										"title":"timeTaken"
									},
									"startTime":{
										"type":"integer",
										"title":"Start Time"
									},
									"id":{
										"type":"string",
										"title":"Id"
									},
									"toolName":{
										"type":"string",
										"title":"Tool Name"
									},
									"success":{
										"type":"boolean",
										"title":"Success"
									},
									"endTime":{
										"type":"integer",
										"title":"End Time"
									},
									"modelId":{
										"type":"string",
										"title":"Model Id"
									},
									"inputTokens":{
										"type":"integer",
										"title":"Input Tokens"
									},
									"outputTokens":{
										"type":"integer",
										"title":"Output Tokens"
									},
									"cost":{
										"type":"number",
										"title":"Cost"
									},
									"automationId":{
										"type":"string",
										"title":"Automation Id"
									},
									"executionInstanceId":{
										"type":"string",
										"title":"Execution Instance Id"
									}
								},
								"additionalProperties":false,
								"required":[
									"startTime",
									"id"
								]
							},
							"title":"spans"
						},
						"messageId":{
							"type":"string",
							"title":"Message Id"
						},
						"fanMessageContent":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Fan Message Content"
						},
						"brandMessages":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Brand Messages"
						},
						"timeTaken":{
							"type":"string",
							"title":"Time Taken"
						},
						"totalCost":{
							"type":"number",
							"title":"Total Cost"
						},
						"fanMessageCreatedTime":{
							"type":"integer",
							"title":"Fan Message Created Time"
						},
						"totalInputTokens":{
							"type":"integer",
							"title":"Total Input Tokens"
						},
						"totalOutputTokens":{
							"type":"string",
							"title":"Total Output Tokens"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"modelDetails":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"modelId":{
										"type":"string",
										"title":"Model Id"
									},
									"modelName":{
										"type":"string",
										"title":"Model Name"
									},
									"iconUrl":{
										"type":"string",
										"title":"Icon Url"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Model Details"
						}
					}
				},
				"code":"if (!binding.hasVariable('spans')) {\n    spans = [:]\n}\n\nif (!binding.hasVariable('brandMessages')) {\n    brandMessages = []\n}\n\nif (!binding.hasVariable('fanMessageContent')) {\n    fanMessageContent = [:]\n}\n\ndef TOOL_DISPLAY_NAMES = [\n    \"ReferFromKnowledge\":\"Search Knowledge Base\",\n    \"Generate_public_file_URL\":\"Create Public URL of File\",\n    \"IngestKnowledge\":\"Knowledge Ingestion\",\n    \"AnalyseFile\":\"File Analysis\",\n    \"GenerateCharts\":\"Generate Charts and Tables\",\n    \"think\":\"Think\",\n    \"ClarifyFromUser\":\"Request Clarification\",\n    \"PublishCitations\":\"Citing Sources\",\n    \"SetTopic\":\"Set Task\",\n    \"SwitchTopic\":\"Switch Task\",\n    \"WebSearch\":\"Web Search\"\n]\n\ndef getContent(input, step = \"default\") {\n    def output = [:]\n\n    if (input instanceof String) {\n        if (step == \"Retrieval\") {\n            output.content = com.unifyapps.infra.utils.JsonUtils.fromJson(input, Map.class)\n            output.type = 'CHUNKS'\n        } else if (input.startsWith('####Here are the Relevant Knowledge chunks')) {\n            output.content = input\n            output.type = 'MARKDOWN'\n        } else {\n            output.content = input\n            output.type = 'TEXT'\n        }\n    } else {\n        output.content = input\n        output.type = 'JSON'\n    }\n\n    return output\n}\n\ndef getInfo(span, modelMap) {\n    def info = []\n    if (span.success) {\n        info << ['type': 'status', 'value': 'success', 'title': 'Success']\n    } else {\n        info << ['type': 'status', 'value': 'error', 'title': 'Error']\n    }\n\n    info << ['type': 'latency', 'value': span.timeTaken, 'title': 'Latency']\n    info << ['type': 'time', 'value': span.startTime, 'title': 'Start Time']\n    info << ['type': 'time', 'value': ((span.startTime ?: 0) + (span.timeTaken ?: 0)), 'title': 'End Time']\n\n    if (span.step == \"LLM\") {\n        if (span.modelId) {\n            def model = modelMap[span.modelId]\n            info << ['type': 'model', 'value': model?.name ?: \"\", 'iconUrl': model?.iconUrl ?: \"\", 'title': \"Model\"]\n        }\n\n        info << ['type': 'cost', 'value': '$' + ((span.cost ?: 0) as BigDecimal).setScale(5, BigDecimal.ROUND_HALF_UP), 'title': 'Cost']\n        def tokenValue = ['up': span.inputTokens ?: 0, 'down': span.outputTokens ?: 0]\n        info << ['type': 'token', 'value': tokenValue, 'title': 'Tokens']\n    }\n    return info\n}\n\ndef allSuccess(spans) {\n    if (!spans) return true\n    return spans.every { it.success == true }\n}\n\ndef getQueryInfo(startTime, timeTaken, cost, totalInputTokens, totalOutputTokens, success) {\n    def info = []\n    if (success) {\n        info << ['type': 'status', 'value': 'success', 'title': 'Success']\n    } else {\n        info << ['type': 'status', 'value': 'error', 'title': 'Error']\n    }\n    info << ['type': 'latency', 'value': timeTaken, 'title': 'Latency']\n    info << ['type': 'time', 'value': startTime, 'title': 'Start Time']\n    info << ['type': 'time', 'value': (startTime + (timeTaken ?: 0)), 'title': 'End Time']\n    info << ['type': 'cost', 'value': '$' + ((cost ?: 0) as BigDecimal).setScale(5, BigDecimal.ROUND_HALF_UP), 'title': 'Cost']\n    def tokenValue = ['up': totalInputTokens ?: 0, 'down': totalOutputTokens ?: 0]\n    info << ['type': 'token', 'value': tokenValue, 'title': 'Tokens']\n\n    return info\n}\n\ndef getStartTime(node) {\n    if (node.startTime != null) return node.startTime\n    if (node.info) {\n        def startTimeInfo = node.info.find { it.title == 'Start Time' }\n        return startTimeInfo?.value ?: 0L\n    }\n    return 0L\n}\n\ndef sortByStartTime(nodes) {\n    return nodes.sort { a, b -> getStartTime(a) <=> getStartTime(b) }\n}\n\ndef movedNodeIds = []\ndef removeNodeFromParents = { nodeId, parents ->\n    parents.removeAll { parent ->\n        if (parent.children) {\n            parent.children.removeAll { it.id == nodeId }\n        }\n        // Remove any now-empty container parents except Agent Execution\n        return (parent.type != 'Agent Execution' && parent.children != null && parent.children.isEmpty())\n    }\n}\n\n// Group spans by parent ID\ndef parentVsSpans = new LinkedHashMap<>()\nif (binding.hasVariable('spans')) {\n    spans.each { span ->\n        parentVsSpans.computeIfAbsent(span.parent) { [] } << span\n    }\n}\n\ndef inputTokens = binding.hasVariable('totalInputTokens') ? totalInputTokens : 0\ndef outputTokens = binding.hasVariable('totalOutputTokens') ? totalOutputTokens : 0\ndef cost = binding.hasVariable('totalCost') ? totalCost : 0\n\ndef modelMap = [:]\nif (binding.hasVariable('modelDetails') && modelDetails) {\n    modelMap = modelDetails.collectEntries { model ->\n        [(model.modelId): [name: model.modelName, iconUrl: model.iconUrl]]\n    }\n}\n\ndef query = [\n    type: 'Query',\n    id: messageId,\n    input: getContent(fanMessageContent),\n    output: getContent(brandMessages),\n    timeTaken: timeTaken,\n    info: getQueryInfo(fanMessageCreatedTime, timeTaken, cost, inputTokens, outputTokens, allSuccess(spans)),\n    children: []\n]\n\ndef parents = parentVsSpans.collect { parentId, spanList ->\n    def parent = [\n        type: parentId,\n        id: parentId\n    ]\n\n    def children = spanList.collect { span ->\n        def child = [\n            id: span.id,\n            type: span.step,\n            timeTaken: span.timeTaken ?: 0,\n            startTime: span.startTime,\n            input: getContent(span.input, span.step),\n            output: getContent(span.output, span.step),\n            info: getInfo(span, modelMap),\n            endTime: span.endTime,\n            automationId: span.containsKey('automationId') ? span.automationId : \"\",\n            executionInstanceId: span.containsKey('executionInstanceId') ? span.executionInstanceId : \"\"\n        ]\n        def toolname = span.toolName\n        if (toolname && span.step == \"Tool\") {\n            child.toolName = toolname\n            child.toolDisplayName = TOOL_DISPLAY_NAMES[toolname] ?: toolname\n        }\n        return child\n    }\n\n    children = sortByStartTime(children)\n\n    parent.children = children\n\n    if (children) {\n        def firstStart = children.first().startTime\n        def lastEnd = children.collect { it.endTime ?: 0L }.max()\n        parent.startTime = firstStart ?: 0L\n        parent.endTime = lastEnd ?: 0L\n        parent.timeTaken = (lastEnd != null && firstStart != null) ? (lastEnd - firstStart) : 0\n    } else {\n        parent.startTime = 0L\n        parent.endTime = 0L\n        parent.timeTaken = 0\n    }\n    return parent\n}\n\nparents = sortByStartTime(parents)\n\n// Apply retrieval logic for ReferFromKnowledge tools\ndef applyRetrievalLogic = { parentNode ->\n    if (!parentNode.children) return\n    parentNode.children = sortByStartTime(parentNode.children)\n\n    // Collect potential retrieval sub-steps across all parents\n    def rbacNodes = parents.collectMany { p -> p.children }.findAll { it.type == 'RBAC Permissions' }\n    def embedNodes = parents.collectMany { p -> p.children }.findAll { it.type == 'Fetch Embeddings' }\n    def semanticSearchNodes = parents.collectMany { p -> p.children }.findAll { it.type == 'Semantic Search' }\n    def rerankerNodes = parents.collectMany { p -> p.children }.findAll { it.type == 'Reranker' }\n\n    def sortNodes = { list ->\n        list.sort { a, b ->\n            def diff = getStartTime(a) <=> getStartTime(b)\n            return diff != 0 ? diff : (a.id <=> b.id)\n        }\n    }\n\n    rbacNodes = sortNodes(rbacNodes)\n    embedNodes = sortNodes(embedNodes)\n    semanticSearchNodes = sortNodes(semanticSearchNodes)\n    rerankerNodes = sortNodes(rerankerNodes)\n\n    def referFromKnowledgeTools = parentNode.children.findAll { it.toolName == 'ReferFromKnowledge' }\n    referFromKnowledgeTools = sortNodes(referFromKnowledgeTools)\n\n    // Gather all existing Retrieval nodes emitted under separate 'ReferFromKnowledge' parents\n    def referParents = parents.findAll { it.type == 'ReferFromKnowledge' && it.children }\n    def availableRetrievalNodes = []\n    referParents.each { p ->\n        p.children.findAll { it.type == 'Retrieval' }.each { rNode ->\n            availableRetrievalNodes << [parent: p, node: rNode]\n        }\n    }\n    availableRetrievalNodes = availableRetrievalNodes.sort { a, b -> getStartTime(a.node) <=> getStartTime(b.node) }\n\n    // Helper to pick and remove items within a time window\n    def popWithinWindow = { list, windowStart, windowEnd ->\n        def picked = list.findAll { it.startTime != null && it.startTime >= (windowStart ?: 0L) && it.startTime <= (windowEnd ?: Long.MAX_VALUE) }\n        if (!picked) return []\n        list.removeAll { it in picked }\n        return picked\n    }\n\n    // Pair each ReferFromKnowledge tool with its own Retrieval node and windowed sub-steps\n    for (int i = 0; i < referFromKnowledgeTools.size(); i++) {\n        def tool = referFromKnowledgeTools[i]\n        if (!tool.children) tool.children = []\n\n        def windowStart = getStartTime(tool)\n        def windowEnd = (i + 1 < referFromKnowledgeTools.size()) ? (getStartTime(referFromKnowledgeTools[i + 1]) ?: Long.MAX_VALUE) : Long.MAX_VALUE\n\n        // Choose the closest existing Retrieval node in the window; if none in window, pick the nearest by absolute time\n        def inWindow = availableRetrievalNodes.findAll { getStartTime(it.node) >= (windowStart ?: 0L) && getStartTime(it.node) <= (windowEnd ?: Long.MAX_VALUE) }\n        def chosen = null\n        if (inWindow) {\n            chosen = inWindow.min { Math.abs(getStartTime(it.node) - (windowStart ?: 0L)) }\n        } else if (availableRetrievalNodes) {\n            chosen = availableRetrievalNodes.min { Math.abs(getStartTime(it.node) - (windowStart ?: 0L)) }\n        }\n\n        def retrievalNodeRef = chosen?.node ? chosen.node : null\n        def retrievalChildren = []\n\n        // Pull sub-steps that fall within this tool's time window\n        retrievalChildren.addAll(popWithinWindow(rbacNodes, windowStart, windowEnd))\n        retrievalChildren.addAll(popWithinWindow(embedNodes, windowStart, windowEnd))\n        retrievalChildren.addAll(popWithinWindow(semanticSearchNodes, windowStart, windowEnd))\n        retrievalChildren.addAll(popWithinWindow(rerankerNodes, windowStart, windowEnd))\n\n        // Track moved ids\n        retrievalChildren.each { movedNodeIds << it.id }\n\n        if (retrievalNodeRef == null && !retrievalChildren.isEmpty()) {\n            retrievalChildren = sortByStartTime(retrievalChildren)\n            // Create a Retrieval container without deriving timing; timing should come only from spans\n            retrievalNodeRef = [\n                type: 'Retrieval',\n                id: 'Retrieval',\n                children: []\n            ]\n        }\n\n        if (retrievalNodeRef != null || !retrievalChildren.isEmpty()) {\n            if (retrievalNodeRef == null) {\n                retrievalNodeRef = [type: 'Retrieval', id: 'Retrieval', children: []]\n            }\n            if (!retrievalNodeRef.children) retrievalNodeRef.children = []\n            retrievalNodeRef.children.addAll(retrievalChildren)\n\n            // Preserve timing and info from the original Retrieval span; do not recompute from children\n\n            // Attach retrieval node to this tool only\n            if (!tool.children.any { it.type == 'Retrieval' }) {\n                tool.children << retrievalNodeRef\n            }\n\n            // Remove chosen retrieval from original parent to avoid duplication\n            if (chosen) {\n                chosen.parent.children.removeAll { it.id == chosen.node.id }\n                movedNodeIds << chosen.node.id\n                if (!chosen.parent.children || chosen.parent.children.isEmpty()) {\n                    parents.removeAll { it.is(chosen.parent) }\n                }\n                availableRetrievalNodes.remove(chosen)\n            }\n        }\n    }\n\n    parentNode.children = sortByStartTime(parentNode.children)\n    if (parentNode.children) {\n        def firstStart = parentNode.children.first().startTime\n        def lastEnd = parentNode.children.collect { it.endTime ?: 0L }.max()\n        parentNode.startTime = firstStart ?: 0L\n        parentNode.endTime = lastEnd ?: 0L\n        parentNode.timeTaken = (lastEnd && firstStart) ? (lastEnd - firstStart) : 0\n    } else {\n        parentNode.startTime = 0L\n        parentNode.endTime = 0L\n        parentNode.timeTaken = 0\n    }\n    return movedNodeIds \n}\n\ndef agentExecution = parents.find { it.type == 'Agent Execution' }\nif (agentExecution) {\n    movedNodeIds = applyRetrievalLogic(agentExecution)\n\n    // Remove moved nodes from their original locations\n    movedNodeIds.each { nodeId ->\n        removeNodeFromParents(nodeId, parents)\n    }\n}\n\n// Move all Response Guardrail spans under Agent Execution as a single child\ndef guardrailParents = parents.findAll { it.type == 'Response Guardrail' && it.children && !it.children.isEmpty() }\nif (guardrailParents && !guardrailParents.isEmpty()) {\n    def allChildren = sortByStartTime(guardrailParents.collectMany { it.children ?: [] })\n\n    def startTime = allChildren.collect { it.startTime ?: 0L }.min() ?: 0L\n    def endTime = allChildren.collect { it.endTime ?: 0L }.max() ?: 0L\n    def timeTaken = endTime > startTime ? endTime - startTime : 0L\n\n    def combinedGuardrail = [\n        type: 'Response Guardrails',\n        id: 'Response Guardrails',\n        children: allChildren,\n        timeTaken: timeTaken,\n        startTime: startTime,\n        endTime: endTime\n    ]\n\n    if (!agentExecution) {\n        agentExecution = parents.find { it.type == 'Agent Execution' }\n    }\n    if (!agentExecution) {\n        agentExecution = [type: 'Agent Execution', id: 'Agent Execution', children: []]\n        parents.add(agentExecution)\n    }\n    if (!agentExecution.children) agentExecution.children = []\n    agentExecution.children << combinedGuardrail\n\n    // Remove original top-level Response Guardrail parents\n    parents.removeAll { it.type == 'Response Guardrail' }\n}\n\n// Consolidate all Input Guardrails spans into a single top-level parent\ndef inputGuardrailsParents = parents.findAll { it.type == 'Input Guardrails' && it.children && !it.children.isEmpty() }\nif (inputGuardrailsParents && !inputGuardrailsParents.isEmpty()) {\n    def allInputChildren = sortByStartTime(inputGuardrailsParents.collectMany { it.children ?: [] })\n\n    def inputStartTime = allInputChildren.collect { it.startTime ?: 0L }.min() ?: 0L\n    def inputEndTime = allInputChildren.collect { it.endTime ?: 0L }.max() ?: 0L\n    def inputTimeTaken = inputEndTime > inputStartTime ? inputEndTime - inputStartTime : 0L\n\n    def combinedInputGuardrails = [\n        type: 'Input Guardrails',\n        id: 'Input Guardrails',\n        children: allInputChildren,\n        timeTaken: inputTimeTaken,\n        startTime: inputStartTime,\n        endTime: inputEndTime\n    ]\n\n    // Replace any existing Input Guardrails parents with the combined one\n    parents.removeAll { it.type == 'Input Guardrails' }\n    parents.add(combinedInputGuardrails)\n}\n\n// Calculate Agent Execution Parent - Timeline\ndef agentExecutionFinal = parents.find { it.type == 'Agent Execution' }\nif (agentExecutionFinal) {\n    if (agentExecutionFinal.children) {\n        agentExecutionFinal.children = sortByStartTime(agentExecutionFinal.children)\n        def firstStart = agentExecutionFinal.children.first().startTime\n        def lastEnd = agentExecutionFinal.children.collect { it.endTime ?: 0L }.max()\n        agentExecutionFinal.startTime = firstStart ?: 0L\n        agentExecutionFinal.endTime = lastEnd ?: 0L\n        agentExecutionFinal.timeTaken = (lastEnd && firstStart) ? (lastEnd - firstStart) : 0\n    } else {\n        agentExecutionFinal.startTime = 0L\n        agentExecutionFinal.endTime = 0L\n        agentExecutionFinal.timeTaken = 0\n    }\n}\n\nparents = sortByStartTime(parents)\nquery.children = parents\n\ndef totalQueryTime = timeTaken ?: 0L\nquery.timeTaken = totalQueryTime\n\nquery.info.findAll { it.type == 'latency' }.each { it.value = totalQueryTime }\n\ndef countedTime = query.children.collect { it.timeTaken ?: 0L }.sum() ?: 0L\n\ndef miscTime = Math.max(0L, totalQueryTime - countedTime)\nif (miscTime > 0) {\n    def uncountedPart = [\n        type: 'Miscellaneous',\n        id: 'miscellaneous',\n        timeTaken: miscTime\n    ]\n    query.children.add(uncountedPart)\n}\n\nreturn ['timeline': query, 'countedPart': countedTime]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"messageId":"{{ 4Duue.outputs.traceId }}",
					"fanMessageContent":"{{ QVN2V.outputs.fanMessage }}",
					"timeTaken":"{{ QVN2V.outputs.latency }}",
					"totalCost":"{{ n_bDi5Z.outputs.costs[0].columns.totalCost }}",
					"fanMessageCreatedTime":"{{ QVN2V.outputs.fanMessageCreatedTime }}",
					"totalInputTokens":"{{ n_bDi5Z.outputs.costs[0].columns.inputTokens }}",
					"totalOutputTokens":"{{ n_bDi5Z.outputs.costs[0].columns.outputTokens }}",
					"spans":{
						"source":"{{ VWU23.outputs.items }}",
						"ua:type":"mappedArray",
						"items":{
							"input":"{{ VWU23.outputs.items[0].input }}",
							"messageId":"{{ VWU23.outputs.items[0].messageId }}",
							"output":"{{ VWU23.outputs.items[0].output }}",
							"parent":"{{ VWU23.outputs.items[0].parent }}",
							"step":"{{ VWU23.outputs.items[0].step }}",
							"timeTaken":"{{ VWU23.outputs.items[0].timeTaken }}",
							"startTime":"{{ VWU23.outputs.items[0].startTime }}",
							"id":"{{ VWU23.outputs.items[0].id }}",
							"toolName":"{{ VWU23.outputs.items[0].toolName }}",
							"success":"{{ VWU23.outputs.items[0].success }}",
							"endTime":"{{ VWU23.outputs.items[0].endTime }}",
							"modelId":"{{ VWU23.outputs.items[0].modelId }}",
							"inputTokens":"{{ VWU23.outputs.items[0].inputTokens }}",
							"outputTokens":"{{ VWU23.outputs.items[0].outputTokens }}",
							"cost":"{{ VWU23.outputs.items[0].cost }}",
							"automationId":"{{ VWU23.outputs.items[0].automationId }}",
							"executionInstanceId":"{{ VWU23.outputs.items[0].executionInstanceId }}"
						}
					},
					"brandMessages":{
						"source":"{{ QVN2V.outputs.brandMessages }}",
						"ua:type":"mappedArray",
						"items":"{{ QVN2V.outputs.brandMessages[0].content }}"
					},
					"modelDetails":{
						"source":"{{ n_hcRDb.outputs.objects }}",
						"ua:type":"mappedArray",
						"items":{
							"modelId":"{{ n_hcRDb.outputs.objects[0].id }}",
							"modelName":"{{ n_hcRDb.outputs.objects[0].properties.name }}",
							"iconUrl":"{{ n_hcRDb.outputs.objects[0].properties.iconUrl }}"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Code",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":302,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2bylS-1",
			"id":"P6jPO",
			"index":38,
			"inputs":{
				"result":{
					"timeline":"{{ 3bQHm.outputs.result.timeline }}",
					"title":"{{ 1pM9o.outputs.objects[0].properties.content.text }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":122
}