{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1760199513839,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760200700891,
		"deployedBy":33452,
		"deployedDefinitionId":"68ea87fabdec112aba2a8027",
		"status":"DEPLOYED",
		"version":2,
		"workflowVersion":106
	},
	"edges":[
		{
			"fromNodeId":"n_kHI9n",
			"priority":0,
			"skip":false,
			"toNodeId":"n_6dp1b",
			"type":"next"
		},
		{
			"fromNodeId":"n_6dp1b",
			"priority":0,
			"skip":false,
			"toNodeId":"n_hWXvf",
			"type":"next"
		},
		{
			"fromNodeId":"n_hWXvf",
			"priority":0,
			"skip":false,
			"toNodeId":"n_DxSHe",
			"type":"next"
		},
		{
			"fromNodeId":"n_DxSHe",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qaAVc",
			"type":"next"
		},
		{
			"fromNodeId":"n_qaAVc",
			"priority":0,
			"skip":false,
			"toNodeId":"n_v7rrM",
			"type":"next"
		},
		{
			"fromNodeId":"n_v7rrM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_9nTAx",
			"type":"next"
		},
		{
			"fromNodeId":"n_9nTAx",
			"priority":0,
			"skip":false,
			"toNodeId":"_x8wxv",
			"type":"next"
		},
		{
			"fromNodeId":"_x8wxv",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ohdTj",
			"type":"next"
		},
		{
			"fromNodeId":"n_ohdTj",
			"priority":0,
			"skip":false,
			"toNodeId":"n_1Kbx1",
			"type":"loop"
		},
		{
			"fromNodeId":"n_1Kbx1",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_dBJIN",
			"type":"if"
		},
		{
			"fromNodeId":"n_dBJIN",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WeyCI",
			"type":"next"
		},
		{
			"fromNodeId":"n_1Kbx1",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_WeyCI",
			"type":"next"
		},
		{
			"fromNodeId":"n_WeyCI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_KAaqe",
			"type":"next"
		},
		{
			"fromNodeId":"n_KAaqe",
			"priority":0,
			"skip":false,
			"toNodeId":"n_fbxzq",
			"type":"next"
		},
		{
			"fromNodeId":"n_fbxzq",
			"priority":0,
			"skip":false,
			"toNodeId":"n_I3NN8",
			"type":"next"
		},
		{
			"fromNodeId":"n_I3NN8",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ohdTj",
			"type":"next"
		},
		{
			"fromNodeId":"n_ohdTj",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Suxpk",
			"type":"next"
		},
		{
			"fromNodeId":"n_Suxpk",
			"priority":0,
			"skip":false,
			"toNodeId":"n_TtAO3",
			"type":"next"
		},
		{
			"fromNodeId":"n_TtAO3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_EbMVA",
			"type":"loop"
		},
		{
			"fromNodeId":"n_EbMVA",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_TtAO3",
			"type":"next"
		},
		{
			"fromNodeId":"n_TtAO3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_FQjdD",
			"type":"next"
		},
		{
			"fromNodeId":"n_FQjdD",
			"priority":0,
			"skip":false,
			"toNodeId":"n_GQ33D",
			"type":"next"
		},
		{
			"fromNodeId":"n_GQ33D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OIb2b",
			"type":"next"
		},
		{
			"fromNodeId":"n_OIb2b",
			"priority":0,
			"skip":false,
			"toNodeId":"n_feHLL",
			"type":"next"
		},
		{
			"fromNodeId":"n_feHLL",
			"priority":0,
			"skip":false,
			"toNodeId":"n_5udsR",
			"type":"next"
		},
		{
			"fromNodeId":"n_5udsR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_nMokn",
			"type":"next"
		},
		{
			"fromNodeId":"n_nMokn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_AoUWZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_AoUWZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_JgWjo",
			"type":"next"
		},
		{
			"fromNodeId":"n_JgWjo",
			"priority":0,
			"skip":false,
			"toNodeId":"n_KRzxK",
			"type":"next"
		},
		{
			"fromNodeId":"n_KRzxK",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8YozE",
			"type":"next"
		}
	],
	"id":"68e3d82b00a4467b3a277337",
	"lastModifiedBy":33452,
	"lcName":"lowes excel file processor (agent_formulaes) ",
	"modifiedTime":1760200709687,
	"name":"Lowes Excel File Processor (Agent_Formulaes) ",
	"nodes":[
		{
			"context":{
				"appName":"webhooks",
				"resourceVersion":833,
				"resourceName":"webhooks_default"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_kHI9n",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json"
				}
			},
			"skip":false,
			"subTitle":"Webhook",
			"title":"New event",
			"trigger":{
				"type":"WEBHOOK"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4549,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_6dp1b",
			"index":2,
			"inputs":{
				"object_type":"lowes_file_url",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"sortBy":[
					{
						"field":"cTm",
						"order":"DESC"
					}
				],
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":144,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_hWXvf",
			"index":3,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"epoch":{
							"type":"number",
							"title":"Epoch"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"epoch":"=INT((NOW() - DATE(1970,1,1)) * 86400000)"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"epoch":{
							"type":"number",
							"title":"Epoch"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":101,
				"resourceName":"excel_by_unifyapps_extract_headers",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_DxSHe",
			"index":4,
			"inputs":{
				"fileDetails":"{{ n_6dp1b.outputs.properties.invoiceCopyPDF }}",
				"fileType":"XLSX"
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Extract headers from Excel file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":173,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_qaAVc",
			"index":5,
			"inputs":{
				"automationId":"66dfd76eb70dad256986b784",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"modelId":"us.anthropic.claude-sonnet-4-20250514-v1:0",
					"content":"You are a precise Excel formula generator. Process ONE retail row containing Sales & COGS data for fiscal weeks 29-31 across years 2023-2025, plus 2025 Plan data. Return ONLY the 31 NEW calculated formula columns as JSON.\nInput Data Structure\nThe Excel headers will be provided:{{ n_DxSHe.outputs.headers }}\nYou must DYNAMICALLY determine which Excel column (A, B, C, etc.) corresponds to each field by examining the headers array.\nExpected Column Layout:\n- A-H: Metadata (Region, Region Name, Merch Division, Merch Sub Division, Product Group #, Product Group Name, Assortment #, Assortment Name)\n- I-Q: Actual Sales $ (9 columns for 2023/2024/2025 × FW29/FW30/FW31)\n- R-T: 2025 Plan Sales $ (FW29/FW30/FW31)\n- U-AC: Actual COGS $ (9 columns for 2023/2024/2025 × FW29/FW30/FW31)\n- AD-AF: 2025 Plan COGS $ (FW29/FW30/FW31)\nYour Task:\n1. Parse the headers array to identify which column letter corresponds to each field (e.g., fw29Sales2023, fw29Cogs2023, etc.)\n2. Generate Excel formulas using the ACTUAL column letters from the headers\n3. Assume data is in row 2\n4. CRITICAL: ALL cell references MUST be wrapped in VALUE() function to ensure numeric comparison and calculation\nCRITICAL BUSINESS RULES FOR PERCENTAGE CALCULATIONS:\n==========================================\n⚠️ SALES CAN BE NEGATIVE (returns, refunds, credits) - this is NORMAL in retail accounting\n⚠️ Percentages should ONLY be calculated when sales is STRICTLY POSITIVE (> 0)\n⚠️ The condition MUST be: VALUE(Sales) > 0 (meaning Sales is greater than zero)\n⚠️ ALL cell references must use VALUE() to force numeric conversion\n⚠️ This means:\n   - If Sales = -100 → BLANK (negative, do not calculate)\n   - If Sales = 0 → BLANK (zero, do not calculate)\n   - If Sales = 100 → Calculate percentage (positive, proceed)\nNEGATIVE SALES EXAMPLE:\n- Sales = ($294.91) which equals -294.91 (negative value in accounting notation)\n- COGS = ($193.26) which equals -193.26\n- GM$ = -294.91 - (-193.26) = -101.65 ← Dollar calculation is OK\n- GM% = BLANK ← Do NOT calculate because Sales is NOT > 0\n- The formula MUST return empty string, not calculate -101.65 / -294.91\nFormulas Required (31 New Columns)\n1. Gross Margin for Actuals (18 columns)\nFor each year (2023, 2024, 2025) and each week (FW29, FW30, FW31):\n**Dollar Formulas (Sales - COGS) - USE VALUE() FOR ALL CELLS:**\n- fw29GrossMargin2023Dollar: =VALUE({fw29Sales2023_column}2)-VALUE({fw29Cogs2023_column}2)\n- fw30GrossMargin2023Dollar: =VALUE({fw30Sales2023_column}2)-VALUE({fw30Cogs2023_column}2)\n- fw31GrossMargin2023Dollar: =VALUE({fw31Sales2023_column}2)-VALUE({fw31Cogs2023_column}2)\n- fw29GrossMargin2024Dollar: =VALUE({fw29Sales2024_column}2)-VALUE({fw29Cogs2024_column}2)\n- fw30GrossMargin2024Dollar: =VALUE({fw30Sales2024_column}2)-VALUE({fw30Cogs2024_column}2)\n- fw31GrossMargin2024Dollar: =VALUE({fw31Sales2024_column}2)-VALUE({fw31Cogs2024_column}2)\n- fw29GrossMargin2025Dollar: =VALUE({fw29Sales2025_column}2)-VALUE({fw29Cogs2025_column}2)\n- fw30GrossMargin2025Dollar: =VALUE({fw30Sales2025_column}2)-VALUE({fw30Cogs2025_column}2)\n- fw31GrossMargin2025Dollar: =VALUE({fw31Sales2025_column}2)-VALUE({fw31Cogs2025_column}2)\n**Percent Formulas (GM$ / Sales$) - MUST CHECK VALUE(SALES) > 0:**\nCRITICAL: Each formula MUST use the pattern: =IFERROR(IF(VALUE({Sales_column}2)>0,(VALUE({Sales_column}2)-VALUE({COGS_column}2))/VALUE({Sales_column}2),\"\"),\"\")\nThe inner IF checks: VALUE(Sales) > 0 (strictly greater than zero, meaning positive values only)\n- fw29GrossMargin2023Percent: =IFERROR(IF(VALUE({fw29Sales2023_column}2)>0,(VALUE({fw29Sales2023_column}2)-VALUE({fw29Cogs2023_column}2))/VALUE({fw29Sales2023_column}2),\"\"),\"\")\n- fw30GrossMargin2023Percent: =IFERROR(IF(VALUE({fw30Sales2023_column}2)>0,(VALUE({fw30Sales2023_column}2)-VALUE({fw30Cogs2023_column}2))/VALUE({fw30Sales2023_column}2),\"\"),\"\")\n- fw31GrossMargin2023Percent: =IFERROR(IF(VALUE({fw31Sales2023_column}2)>0,(VALUE({fw31Sales2023_column}2)-VALUE({fw31Cogs2023_column}2))/VALUE({fw31Sales2023_column}2),\"\"),\"\")\n- fw29GrossMargin2024Percent: =IFERROR(IF(VALUE({fw29Sales2024_column}2)>0,(VALUE({fw29Sales2024_column}2)-VALUE({fw29Cogs2024_column}2))/VALUE({fw29Sales2024_column}2),\"\"),\"\")\n- fw30GrossMargin2024Percent: =IFERROR(IF(VALUE({fw30Sales2024_column}2)>0,(VALUE({fw30Sales2024_column}2)-VALUE({fw30Cogs2024_column}2))/VALUE({fw30Sales2024_column}2),\"\"),\"\")\n- fw31GrossMargin2024Percent: =IFERROR(IF(VALUE({fw31Sales2024_column}2)>0,(VALUE({fw31Sales2024_column}2)-VALUE({fw31Cogs2024_column}2))/VALUE({fw31Sales2024_column}2),\"\"),\"\")\n- fw29GrossMargin2025Percent: =IFERROR(IF(VALUE({fw29Sales2025_column}2)>0,(VALUE({fw29Sales2025_column}2)-VALUE({fw29Cogs2025_column}2))/VALUE({fw29Sales2025_column}2),\"\"),\"\")\n- fw30GrossMargin2025Percent: =IFERROR(IF(VALUE({fw30Sales2025_column}2)>0,(VALUE({fw30Sales2025_column}2)-VALUE({fw30Cogs2025_column}2))/VALUE({fw30Sales2025_column}2),\"\"),\"\")\n- fw31GrossMargin2025Percent: =IFERROR(IF(VALUE({fw31Sales2025_column}2)>0,(VALUE({fw31Sales2025_column}2)-VALUE({fw31Cogs2025_column}2))/VALUE({fw31Sales2025_column}2),\"\"),\"\")\n2. Gross Margin for 2025 Plan (6 columns)\n**Dollar Formulas - USE VALUE() FOR ALL CELLS:**\n- fw29PlanGrossMargin2025Dollar: =VALUE({fw29PlanSales2025_column}2)-VALUE({fw29PlanCogs2025_column}2)\n- fw30PlanGrossMargin2025Dollar: =VALUE({fw30PlanSales2025_column}2)-VALUE({fw30PlanCogs2025_column}2)\n- fw31PlanGrossMargin2025Dollar: =VALUE({fw31PlanSales2025_column}2)-VALUE({fw31PlanCogs2025_column}2)\n**Percent Formulas - MUST CHECK VALUE(PLAN SALES) > 0:**\n- fw29PlanGrossMargin2025Percent: =IFERROR(IF(VALUE({fw29PlanSales2025_column}2)>0,(VALUE({fw29PlanSales2025_column}2)-VALUE({fw29PlanCogs2025_column}2))/VALUE({fw29PlanSales2025_column}2),\"\"),\"\")\n- fw30PlanGrossMargin2025Percent: =IFERROR(IF(VALUE({fw30PlanSales2025_column}2)>0,(VALUE({fw30PlanSales2025_column}2)-VALUE({fw30PlanCogs2025_column}2))/VALUE({fw30PlanSales2025_column}2),\"\"),\"\")\n- fw31PlanGrossMargin2025Percent: =IFERROR(IF(VALUE({fw31PlanSales2025_column}2)>0,(VALUE({fw31PlanSales2025_column}2)-VALUE({fw31PlanCogs2025_column}2))/VALUE({fw31PlanSales2025_column}2),\"\"),\"\")\n3. GM Delta vs Last Year in Basis Points (3 columns)\nCRITICAL: Calculate (2025 GM% - 2024 GM%) × 10000 ONLY when BOTH years have positive sales\nThe condition MUST be: AND(VALUE(Sales2025) > 0, VALUE(Sales2024) > 0)\nIf EITHER year has negative or zero sales, return BLANK\n- fw29GmDeltaVsLyBps: =IFERROR(IF(AND(VALUE({fw29Sales2025_column}2)>0,VALUE({fw29Sales2024_column}2)>0),((VALUE({fw29Sales2025_column}2)-VALUE({fw29Cogs2025_column}2))/VALUE({fw29Sales2025_column}2)-(VALUE({fw29Sales2024_column}2)-VALUE({fw29Cogs2024_column}2))/VALUE({fw29Sales2024_column}2))*10000,\"\"),\"\")\n- fw30GmDeltaVsLyBps: =IFERROR(IF(AND(VALUE({fw30Sales2025_column}2)>0,VALUE({fw30Sales2024_column}2)>0),((VALUE({fw30Sales2025_column}2)-VALUE({fw30Cogs2025_column}2))/VALUE({fw30Sales2025_column}2)-(VALUE({fw30Sales2024_column}2)-VALUE({fw30Cogs2024_column}2))/VALUE({fw30Sales2024_column}2))*10000,\"\"),\"\")\n- fw31GmDeltaVsLyBps: =IFERROR(IF(AND(VALUE({fw31Sales2025_column}2)>0,VALUE({fw31Sales2024_column}2)>0),((VALUE({fw31Sales2025_column}2)-VALUE({fw31Cogs2025_column}2))/VALUE({fw31Sales2025_column}2)-(VALUE({fw31Sales2024_column}2)-VALUE({fw31Cogs2024_column}2))/VALUE({fw31Sales2024_column}2))*10000,\"\"),\"\")\n4. Summary Helper Columns (4 columns)\nThese formulas use 3-week totals - ALL CELLS WRAPPED IN VALUE():\n**Vs Plan Dollar - USE VALUE() FOR ALL CELLS:**\n- vsPlan2025Dollar: =(VALUE({fw29Sales2025_column}2)+VALUE({fw30Sales2025_column}2)+VALUE({fw31Sales2025_column}2))-(VALUE({fw29PlanSales2025_column}2)+VALUE({fw30PlanSales2025_column}2)+VALUE({fw31PlanSales2025_column}2))\n**Vs Plan Percent - MUST CHECK TOTAL PLAN > 0:**\n- vsPlan2025Percent: =IFERROR(IF((VALUE({fw29PlanSales2025_column}2)+VALUE({fw30PlanSales2025_column}2)+VALUE({fw31PlanSales2025_column}2))>0,((VALUE({fw29Sales2025_column}2)+VALUE({fw30Sales2025_column}2)+VALUE({fw31Sales2025_column}2))-(VALUE({fw29PlanSales2025_column}2)+VALUE({fw30PlanSales2025_column}2)+VALUE({fw31PlanSales2025_column}2)))/(VALUE({fw29PlanSales2025_column}2)+VALUE({fw30PlanSales2025_column}2)+VALUE({fw31PlanSales2025_column}2)),\"\"),\"\")\n**Comp Percent (Vs LY) - MUST CHECK TOTAL 2024 > 0:**\n- comp2025Vs2024Percent: =IFERROR(IF((VALUE({fw29Sales2024_column}2)+VALUE({fw30Sales2024_column}2)+VALUE({fw31Sales2024_column}2))>0,((VALUE({fw29Sales2025_column}2)+VALUE({fw30Sales2025_column}2)+VALUE({fw31Sales2025_column}2))/(VALUE({fw29Sales2024_column}2)+VALUE({fw30Sales2024_column}2)+VALUE({fw31Sales2024_column}2)))-1,\"\"),\"\")\n**2YR Comp Percent (Vs 2LY) - MUST CHECK TOTAL 2023 > 0:**\n- comp2YR2025Vs2023Percent: =IFERROR(IF((VALUE({fw29Sales2023_column}2)+VALUE({fw30Sales2023_column}2)+VALUE({fw31Sales2023_column}2))>0,((VALUE({fw29Sales2025_column}2)+VALUE({fw30Sales2025_column}2)+VALUE({fw31Sales2025_column}2))/(VALUE({fw29Sales2023_column}2)+VALUE({fw30Sales2023_column}2)+VALUE({fw31Sales2023_column}2)))-1,\"\"),\"\")\nOutput Format\nReturn JSON with ONLY the 31 calculated formula columns. All formulas should:\n- Be returned as strings starting with \"=\"\n- Use the ACTUAL column letters determined from the headers array\n- WRAP ALL CELL REFERENCES IN VALUE() FUNCTION\n- Use IFERROR wrapper with IF statements for all percentage/ratio calculations\n- The IF condition must check that VALUE(denominator) > 0 (strictly greater than zero)\n- Return empty string \"\" for invalid cases\n- Reference row 2 for all cell references\nExample Output Structure (with actual column letters substituted):\n{\n\"fw29GrossMargin2023Dollar\": \"=VALUE(I2)-VALUE(U2)\",\n\"fw30GrossMargin2023Dollar\": \"=VALUE(J2)-VALUE(V2)\",\n\"fw31GrossMargin2023Dollar\": \"=VALUE(K2)-VALUE(W2)\",\n\"fw29GrossMargin2024Dollar\": \"=VALUE(L2)-VALUE(X2)\",\n\"fw30GrossMargin2024Dollar\": \"=VALUE(M2)-VALUE(Y2)\",\n\"fw31GrossMargin2024Dollar\": \"=VALUE(N2)-VALUE(Z2)\",\n\"fw29GrossMargin2025Dollar\": \"=VALUE(O2)-VALUE(AA2)\",\n\"fw30GrossMargin2025Dollar\": \"=VALUE(P2)-VALUE(AB2)\",\n\"fw31GrossMargin2025Dollar\": \"=VALUE(Q2)-VALUE(AC2)\",\n\"fw29GrossMargin2023Percent\": \"=IFERROR(IF(VALUE(I2)>0,(VALUE(I2)-VALUE(U2))/VALUE(I2),\\\"\\\"),\\\"\\\")\",\n\"fw30GrossMargin2023Percent\": \"=IFERROR(IF(VALUE(J2)>0,(VALUE(J2)-VALUE(V2))/VALUE(J2),\\\"\\\"),\\\"\\\")\",\n\"fw31GrossMargin2023Percent\": \"=IFERROR(IF(VALUE(K2)>0,(VALUE(K2)-VALUE(W2))/VALUE(K2),\\\"\\\"),\\\"\\\")\",\n\"fw29GrossMargin2024Percent\": \"=IFERROR(IF(VALUE(L2)>0,(VALUE(L2)-VALUE(X2))/VALUE(L2),\\\"\\\"),\\\"\\\")\",\n\"fw30GrossMargin2024Percent\": \"=IFERROR(IF(VALUE(M2)>0,(VALUE(M2)-VALUE(Y2))/VALUE(M2),\\\"\\\"),\\\"\\\")\",\n\"fw31GrossMargin2024Percent\": \"=IFERROR(IF(VALUE(N2)>0,(VALUE(N2)-VALUE(Z2))/VALUE(N2),\\\"\\\"),\\\"\\\")\",\n\"fw29GrossMargin2025Percent\": \"=IFERROR(IF(VALUE(O2)>0,(VALUE(O2)-VALUE(AA2))/VALUE(O2),\\\"\\\"),\\\"\\\")\",\n\"fw30GrossMargin2025Percent\": \"=IFERROR(IF(VALUE(P2)>0,(VALUE(P2)-VALUE(AB2))/VALUE(P2),\\\"\\\"),\\\"\\\")\",\n\"fw31GrossMargin2025Percent\": \"=IFERROR(IF(VALUE(Q2)>0,(VALUE(Q2)-VALUE(AC2))/VALUE(Q2),\\\"\\\"),\\\"\\\")\",\n\"fw29PlanGrossMargin2025Dollar\": \"=VALUE(R2)-VALUE(AD2)\",\n\"fw30PlanGrossMargin2025Dollar\": \"=VALUE(S2)-VALUE(AE2)\",\n\"fw31PlanGrossMargin2025Dollar\": \"=VALUE(T2)-VALUE(AF2)\",\n\"fw29PlanGrossMargin2025Percent\": \"=IFERROR(IF(VALUE(R2)>0,(VALUE(R2)-VALUE(AD2))/VALUE(R2),\\\"\\\"),\\\"\\\")\",\n\"fw30PlanGrossMargin2025Percent\": \"=IFERROR(IF(VALUE(S2)>0,(VALUE(S2)-VALUE(AE2))/VALUE(S2),\\\"\\\"),\\\"\\\")\",\n\"fw31PlanGrossMargin2025Percent\": \"=IFERROR(IF(VALUE(T2)>0,(VALUE(T2)-VALUE(AF2))/VALUE(T2),\\\"\\\"),\\\"\\\")\",\n\"fw29GmDeltaVsLyBps\": \"=IFERROR(IF(AND(VALUE(O2)>0,VALUE(L2)>0),((VALUE(O2)-VALUE(AA2))/VALUE(O2)-(VALUE(L2)-VALUE(X2))/VALUE(L2))*10000,\\\"\\\"),\\\"\\\")\",\n\"fw30GmDeltaVsLyBps\": \"=IFERROR(IF(AND(VALUE(P2)>0,VALUE(M2)>0),((VALUE(P2)-VALUE(AB2))/VALUE(P2)-(VALUE(M2)-VALUE(Y2))/VALUE(M2))*10000,\\\"\\\"),\\\"\\\")\",\n\"fw31GmDeltaVsLyBps\": \"=IFERROR(IF(AND(VALUE(Q2)>0,VALUE(N2)>0),((VALUE(Q2)-VALUE(AC2))/VALUE(Q2)-(VALUE(N2)-VALUE(Z2))/VALUE(N2))*10000,\\\"\\\"),\\\"\\\")\",\n\"vsPlan2025Dollar\": \"=(VALUE(O2)+VALUE(P2)+VALUE(Q2))-(VALUE(R2)+VALUE(S2)+VALUE(T2))\",\n\"vsPlan2025Percent\": \"=IFERROR(IF((VALUE(R2)+VALUE(S2)+VALUE(T2))>0,((VALUE(O2)+VALUE(P2)+VALUE(Q2))-(VALUE(R2)+VALUE(S2)+VALUE(T2)))/(VALUE(R2)+VALUE(S2)+VALUE(T2)),\\\"\\\"),\\\"\\\")\",\n\"comp2025Vs2024Percent\": \"=IFERROR(IF((VALUE(L2)+VALUE(M2)+VALUE(N2))>0,((VALUE(O2)+VALUE(P2)+VALUE(Q2))/(VALUE(L2)+VALUE(M2)+VALUE(N2)))-1,\\\"\\\"),\\\"\\\")\",\n\"comp2YR2025Vs2023Percent\": \"=IFERROR(IF((VALUE(I2)+VALUE(J2)+VALUE(K2))>0,((VALUE(O2)+VALUE(P2)+VALUE(Q2))/(VALUE(I2)+VALUE(J2)+VALUE(K2)))-1,\\\"\\\")\\\"\"\n}\nImportant Notes - READ CAREFULLY:\nCRITICAL: Return ONLY the JSON output with the 31 calculated fields as Excel formulas, no additional text or explanation\nFirst, map each field name from the headers to its column letter (A, B, C, etc.)\nThen, use those column letters to construct all formulas\nALL fields must return Excel formula strings starting with \"=\"\nMANDATORY: ALL cell references MUST be wrapped in VALUE() function - this is CRITICAL to ensure numeric comparison\nMANDATORY: All percentage and ratio formulas MUST use the exact pattern: =IFERROR(IF(VALUE(denominator)>0, calculation, \"\"), \"\")\nThe VALUE() function converts text to numbers, ensuring >0 check works correctly\nThe >0 check means STRICTLY POSITIVE - it excludes both zero AND negative values\nAll formulas assume data is in row 2\nSTRICTLY ensure that you do not return any text other than the JSON, this would lead to the automation failing\nVERIFY ALL 31 FIELDS ARE PRESENT BEFORE RETURNING\nDouble-check that EVERY cell reference is wrapped in VALUE() and every percentage formula has the >0 condition check\nERROR HANDLING RULES:\n- All percentage/ratio formulas use: IFERROR(IF(VALUE(denominator)>0, calculation, \"\"), \"\")\n- Inner IF checks business logic (VALUE(denominator) > 0 means strictly positive)\n- Outer IFERROR catches any unexpected calculation errors\n- Return empty string \"\" for all error/null cases\n- This creates clean blank cells without warnings for business users\n- NEGATIVE VALUES: When sales is negative (e.g., -294.91), the VALUE(sales)>0 check returns FALSE, resulting in blank\n- ZERO VALUES: When sales is zero (e.g., 0), the VALUE(sales)>0 check returns FALSE, resulting in blank\n- POSITIVE VALUES: Only when sales is positive (e.g., 294.91) does calculation proceed\n- VALUE() function ensures text representations of numbers are properly converted for comparison",
					"type":"text",
					"response_format":"text"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"cacheKey":"{{ n_DxSHe.outputs.headers }}",
					"enabled":true,
					"timeToLive":"3600",
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_v7rrM",
			"index":6,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"fw29GrossMargin2023Dollar":{
							"type":"string",
							"title":"fw29GrossMargin2023Dollar"
						},
						"fw30GrossMargin2023Dollar":{
							"type":"string",
							"title":"fw30GrossMargin2023Dollar"
						},
						"fw31GrossMargin2023Dollar":{
							"type":"string",
							"title":"fw31GrossMargin2023Dollar"
						},
						"fw29GrossMargin2024Dollar":{
							"type":"string",
							"title":"fw29GrossMargin2024Dollar"
						},
						"fw30GrossMargin2024Dollar":{
							"type":"string",
							"title":"fw30GrossMargin2024Dollar"
						},
						"fw31GrossMargin2024Dollar":{
							"type":"string",
							"title":"fw31GrossMargin2024Dollar"
						},
						"fw29GrossMargin2025Dollar":{
							"type":"string",
							"title":"fw29GrossMargin2025Dollar"
						},
						"fw30GrossMargin2025Dollar":{
							"type":"string",
							"title":"fw30GrossMargin2025Dollar"
						},
						"fw31GrossMargin2025Dollar":{
							"type":"string",
							"title":"fw31GrossMargin2025Dollar"
						},
						"fw29GrossMargin2023Percent":{
							"type":"string",
							"title":"fw29GrossMargin2023Percent"
						},
						"fw30GrossMargin2023Percent":{
							"type":"string",
							"title":"fw30GrossMargin2023Percent"
						},
						"fw31GrossMargin2023Percent":{
							"type":"string",
							"title":"fw31GrossMargin2023Percent"
						},
						"fw29GrossMargin2024Percent":{
							"type":"string",
							"title":"fw29GrossMargin2024Percent"
						},
						"fw30GrossMargin2024Percent":{
							"type":"string",
							"title":"fw30GrossMargin2024Percent"
						},
						"fw31GrossMargin2024Percent":{
							"type":"string",
							"title":"fw31GrossMargin2024Percent"
						},
						"fw29GrossMargin2025Percent":{
							"type":"string",
							"title":"fw29GrossMargin2025Percent"
						},
						"fw30GrossMargin2025Percent":{
							"type":"string",
							"title":"fw30GrossMargin2025Percent"
						},
						"fw31GrossMargin2025Percent":{
							"type":"string",
							"title":"fw31GrossMargin2025Percent"
						},
						"fw29PlanGrossMargin2025Dollar":{
							"type":"string",
							"title":"fw29PlanGrossMargin2025Dollar"
						},
						"fw30PlanGrossMargin2025Dollar":{
							"type":"string",
							"title":"fw30PlanGrossMargin2025Dollar"
						},
						"fw31PlanGrossMargin2025Dollar":{
							"type":"string",
							"title":"fw31PlanGrossMargin2025Dollar"
						},
						"fw29PlanGrossMargin2025Percent":{
							"type":"string",
							"title":"fw29PlanGrossMargin2025Percent"
						},
						"fw30PlanGrossMargin2025Percent":{
							"type":"string",
							"title":"fw30PlanGrossMargin2025Percent"
						},
						"fw31PlanGrossMargin2025Percent":{
							"type":"string",
							"title":"fw31PlanGrossMargin2025Percent"
						},
						"fw29GmDeltaVsLyBps":{
							"type":"string",
							"title":"fw29GmDeltaVsLyBps"
						},
						"fw30GmDeltaVsLyBps":{
							"type":"string",
							"title":"fw30GmDeltaVsLyBps"
						},
						"fw31GmDeltaVsLyBps":{
							"type":"string",
							"title":"fw31GmDeltaVsLyBps"
						},
						"vsPlan2025Dollar":{
							"type":"string",
							"title":"vsPlan2025Dollar"
						},
						"vsPlan2025Percent":{
							"type":"string",
							"title":"vsPlan2025Percent"
						},
						"comp2025Vs2024Percent":{
							"type":"string",
							"title":"comp2025Vs2024Percent"
						},
						"comp2YR2025Vs2023Percent":{
							"type":"string",
							"title":"comp2YR2025Vs2023Percent"
						}
					}
				},
				"jsonString":"{{ n_qaAVc.outputs.llmResponse }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":156,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_9nTAx",
			"index":7,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"New rows",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"New rows",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":156,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"_x8wxv",
			"index":8,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"New columns",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"New columns",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":139,
				"resourceName":"excel_by_unifyapps_for_each_row_or_rows",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_ohdTj",
			"index":9,
			"inputs":{
				"startFromRow":1,
				"consumptionBehaviour":"string",
				"file":"{{ n_6dp1b.outputs.properties.invoiceCopyPDF }}",
				"headerRow":true,
				"columns":[],
				"batch":true,
				"evaluateFormulae":true,
				"batchSize":1000,
				"fileType":"xlsx",
				"skipEmptyRows":true
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Consume data from Excel file",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":107,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ohdTj@_t1UEx-1@l",
			"id":"n_1Kbx1",
			"index":10,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_ohdTj.outputs.index }}",
						"filter":{
							"operator":"GTE",
							"value":"6"
						}
					}
				],
				"operator":"AND"
			},
			"skip":true,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":107,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_1Kbx1@n_ohdTj@_t1UEx-1@l@y",
			"id":"n_dBJIN",
			"index":11,
			"inputs":{
				"loop":"n_ohdTj"
			},
			"skip":true,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":156,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ohdTj@_t1UEx-1@l",
			"id":"n_WeyCI",
			"index":12,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"new_rows",
						"new_headers"
					],
					"properties":{
						"new_rows":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"New Rows"
						},
						"new_headers":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"New Headers"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"existing_rows",
						"batch_number",
						"new_columns",
						"headers"
					],
					"properties":{
						"existing_rows":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Existing Rows"
						},
						"batch_number":{
							"type":"string",
							"title":"Batch Number"
						},
						"new_columns":{
							"type":"string",
							"title":"New Columns"
						},
						"headers":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Headers"
						}
					}
				},
				"code":"import com.unifyapps.workflow.rt.utils.SftpUtils\n\ndef new_headers = headers + new_columns.keySet().toList();\ndef new_rows = [];\n\nexisting_rows.eachWithIndex { row, index ->\n    def new_row = [:]\n    headers.each { header ->\n        def value = SftpUtils.rewriteHeader(header)\n        def cellValue = row[value]\n\n        if (cellValue instanceof String) {\n            cellValue = cellValue.trim()\n\n            // Patterns:\n            // 1) Standard currency: $100.09, ₹2,345.00, USD 99.9, AED150\n            def pStandard = ~/^(?:[₹$]|USD|INR|EUR|AED)\\s?[\\d,]+(?:\\.\\d+)?$/\n            // 2) Parentheses negative: ($82.41), (₹ 1,234.56), (USD 100)\n            def pParens   = ~/^\\(\\s*(?:[₹$]|USD|INR|EUR|AED)\\s?[\\d,]+(?:\\.\\d+)?\\s*\\)$/\n\n            if (cellValue ==~ pStandard || cellValue ==~ pParens) {\n                boolean isParensNegative = (cellValue ==~ pParens)\n                // strip everything except digits and dot\n                def cleaned = cellValue.replaceAll(/[^0-9.]/, '')\n                // add a leading '-' if it was in parentheses\n                if (isParensNegative && cleaned) cleaned = '-' + cleaned\n\n                if (cleaned.isNumber()) {\n                    cellValue = cleaned.toBigDecimal()\n                }\n            }\n        }\n\n        new_row[header] = cellValue\n    }\n\n    new_columns.each { key, value ->\n        def new_value = value.replaceAll(/([A-Za-z])2/, { all, letter ->\n            letter + (batch_number * 200 + index + 2)\n        })\n        new_row[key] = \"{\" + new_value + \"}\"\n    }\n\n    new_rows.add(new_row)\n}\n\nreturn ['new_rows': new_rows, 'new_headers': new_headers]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"batch_number":"{{ n_ohdTj.outputs.index }}",
					"new_columns":"{{ n_v7rrM.outputs.result }}",
					"existing_rows":{
						"source":"{{ n_ohdTj.outputs.item }}",
						"ua:type":"mappedArray",
						"items":"{{ n_ohdTj.outputs.item[0] }}"
					},
					"headers":{
						"source":"{{ n_DxSHe.outputs.headers }}",
						"ua:type":"mappedArray",
						"items":"{{ n_DxSHe.outputs.headers[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":155,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ohdTj@_t1UEx-1@l",
			"id":"n_KAaqe",
			"index":13,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ n_WeyCI.outputs.result.new_rows }}",
					"items":"{{ n_WeyCI.outputs.result.new_rows[0] }}"
				},
				"listName":"{{ n_9nTAx.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":155,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ohdTj@_t1UEx-1@l",
			"id":"n_fbxzq",
			"index":14,
			"inputs":{
				"listName":"{{ _x8wxv.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":155,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_ohdTj@_t1UEx-1@l",
			"id":"n_I3NN8",
			"index":15,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ n_WeyCI.outputs.result.new_headers }}",
					"items":"{{ n_WeyCI.outputs.result.new_headers[0] }}"
				},
				"listName":"{{ _x8wxv.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":820,
				"resourceName":"excel_by_unifyapps_create_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_Suxpk",
			"index":16,
			"inputs":{
				"fileName":"Results.xlsx",
				"fileType":"xlsx"
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Create an excel file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":865,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_TtAO3",
			"index":17,
			"inputs":{
				"repeatMode":"BATCH",
				"listSource":"{{ n_9nTAx.outputs.items }}",
				"captureIterations":false,
				"batchSize":5000
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.dropDownDetails.items.beginRow",
					"root.dropDownDetails.items.endRow",
					"root.dropDownDetails.items.beginColumn",
					"root.dropDownDetails.items.endColumn",
					"root.dropDownDetails.items.options.items"
				]
			},
			"context":{
				"appName":"excel_by_unifyapps",
				"resourceVersion":140,
				"resourceName":"excel_by_unifyapps_list_to_excel_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"n_TtAO3@_t1UEx-1@l",
			"id":"n_EbMVA",
			"index":18,
			"inputs":{
				"fileName":"new_file",
				"sheetName":"result",
				"headerType":"DYNAMIC",
				"dataSource":"{{ n_TtAO3.outputs.item }}",
				"existingFileDetails":"{{ n_Suxpk.outputs.fileDetails }}",
				"fileType":"xlsx",
				"append":true,
				"dynamicHeaders":{
					"source":"{{ _x8wxv.outputs.items }}",
					"ua:type":"mappedArray",
					"items":"{{ _x8wxv.outputs.items[0] }}"
				}
			},
			"skip":false,
			"subTitle":"Excel by UnifyApps",
			"title":"Write data to Excel file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":4546,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_FQjdD",
			"index":19,
			"inputs":{
				"writeThroughSessionVariables":false,
				"object_type":"agents_qa_test",
				"skipIfBlank":false,
				"record":{
					"Name":"{{ n_Suxpk.outputs.fileDetails }}"
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":227,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_GQ33D",
			"index":20,
			"inputs":{
				"file":"{{ n_EbMVA.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":true,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":156,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_OIb2b",
			"index":21,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"b64_encoded":{
							"type":"string",
							"title":"base64 Encoded"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					}
				},
				"configurationMode":"TEMPLATE",
				"code":"import requests\nimport base64\nimport tempfile\nimport formulas\n\n# 1. Download the Excel file from a public URL\nresponse = requests.get(url)\nresponse.raise_for_status()\n\n# 2. Save to a temporary file\nwith tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_in:\n    tmp_in.write(response.content)\n    tmp_in.flush()\n    input_path = tmp_in.name\n\n# 3. Load and calculate with formulas\nwb = formulas.ExcelModel().load(input_path)\nwb.calculate()  # Evaluate all formulas\n\n# 4. Write the recalculated workbook to a new temporary file\nwith tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_out:\n    wb.write(tmp_out.name)\n    tmp_out.flush()\n    output_path = tmp_out.name\n\n# 5. Read the output file and encode as base64\nwith open(output_path, 'rb') as f:\n    b64_encoded = base64.b64encode(f.read()).decode('utf-8')\n\n# 6. Print the base64 string\nresult = {\n  \"b64_encoded\": b64_encoded\n}",
				"imports":[
					"formulas",
					"openpyxl",
					"requests"
				],
				"isAsync":true,
				"python_version":"3.12",
				"entityId":"e_68ea78b244b6037ddb683a48",
				"captureStdOutput":false,
				"parameters":{
					"url":"{{ n_GQ33D.outputs.url }}"
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":true,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"files_by_unifyapps",
				"resourceVersion":153,
				"resourceName":"files_by_unifyapps_upload_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_feHLL",
			"index":22,
			"inputs":{
				"base64Content":"{{ n_OIb2b.outputs.result.b64_encoded }}",
				"fileName":"temp.xlsx",
				"option":"base64Content"
			},
			"skip":true,
			"subTitle":"Files by UnifyApps",
			"title":"Upload file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":11166,
				"resourceName":"storage_by_unifyapps_import_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"_t1UEx-1",
			"id":"n_5udsR",
			"index":23,
			"inputs":{
				"partialUpdate":false,
				"sheetIndex":"{{ n_EbMVA.outputs.fileDetails }}",
				"object_type":"lowes_llm_1",
				"sourceType":"CLOUD_STORAGE",
				"delimiter":",",
				"skipUpdate":false,
				"source":"{{ n_EbMVA.outputs.fileDetails.source }}",
				"additionalProperties":[
					{
						"key":"properties_epoch",
						"value":"{{ n_hWXvf.outputs.epoch }}"
					}
				],
				"fieldMappings":{
					"source":"{{ n_EbMVA.outputs.fileDetails }}",
					"ua:type":"mappedArray"
				},
				"fileType":"XLSX",
				"skipFirstRow":false
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				},
				"timeoutConfig":{
					"enabled":false
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Import records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":173,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_nMokn",
			"index":24,
			"inputs":{
				"automationId":"6793913478118e27332f4620",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ n_mncUh.outputs.caseId }}",
					"file":"{{ n_feHLL.outputs.fileDetails }}",
					"addToKnowledgeSet":"e_68de743431424646e86c90e6",
					"metadataIndexing":true
				}
			},
			"skip":false,
			"subTitle":"Session File Indexer",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":11163,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_AoUWZ",
			"index":25,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"id",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ n_nMokn.outputs.knowledgeId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"knowledge",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"page":{
					"paginateBy":"OFFSET",
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"readThroughSessionVariables":false,
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":155,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_JgWjo",
			"index":26,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"uemId":{
							"type":"string",
							"title":"uemId"
						}
					}
				}
			},
			"inputs":{
				"uemId":"{{ n_AoUWZ.outputs.properties.additionalDetails.unifiedEntityModelId }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"uemId":{
							"type":"string",
							"title":"uemId"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"UEM ID",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":170,
				"resourceName":"callables_call_automation_async",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_KRzxK",
			"index":27,
			"inputs":{
				"automationId":"68de82126b6ce77165c61665",
				"runtimeConnections":{},
				"version":"-1",
				"parameters":{
					"caseId":"{{ n_mncUh.outputs.caseId }}",
					"file":"{{ n_EbMVA.outputs.fileDetails }}",
					"epoch":"{{ n_hWXvf.outputs.epoch }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation async",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":0,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_t1UEx-1",
			"id":"n_8YozE",
			"index":28,
			"inputs":{
				"result":{
					"url":"{{ n_EbMVA.outputs.fileDetails }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":33452,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":false,
	"version":107
}