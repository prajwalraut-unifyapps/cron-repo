{
	"appsUsed":[
		"gmail"
	],
	"createdTime":1751383698436,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1758650422915,
		"deployedBy":-1,
		"deployedDefinitionId":"68d2e0361bf7400a256ceb11",
		"status":"DEPLOYED",
		"version":53,
		"workflowVersion":80
	},
	"edges":[
		{
			"fromNodeId":"n_Hc01S",
			"priority":0,
			"skip":false,
			"toNodeId":"dlbUh",
			"type":"next"
		},
		{
			"fromNodeId":"dlbUh",
			"priority":0,
			"skip":false,
			"toNodeId":"qWCww",
			"type":"next"
		},
		{
			"fromNodeId":"qWCww",
			"priority":0,
			"skip":false,
			"toNodeId":"Mb77o",
			"type":"next"
		},
		{
			"fromNodeId":"Mb77o",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Duott",
			"type":"next"
		},
		{
			"fromNodeId":"n_Duott",
			"priority":0,
			"skip":false,
			"toNodeId":"n_bYwv4",
			"type":"next"
		},
		{
			"fromNodeId":"n_bYwv4",
			"priority":0,
			"skip":false,
			"toNodeId":"S3ti0",
			"type":"next"
		},
		{
			"fromNodeId":"S3ti0",
			"priority":0,
			"skip":false,
			"toNodeId":"n_yTtAG",
			"type":"next"
		},
		{
			"fromNodeId":"n_yTtAG",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zBaXv",
			"type":"next"
		},
		{
			"fromNodeId":"n_zBaXv",
			"priority":0,
			"skip":false,
			"toNodeId":"n_uehZL",
			"type":"next"
		},
		{
			"fromNodeId":"n_uehZL",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_TsgCd",
			"type":"if"
		},
		{
			"fromNodeId":"n_TsgCd",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Fi82k",
			"type":"next"
		},
		{
			"fromNodeId":"n_Fi82k",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ke8ss",
			"type":"next"
		},
		{
			"fromNodeId":"n_uehZL",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_aive0",
			"type":"next"
		},
		{
			"fromNodeId":"n_ke8ss",
			"priority":0,
			"skip":false,
			"toNodeId":"to1iu",
			"type":"next"
		},
		{
			"fromNodeId":"n_aive0",
			"priority":0,
			"skip":false,
			"toNodeId":"to1iu",
			"type":"next"
		},
		{
			"fromNodeId":"to1iu",
			"priority":0,
			"skip":false,
			"toNodeId":"4oF4i",
			"type":"next"
		},
		{
			"fromNodeId":"4oF4i",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_wnE7V",
			"type":"if"
		},
		{
			"fromNodeId":"n_wnE7V",
			"priority":0,
			"skip":false,
			"toNodeId":"vlHML",
			"type":"next"
		},
		{
			"fromNodeId":"4oF4i",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"vlHML",
			"type":"next"
		},
		{
			"fromNodeId":"vlHML",
			"priority":0,
			"skip":false,
			"toNodeId":"BE2zk",
			"type":"next"
		},
		{
			"fromNodeId":"BE2zk",
			"priority":0,
			"skip":false,
			"toNodeId":"jMEhQ",
			"type":"next"
		},
		{
			"fromNodeId":"jMEhQ",
			"priority":0,
			"skip":false,
			"toNodeId":"JX0I7",
			"type":"next"
		},
		{
			"fromNodeId":"JX0I7",
			"priority":0,
			"skip":false,
			"toNodeId":"YB1mt",
			"type":"next"
		},
		{
			"fromNodeId":"YB1mt",
			"priority":0,
			"skip":false,
			"toNodeId":"FrBpD",
			"type":"next"
		},
		{
			"fromNodeId":"FrBpD",
			"priority":0,
			"skip":false,
			"toNodeId":"V5K6N",
			"type":"next"
		},
		{
			"fromNodeId":"V5K6N",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"AmA3V",
			"type":"if"
		},
		{
			"fromNodeId":"AmA3V",
			"priority":0,
			"skip":false,
			"toNodeId":"n_pCHN1",
			"type":"next"
		},
		{
			"fromNodeId":"n_pCHN1",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Gz72s",
			"type":"if"
		},
		{
			"fromNodeId":"n_Gz72s",
			"priority":0,
			"skip":false,
			"toNodeId":"4oDLI",
			"type":"next"
		},
		{
			"fromNodeId":"n_pCHN1",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"4oDLI",
			"type":"next"
		},
		{
			"fromNodeId":"4oDLI",
			"priority":0,
			"skip":false,
			"toNodeId":"n_pMbWX",
			"type":"next"
		},
		{
			"fromNodeId":"V5K6N",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"n_pMbWX",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"684d47c070d40d0fcc3fc7e3",
	"lastModifiedBy":1,
	"lcName":"knowledge indexer | gmail | index specific folder or email",
	"modifiedTime":1760012164146,
	"name":"Knowledge Indexer | Gmail | Index specific folder or email",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":440,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_Hc01S",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"Id":{
							"type":"string",
							"title":"Id"
						},
						"threadId":{
							"type":"string",
							"title":"Thread Id"
						},
						"lastSyncTime":{
							"type":"integer",
							"title":"Last Sync Time"
						},
						"knowledgeId":{
							"type":"string",
							"title":"Knowledge Id"
						},
						"knowledgeVersion":{
							"type":"number",
							"title":"Knowledge Version"
						},
						"IncludeAttachment":{
							"type":"boolean",
							"title":"Include Attachment"
						},
						"connectionId":{
							"type":"string",
							"title":"Connection Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"gmail",
				"resourceVersion":363,
				"connectionId":"684c06c82aa00d68f90ff25b",
				"resourceName":"gmail_get_message",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"dlbUh",
			"index":0,
			"inputs":{
				"format":"full",
				"id":"{{ n_Hc01S.outputs.Id }}"
			},
			"skip":true,
			"subTitle":"Gmail",
			"title":"Get message",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":400,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"qWCww",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"context":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Context"
						},
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"connectionId":{
							"type":"string",
							"title":"Connection Id"
						},
						"id":{
							"type":"string",
							"title":"Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def context = [\n    appName      : \"gmail\",\n    connectionId : connectionId,\n    resourceName : \"gmail_get_message\"\n]\n\ndef input = [\n    id : id,\n     format : 'full'\n]\n\nreturn[\n   'context' : context,\n   'inputs' : input\n]",
				"parameters":{
					"connectionId":"{{ n_Hc01S.outputs.connectionId }}",
					"id":"{{ n_Hc01S.outputs.Id }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"custom_application",
				"resourceVersion":395,
				"resourceName":"custom_application_execute",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"Mb77o",
			"index":0,
			"inputs":{
				"input":"{{ qWCww.outputs.result.inputs }}",
				"context":"{{ qWCww.outputs.result.context }}"
			},
			"skip":false,
			"subTitle":"Custom Application",
			"title":"Execute Custom Application Request",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_Duott",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"id":{
							"type":"string",
							"title":"ID"
						},
						"threadId":{
							"type":"string",
							"title":"Thread ID"
						},
						"labelIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Label IDs"
						},
						"snippet":{
							"type":"string",
							"title":"Snippet"
						},
						"historyId":{
							"type":"string",
							"title":"History ID"
						},
						"internalDate":{
							"type":"string",
							"title":"Internal Date"
						},
						"payload":{
							"type":"object",
							"properties":{
								"partId":{
									"type":"string",
									"title":"Part ID"
								},
								"mimeType":{
									"type":"string",
									"title":"MIME Type"
								},
								"filename":{
									"type":"string",
									"title":"Filename"
								},
								"headers":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"name":{
												"type":"string",
												"title":"Name"
											},
											"value":{
												"type":"string",
												"title":"Value"
											}
										}
									}
								},
								"body":{
									"type":"object",
									"properties":{
										"size":{
											"type":"integer",
											"title":"Size"
										},
										"data":{
											"type":"string",
											"title":"Data"
										},
										"attachmentId":{
											"type":"string",
											"title":"Attachment ID"
										}
									}
								},
								"parts":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"partId":{
												"type":"string",
												"title":"Part ID"
											},
											"mimeType":{
												"type":"string",
												"title":"MIME Type"
											},
											"filename":{
												"type":"string",
												"title":"Filename"
											},
											"headers":{
												"type":"array",
												"items":{
													"type":"object",
													"properties":{
														"name":{
															"type":"string",
															"title":"Name"
														},
														"value":{
															"type":"string",
															"title":"Value"
														}
													}
												}
											},
											"body":{
												"type":"object",
												"properties":{
													"size":{
														"type":"integer",
														"title":"Size"
													},
													"data":{
														"type":"string",
														"title":"Data"
													},
													"attachmentId":{
														"type":"string",
														"title":"Attachment ID"
													}
												}
											}
										}
									}
								}
							}
						},
						"sizeEstimate":{
							"type":"integer",
							"title":"Size Estimate"
						},
						"raw":{
							"type":"string",
							"title":"Raw"
						}
					},
					"ua:__linkedVariable__":"dlbUh.outputs"
				},
				"input":{
					"type":"object",
					"properties":{
						"result":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(!binding.hasVariable('result')){\n  return [:]\n}\n\nreturn result",
				"parameters":{
					"result":"{{ Mb77o.outputs.result }}"
				}
			},
			"skip":false,
			"subTitle":"Message Details",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_bYwv4",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"textData":{
							"type":"string",
							"title":"Text Data"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"textData":{
							"type":"string",
							"title":"Text Data"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable ",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":142,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"S3ti0",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"textData":{
							"type":"string",
							"title":"Text Data"
						},
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						}
					},
					"additionalProperties":false,
					"required":[
						"textData"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"parts":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Parts"
						}
					},
					"additionalProperties":false,
					"required":[
						"parts"
					]
				},
				"compile_static":false,
				"code":"import java.util.Base64\n\ndef extractTextData(parts) {\n    if (!parts) {\n        return \"\"\n    }\n\n    if (parts instanceof Map) {\n        parts = [parts]\n    }\n\n    def emailData = \"\"\n\n    for (part in parts) {\n        if (!(part instanceof Map)) {\n            continue\n        }\n\n        if (part.mimeType?.toLowerCase()?.startsWith(\"multipart/\")) {\n            // Recursively search for text/plain in subparts\n            emailData = extractTextData(part.parts)\n            if (emailData) break\n        } else if (part.mimeType?.toLowerCase() == \"text/html\" && part.body?.data) {\n            emailData = part.body.data\n            break\n        }\n    }\n\n    return emailData\n}\n\n// Ensure 'parts' exists before calling extractTextData\nif (!binding.hasVariable('parts')) {\n    return [\"textData\": \"\", 'allowed' : true]\n}\n\ndef encodedString = extractTextData(parts)\n\ndef decodedString = \"\"\nif (encodedString?.trim()) {\n    try {\n        byte[] decodedBytes = Base64.getUrlDecoder().decode(encodedString)\n        decodedString = new String(decodedBytes, \"UTF-8\")\n    } catch (Exception e) {\n        decodedString = \"Invalid Base64 format\"\n    }\n}\n\nreturn [\"textData\": decodedString, 'allowed' : decodedString.isEmpty()]",
				"parameters":{
					"parts":{
						"ua:type":"mappedArray",
						"source":"{{ n_Duott.outputs.result.payload.parts }}",
						"items":"{{ n_Duott.outputs.result.payload.parts[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Extracting content and convert base64 to text",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"utility_by_unifyapps_from_html_to_plain_text",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_yTtAG",
			"index":0,
			"inputs":{
				"conversionType":"plainText",
				"htmlString":"{{ S3ti0.outputs.result.textData }}"
			},
			"skip":false,
			"subTitle":"Utility ",
			"title":"Convert HTML to text",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_zBaXv",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"html":{
							"type":"string",
							"title":"Html"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"from bs4 import BeautifulSoup\nimport re\n\n\ntry:\n    html\nexcept NameError:\n    result = {\n        'text': \"\"\n    }\nelse:\n    soup = BeautifulSoup(html, 'html.parser')\n\n    def html_to_markdown(element):\n        markdown = \"\"\n        for content in element.descendants:\n            if content.name == \"strong\":\n                markdown += \"**\"\n            elif content.name == \"a\":\n                text = content.get_text()\n                href = content.get(\"href\")\n                markdown += f\"[{text}]({href})\"\n            elif content.string and not content.name:\n                markdown += content.string\n\n            if content.name == \"strong\":\n                markdown += \"**\"\n            elif content.name == \"p\":\n                markdown += \"\\n\\n\"\n\n        return markdown\n\n    text = html_to_markdown(soup.body or soup)\n\n    cleaned = re.sub(r'(\\\\r\\\\n|\\\\n|\\\\r)+', ' ', text)\n    cleaned = re.sub(r'\\[\\s*\\]\\([^\\)]*\\)', '', cleaned)\n    cleaned = re.sub(r'\\s{2,}', ' ', cleaned).strip()\n\n    result = {\n        'text': cleaned\n    }\n",
				"isAsync":false,
				"parameters":{
					"html":"{{ S3ti0.outputs.result.textData }}"
				}
			},
			"skip":true,
			"subTitle":"Code ",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":13,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_uehZL",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ S3ti0.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_uehZL@_M2Gzn-1@y",
			"id":"n_TsgCd",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"textData":{
							"type":"string",
							"title":"Text Data"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"data":{
							"type":"string",
							"title":"Data"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(!binding.hasVariable('data')){\n  return ['textData' : '']\n}\n\ndef encodedString = data\n\ndef decodedString = \"\"\nif (encodedString?.trim()) {\n    try {\n        byte[] decodedBytes = Base64.getUrlDecoder().decode(encodedString)\n        decodedString = new String(decodedBytes, \"UTF-8\")\n    } catch (Exception e) {\n        decodedString = \"Invalid Base64 format\"\n    }\n}\n\nreturn [\"textData\": decodedString]",
				"parameters":{
					"data":"{{ n_Duott.outputs.result.payload.body.data }}"
				}
			},
			"skip":false,
			"subTitle":"Code ",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"utility_by_unifyapps_from_html_to_plain_text",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_uehZL@_M2Gzn-1@y",
			"id":"n_Fi82k",
			"index":0,
			"inputs":{
				"conversionType":"plainText",
				"htmlString":"{{ n_TsgCd.outputs.result.textData }}"
			},
			"skip":false,
			"subTitle":"Utility ",
			"title":"Convert HTML to text",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_uehZL@_M2Gzn-1@y",
			"id":"n_ke8ss",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_bYwv4.outputs.textData }}",
						"value":"{{ n_Fi82k.outputs.convertedText }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable ",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":13,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_uehZL@_M2Gzn-1@n",
			"id":"n_aive0",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ n_bYwv4.outputs.textData }}",
						"value":"{{ n_yTtAG.outputs.convertedText }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable ",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":142,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"to1iu",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"messageID":{
							"type":"string",
							"title":"Message ID"
						},
						"threadID":{
							"type":"string",
							"title":"Thread ID"
						},
						"subject":{
							"type":"string",
							"title":"Subject"
						},
						"snippet":{
							"type":"string",
							"title":"Snippet"
						},
						"allEmailsList":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"All Email List"
						},
						"fromEmail":{
							"type":"string",
							"title":"From Email"
						},
						"toEmail":{
							"type":"string",
							"title":"To Email"
						},
						"labels":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Labels"
						},
						"ccEmails":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Cc Emails"
						},
						"date":{
							"type":"string",
							"title":"Date"
						},
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						},
						"attachmentIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Attachment Ids"
						}
					},
					"additionalProperties":false,
					"required":[
						"messageID",
						"threadID",
						"subject",
						"snippet",
						"allEmailsList",
						"fromEmail",
						"toEmail",
						"labels",
						"date"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"jsonObject":{
							"type":"object",
							"properties":{
								"id":{
									"type":"string",
									"title":"Id"
								},
								"threadId":{
									"type":"string",
									"title":"Thread Id"
								},
								"snippet":{
									"type":"string",
									"title":"Snippet"
								},
								"payload":{
									"type":"object",
									"properties":{
										"headers":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{},
												"additionalProperties":false
											},
											"title":"Headers"
										},
										"parts":{
											"type":"array",
											"items":{
												"type":"object",
												"properties":{},
												"additionalProperties":false
											},
											"title":"Parts"
										}
									},
									"additionalProperties":false,
									"title":"Payload",
									"required":[
										"headers",
										"parts"
									]
								},
								"sizeEstimate":{
									"type":"integer",
									"title":"Size Estimate"
								},
								"historyId":{
									"type":"string",
									"title":"History Id"
								},
								"internalDate":{
									"type":"string",
									"title":"Internal Date"
								},
								"labels":{
									"type":"array",
									"items":{
										"type":"string"
									},
									"title":"Labels"
								}
							},
							"additionalProperties":false,
							"title":"Json Object",
							"required":[
								"id",
								"threadId",
								"snippet",
								"payload",
								"sizeEstimate",
								"historyId",
								"internalDate",
								"labels"
							]
						}
					},
					"additionalProperties":false,
					"required":[
						"jsonObject"
					]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\n\n// Returns a single email address from a header value.\n// If the text contains \"<>\", extract the email inside; otherwise, return the trimmed text.\ndef extractSingleEmail(String text) {\n    if (text == null) return \"\"\n    if (text.contains(\"<\")) {\n        def matcher = text =~ /<([^>]+)>/\n        return matcher.find() ? matcher.group(1) : text.trim()\n    } else {\n        return text.trim()\n    }\n}\n\n// Returns a list of email addresses from a header value.\n// If the text contains \"<>\", extract all emails; otherwise, split by comma.\ndef extractMultipleEmails(String text) {\n    if (text == null) return []\n    if (text.contains(\"<\")) {\n        def matcher = text =~ /<([^>]+)>/\n        return matcher.collect { it[1] }\n    } else {\n        return text.split(\",\").collect { it.trim() }\n    }\n}\n\n// Recursively extract all attachment IDs from parts (if any).\ndef extractAttachmentIds(parts) {\n    def ids = []\n    if (!parts) return ids\n    parts.each { part ->\n        if (part.body?.attachmentId) {\n            ids << part.body.attachmentId\n        }\n        if (part.parts) {\n            ids.addAll(extractAttachmentIds(part.parts))\n        }\n    }\n    return ids\n}\n\ndef formatEpochToDate(String epochMillis) {\n    try {\n        def date = new Date(epochMillis.toLong())\n        return new SimpleDateFormat(\"dd/MM/yyyy\").format(date)\n    } catch (Exception e) {\n        return \"\"\n    }\n}\n\n// --- Main Extraction Code ---\n\ndef headers = jsonObject.payload.headers\n\ndef fromHeader = headers.find { it.name.equalsIgnoreCase(\"From\") }?.value ?: \"\"\ndef toHeader   = headers.find { it.name.equalsIgnoreCase(\"To\") }?.value ?: \"\"\ndef ccHeader   = headers.find { it.name.equalsIgnoreCase(\"Cc\") }?.value ?: \"\"\ndef subject    = headers.find { it.name.equalsIgnoreCase(\"Subject\") }?.value ?: \"\"\n\ndef fromEmail = extractSingleEmail(fromHeader)\ndef toEmail   = extractSingleEmail(toHeader)\ndef ccEmails  = extractMultipleEmails(ccHeader)\n\n// Build the allEmailsList from From, To, and Cc headers.\ndef allEmails = []\nheaders.findAll { header ->\n    header.name.equalsIgnoreCase(\"From\") ||\n    header.name.equalsIgnoreCase(\"To\") ||\n    header.name.equalsIgnoreCase(\"Cc\")\n}.each { header ->\n    allEmails.addAll(extractMultipleEmails(header.value))\n}\nallEmails = allEmails.unique()\n\ndef formattedDate = formatEpochToDate(jsonObject.internalDate)\ndef snippet = jsonObject.snippet ?: \"\"\ndef attachmentIds = []\nif (jsonObject.payload.parts) {\n    attachmentIds = extractAttachmentIds(jsonObject.payload.parts)\n}\n\n// Build the final output map.\nreturn result = [\n    \"messageID\"     : jsonObject.id,\n    \"threadID\"      : jsonObject.threadId,\n    \"labels\"        : jsonObject.labels,\n    \"fromEmail\"     : fromEmail,\n    \"toEmail\"       : toEmail,\n    \"ccEmails\"      : ccEmails,\n    \"allEmailsList\" : allEmails,\n    \"subject\"       : subject,\n    \"snippet\"       : snippet,\n    \"date\"          : formattedDate,\n    \"attachmentIds\" : attachmentIds,\n    'allowed' : attachmentIds.isEmpty()\n]\n",
				"parameters":{
					"jsonObject":{
						"id":"{{ n_Duott.outputs.result.id }}",
						"threadId":"{{ n_Duott.outputs.result.threadId }}",
						"snippet":"{{ n_Duott.outputs.result.snippet }}",
						"payload":{
							"headers":{
								"ua:type":"mappedArray",
								"source":"{{ n_Duott.outputs.result.payload.headers }}",
								"items":"{{ n_Duott.outputs.result.payload.headers[0] }}"
							},
							"parts":{
								"ua:type":"mappedArray",
								"source":"{{ n_Duott.outputs.result.payload.parts }}",
								"items":"{{ n_Duott.outputs.result.payload.parts[0] }}"
							}
						},
						"historyId":"{{ n_Duott.outputs.result.sizeEstimate }}",
						"labels":{
							"ua:type":"mappedArray",
							"source":"{{ n_Duott.outputs.result.labelIds }}",
							"items":"{{ n_Duott.outputs.result.labelIds[0] }}"
						},
						"sizeEstimate":"{{ dlbUh.outputs.sizeEstimate }}",
						"internalDate":"{{ n_Duott.outputs.result.internalDate }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Extract other data from response",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":385,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"4oF4i",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_Hc01S.outputs.lastSyncTime }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":449,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"4oF4i@_M2Gzn-1@y",
			"id":"n_wnE7V",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":423,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"vlHML",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						}
					},
					"additionalProperties":false,
					"required":[
						"chunkMetadata"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"sender":{
							"type":"string",
							"title":"Sender"
						},
						"receiver":{
							"type":"string",
							"title":"Receiver"
						},
						"date":{
							"type":"string",
							"title":"Date"
						},
						"name":{
							"type":"string",
							"title":"Name"
						}
					},
					"additionalProperties":false,
					"required":[
						"appName",
						"uniqueEntityId",
						"sender",
						"receiver",
						"date",
						"name"
					]
				},
				"compile_static":false,
				"code":"def chunk_metadata = [:]\nchunk_metadata << (binding.hasVariable('appName') && appName ? [\"appName\": appName] : [:])\nchunk_metadata << (binding.hasVariable('uniqueEntityId') && uniqueEntityId ? [\"uniqueEntityId\": uniqueEntityId] : [:])\nchunk_metadata << (binding.hasVariable('sender') && sender ? [\"sender\": sender] : [:])\nchunk_metadata << (binding.hasVariable('receiver') && receiver ? [\"receiver\": receiver] : [:])\nchunk_metadata << (binding.hasVariable('date') && date ? [\"date\": date.toLong()] : [:])\nchunk_metadata << (binding.hasVariable('name') && name ? [\"name\": name] : [:])\nreturn [\"chunkMetadata\":chunk_metadata]",
				"parameters":{
					"appName":"gmail",
					"sender":"{{ to1iu.outputs.result.fromEmail }}",
					"receiver":"{{ to1iu.outputs.result.toEmail }}",
					"uniqueEntityId":"{{ to1iu.outputs.result.messageID }}",
					"date":"{{ n_Duott.outputs.result.internalDate }}",
					"name":"{{ to1iu.outputs.result.subject }}"
				}
			},
			"skip":false,
			"subTitle":"Chunk Metadata",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":142,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"BE2zk",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"otherData":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Other Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"otherData"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"messageID":{
							"type":"string",
							"title":"Message ID"
						},
						"threadID":{
							"type":"string",
							"title":"Thread ID"
						},
						"labels":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Labels"
						},
						"snippet":{
							"type":"string",
							"title":"Snippet"
						},
						"subject":{
							"type":"string",
							"title":"Subject"
						},
						"fromEmail":{
							"type":"string",
							"title":"From Email"
						},
						"toEmail":{
							"type":"string",
							"title":"To Email"
						},
						"ccEmails":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Cc Emails"
						},
						"date":{
							"type":"string",
							"title":"Date"
						}
					},
					"additionalProperties":false,
					"required":[
						"messageID",
						"threadID",
						"labels",
						"snippet",
						"subject",
						"fromEmail",
						"toEmail",
						"ccEmails",
						"date"
					]
				},
				"compile_static":false,
				"code":"def chunkMetadata = [:]\n\ndef addIfNotEmpty(map, key, value) {\n    if (value != null) {\n        map[key] = value\n    } else {\n        map[key] = \"\" \n    }\n}\n\naddIfNotEmpty(chunkMetadata, \"appName\", binding.hasVariable('appName') ? appName : \"gmail\")\naddIfNotEmpty(chunkMetadata, \"messageId\", binding.hasVariable('messageID') ? messageID : \"\")\naddIfNotEmpty(chunkMetadata, \"threadId\", binding.hasVariable('threadID') ? threadID : \"\")\naddIfNotEmpty(chunkMetadata, \"labels\", binding.hasVariable('labels') ? labels : \"\")\naddIfNotEmpty(chunkMetadata, \"snippet\", binding.hasVariable('snippet') ? snippet : \"\")\naddIfNotEmpty(chunkMetadata, \"subject\", binding.hasVariable('subject') ? subject : \"\")\naddIfNotEmpty(chunkMetadata, \"from\", binding.hasVariable('fromEmail') ? fromEmail : \"\")\naddIfNotEmpty(chunkMetadata, \"to\", binding.hasVariable('toEmail') ? toEmail : \"\")\naddIfNotEmpty(chunkMetadata, \"cc\", binding.hasVariable('ccEmails') ? ccEmails : \"\")\naddIfNotEmpty(chunkMetadata, \"createdDate\", binding.hasVariable('date') ? date : \"\")\n\nreturn [\"otherData\": chunkMetadata]",
				"parameters":{
					"messageID":"{{ to1iu.outputs.result.messageID }}",
					"threadID":"{{ to1iu.outputs.result.threadID }}",
					"labels":{
						"source":"{{ to1iu.outputs.result.labels }}",
						"ua:type":"mappedArray",
						"items":"{{ to1iu.outputs.result.labels[0] }}"
					},
					"snippet":"{{ to1iu.outputs.result.snippet }}",
					"subject":"{{ to1iu.outputs.result.subject }}",
					"fromEmail":"{{ to1iu.outputs.result.fromEmail }}",
					"toEmail":"{{ to1iu.outputs.result.toEmail }}",
					"ccEmails":{
						"source":"{{ to1iu.outputs.result.ccEmails }}",
						"ua:type":"mappedArray",
						"items":"{{ to1iu.outputs.result.ccEmails[0] }}"
					},
					"date":"{{ to1iu.outputs.result.date }}"
				}
			},
			"skip":false,
			"subTitle":"Other data",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":421,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"jMEhQ",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"finalTextData":{
							"type":"string",
							"title":"Final Text Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"finalTextData"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"textData":{
							"type":"string",
							"title":"Text Data"
						},
						"otherData":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Other Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"textData",
						"otherData"
					]
				},
				"compile_static":false,
				"code":"def otherDataString = otherData.collect { k, v -> \"${k}:${v}\" }.join(\" \")\n\ndef finalTextData = otherDataString + \" \" + textData\n\nreturn [\"finalTextData\": finalTextData]\n",
				"parameters":{
					"otherData":"{{ BE2zk.outputs.result.otherData }}",
					"textData":"{{ n_bYwv4.outputs.textData }}"
				}
			},
			"skip":false,
			"subTitle":"All text data",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":415,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"JX0I7",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"emailGrants":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Email Grants"
						}
					},
					"additionalProperties":false,
					"required":[
						"emailGrants"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"allEmailsList":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"All Emails List"
						}
					},
					"additionalProperties":false,
					"required":[
						"allEmailsList"
					]
				},
				"compile_static":false,
				"code":"def emailGrants = []\n\nallEmailsList.each { item ->\n    emailGrants << \"gmail/u/\" + item\n}\n\nreturn [\"emailGrants\": emailGrants]\n",
				"parameters":{
					"allEmailsList":{
						"source":"{{ to1iu.outputs.result.allEmailsList }}",
						"ua:type":"mappedArray",
						"items":"{{ to1iu.outputs.result.allEmailsList[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Get email shared with ids",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":146,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"YB1mt",
			"index":0,
			"inputs":{
				"automationId":"67091f09c6db330cf5b08ead",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"text":"{{ jMEhQ.outputs.result.finalTextData }}",
					"knowledgeId":"{{ n_Hc01S.outputs.knowledgeId }}"
				}
			},
			"skip":false,
			"subTitle":"Text Chunker | Knowledge",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":146,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"FrBpD",
			"index":0,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"chunks":{
						"ua:type":"mappedArray",
						"source":"{{ YB1mt.outputs.chunks }}",
						"items":{
							"data":"{{ YB1mt.outputs.chunks[0] }}",
							"sharedWithIds":{
								"ua:type":"mappedArray",
								"source":"{{ JX0I7.outputs.result.emailGrants }}",
								"items":"{{ JX0I7.outputs.result.emailGrants[0] }}"
							}
						}
					},
					"authorEmail":"{{ to1iu.outputs.result.fromEmail }}",
					"uniqueEntityId":"{{ to1iu.outputs.result.messageID }}",
					"chunkMetadata":"{{ vlHML.outputs.result.chunkMetadata }}",
					"knowledgeId":"{{ n_Hc01S.outputs.knowledgeId }}",
					"knowledgeVersion":"{{ n_Hc01S.outputs.knowledgeVersion }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"count":3,
					"enabled":true,
					"initialDelay":1000,
					"maxDelay":2000
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Knowledge Indexer  With RBAC",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":383,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"V5K6N",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ n_Hc01S.outputs.IncludeAttachment }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.attachmentIDs.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":144,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"V5K6N@_M2Gzn-1@y",
			"id":"AmA3V",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"additionalProperties":false,
					"required":[
						"inputs"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						},
						"attachmentIDs":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Attachment IDs"
						},
						"messageID":{
							"type":"string",
							"title":"Message ID"
						},
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Shared With Ids"
						},
						"fromEmail":{
							"type":"string",
							"title":"From Email"
						}
					},
					"additionalProperties":false,
					"required":[
						"chunkMetadata",
						"messageID",
						"sharedWithIds",
						"fromEmail",
						"attachmentIDs"
					]
				},
				"compile_static":false,
				"code":"def toReturn = [:]\n\nif(binding.hasVariable('attachmentIDs')){\n  toReturn.put(\"attachmentIDs\", attachmentIDs)\n}\nif(binding.hasVariable('messageID')){\n  toReturn.put(\"messageID\", messageID)\n}\nif(binding.hasVariable('sharedWithIds')){\n  toReturn.put(\"sharedWithIds\", sharedWithIds)\n}\nif(binding.hasVariable('chunkMetadata')){\n  toReturn.put(\"chunkMetadata\", chunkMetadata)\n}\nif(binding.hasVariable('fromEmail')){\n  toReturn.put(\"fromEmail\", fromEmail)\n}\n\nreturn [\"inputs\":toReturn]",
				"parameters":{
					"messageID":"{{ to1iu.outputs.result.messageID }}",
					"fromEmail":"{{ to1iu.outputs.result.fromEmail }}",
					"sharedWithIds":{
						"source":"{{ JX0I7.outputs.result.emailGrants }}",
						"ua:type":"mappedArray",
						"items":"{{ JX0I7.outputs.result.emailGrants[0] }}"
					},
					"attachmentIDs":{
						"source":"{{ dlbUh.outputs.payload.parts }}",
						"ua:type":"mappedArray",
						"items":"{{ dlbUh.outputs.payload.parts[0].body.attachmentId }}"
					},
					"chunkMetadata":"{{ vlHML.outputs.result.chunkMetadata }}"
				}
			},
			"skip":true,
			"subTitle":"Creating Inputs for Index attachments",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":13,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"V5K6N@_M2Gzn-1@y",
			"id":"n_pCHN1",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ to1iu.outputs.result.allowed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":13,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_pCHN1@V5K6N@_M2Gzn-1@y@y",
			"id":"n_Gz72s",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":442,
				"resourceName":"callables_call_automation_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"V5K6N@_M2Gzn-1@y",
			"id":"4oDLI",
			"index":0,
			"inputs":{
				"automationId":"684d4d4f227b9559582ce398",
				"runtimeConnections":{},
				"synchronous":true,
				"parametersList":{
					"ua:type":"mappedArray",
					"items":{
						"chunkMetadata":"{{ vlHML.outputs.result.chunkMetadata }}",
						"sharedWithIds":{
							"source":"{{ JX0I7.outputs.result.emailGrants }}",
							"ua:type":"mappedArray",
							"items":"{{ JX0I7.outputs.result.emailGrants[0] }}"
						},
						"messageID":"{{ to1iu.outputs.result.messageID }}",
						"fromEmail":"{{ to1iu.outputs.result.fromEmail }}",
						"knowledgeId":"{{ n_Hc01S.outputs.knowledgeId }}",
						"knowledgeVersion":"{{ n_Hc01S.outputs.knowledgeVersion }}",
						"connectionId":"{{ n_Hc01S.outputs.connectionId }}",
						"attachmentID":"{{ to1iu.outputs.result.attachmentIds[0] }}"
					},
					"source":"{{ to1iu.outputs.result.attachmentIds }}"
				},
				"version":"-1"
			},
			"skip":false,
			"subTitle":"[Gmail] Index attachments",
			"title":"Call automation (batch)",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":449,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_M2Gzn-1",
			"id":"n_pMbWX",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"runtimeConnectionAppNames":[
		"gmail"
	],
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":false,
		"enableRunLogging":false,
		"enableVariableLogging":false,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"AI Agent"
	],
	"version":111
}