{
	"appsUsed":[
		
	],
	"createdTime":1747000716234,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1747000716500,
		"deployedBy":1,
		"deployedDefinitionId":"68211d8c947989341ec2661b",
		"status":"DEPLOYED",
		"version":3,
		"workflowVersion":16
	},
	"edges":[
		{
			"fromNodeId":"PleJz",
			"priority":0,
			"skip":false,
			"toNodeId":"MhGun",
			"type":"next"
		},
		{
			"fromNodeId":"MhGun",
			"priority":0,
			"skip":false,
			"toNodeId":"w9XRv",
			"type":"next"
		},
		{
			"fromNodeId":"w9XRv",
			"priority":0,
			"skip":false,
			"toNodeId":"Rb6C1",
			"type":"next"
		},
		{
			"fromNodeId":"Rb6C1",
			"priority":0,
			"skip":false,
			"toNodeId":"_u7N2h",
			"type":"next"
		},
		{
			"fromNodeId":"_u7N2h",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_GFo2R",
			"type":"if"
		},
		{
			"fromNodeId":"_GFo2R",
			"priority":0,
			"skip":false,
			"toNodeId":"b10Jg",
			"type":"next"
		},
		{
			"fromNodeId":"_u7N2h",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"b10Jg",
			"type":"next"
		},
		{
			"fromNodeId":"b10Jg",
			"priority":0,
			"skip":false,
			"toNodeId":"JwEtN",
			"type":"next"
		},
		{
			"fromNodeId":"JwEtN",
			"priority":0,
			"skip":false,
			"toNodeId":"65tnh",
			"type":"next"
		},
		{
			"fromNodeId":"65tnh",
			"priority":0,
			"skip":false,
			"toNodeId":"_q2m8t",
			"type":"next"
		},
		{
			"fromNodeId":"_q2m8t",
			"priority":0,
			"skip":false,
			"toNodeId":"2yji0",
			"type":"next"
		},
		{
			"fromNodeId":"2yji0",
			"priority":0,
			"skip":false,
			"toNodeId":"2Yc1f",
			"type":"next"
		},
		{
			"fromNodeId":"2Yc1f",
			"priority":0,
			"skip":false,
			"toNodeId":"_UPQqe",
			"type":"next"
		},
		{
			"fromNodeId":"_UPQqe",
			"priority":0,
			"skip":false,
			"toNodeId":"_lNraX",
			"type":"next"
		},
		{
			"fromNodeId":"_lNraX",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_AjtSP",
			"type":"if"
		},
		{
			"fromNodeId":"_AjtSP",
			"priority":0,
			"skip":false,
			"toNodeId":"_VNuKN",
			"type":"next"
		},
		{
			"fromNodeId":"_VNuKN",
			"priority":0,
			"skip":false,
			"toNodeId":"_SUXLn",
			"type":"next"
		},
		{
			"fromNodeId":"_SUXLn",
			"priority":0,
			"skip":false,
			"toNodeId":"_A7pgn",
			"type":"next"
		},
		{
			"fromNodeId":"_A7pgn",
			"priority":0,
			"skip":false,
			"toNodeId":"_xhGXo",
			"type":"next"
		},
		{
			"fromNodeId":"_lNraX",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_xhGXo",
			"type":"next"
		},
		{
			"fromNodeId":"_xhGXo",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_SGmLG",
			"type":"if"
		},
		{
			"fromNodeId":"_SGmLG",
			"priority":0,
			"skip":false,
			"toNodeId":"_NVT6s",
			"type":"next"
		},
		{
			"fromNodeId":"_NVT6s",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_Fv7Z1",
			"type":"if"
		},
		{
			"fromNodeId":"_Fv7Z1",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_alYbF",
			"type":"if"
		},
		{
			"fromNodeId":"_alYbF",
			"priority":0,
			"skip":false,
			"toNodeId":"Vgkf8",
			"type":"next"
		},
		{
			"fromNodeId":"_Fv7Z1",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Vgkf8",
			"type":"next"
		},
		{
			"fromNodeId":"_NVT6s",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Vgkf8",
			"type":"next"
		},
		{
			"fromNodeId":"_xhGXo",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Vgkf8",
			"type":"next"
		},
		{
			"fromNodeId":"Vgkf8",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"tUH9u",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG",
			"type":"loop"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"1",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@1",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@1",
			"priority":0,
			"skip":false,
			"toNodeId":"fldPI",
			"type":"next"
		},
		{
			"fromNodeId":"fldPI",
			"priority":0,
			"skip":false,
			"toNodeId":"8VWu4",
			"type":"next"
		},
		{
			"fromNodeId":"8VWu4",
			"priority":0,
			"skip":false,
			"toNodeId":"3Hwx5",
			"type":"next"
		},
		{
			"fromNodeId":"3Hwx5",
			"priority":0,
			"skip":false,
			"toNodeId":"6bPpE",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"2",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@2",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@2",
			"priority":0,
			"skip":false,
			"toNodeId":"HaNjO",
			"type":"next"
		},
		{
			"fromNodeId":"HaNjO",
			"priority":0,
			"skip":false,
			"toNodeId":"_bhCWU",
			"type":"next"
		},
		{
			"fromNodeId":"_bhCWU",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_msCQz",
			"type":"if"
		},
		{
			"fromNodeId":"_msCQz",
			"priority":0,
			"skip":false,
			"toNodeId":"zYrhI",
			"type":"next"
		},
		{
			"fromNodeId":"_bhCWU",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"zYrhI",
			"type":"next"
		},
		{
			"fromNodeId":"zYrhI",
			"priority":0,
			"skip":false,
			"toNodeId":"UO3qW",
			"type":"next"
		},
		{
			"fromNodeId":"UO3qW",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"EFmE2",
			"type":"if"
		},
		{
			"fromNodeId":"EFmE2",
			"priority":0,
			"skip":false,
			"toNodeId":"5lLgx",
			"type":"next"
		},
		{
			"fromNodeId":"UO3qW",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"5lLgx",
			"type":"next"
		},
		{
			"fromNodeId":"5lLgx",
			"priority":0,
			"skip":false,
			"toNodeId":"XNshC",
			"type":"next"
		},
		{
			"fromNodeId":"XNshC",
			"priority":0,
			"skip":false,
			"toNodeId":"szphI",
			"type":"next"
		},
		{
			"fromNodeId":"szphI",
			"priority":0,
			"skip":false,
			"toNodeId":"_fcUPf",
			"type":"next"
		},
		{
			"fromNodeId":"_fcUPf",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_SS5fX",
			"type":"if"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"3",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@3",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@3",
			"priority":0,
			"skip":false,
			"toNodeId":"7fEMG",
			"type":"next"
		},
		{
			"fromNodeId":"7fEMG",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"_5nEDk",
			"type":"error"
		},
		{
			"fromNodeId":"7fEMG",
			"priority":0,
			"skip":false,
			"toNodeId":"i3bCK",
			"type":"next"
		},
		{
			"fromNodeId":"_5nEDk",
			"priority":0,
			"skip":false,
			"toNodeId":"i3bCK",
			"type":"next"
		},
		{
			"fromNodeId":"i3bCK",
			"priority":0,
			"skip":false,
			"toNodeId":"o8iCe",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"4",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@4",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@4",
			"priority":0,
			"skip":false,
			"toNodeId":"554WP",
			"type":"next"
		},
		{
			"fromNodeId":"554WP",
			"priority":0,
			"skip":false,
			"toNodeId":"X7c7Y",
			"type":"next"
		},
		{
			"fromNodeId":"X7c7Y",
			"priority":0,
			"skip":false,
			"toNodeId":"5Nf09",
			"type":"next"
		},
		{
			"fromNodeId":"5Nf09",
			"priority":0,
			"skip":false,
			"toNodeId":"i7WT1",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"5",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@5",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@5",
			"priority":0,
			"skip":false,
			"toNodeId":"AkF5A",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"6",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@6",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@6",
			"priority":0,
			"skip":false,
			"toNodeId":"ZfuAb",
			"type":"next"
		},
		{
			"fromNodeId":"ZfuAb",
			"priority":0,
			"skip":false,
			"toNodeId":"M5iSf",
			"type":"next"
		},
		{
			"fromNodeId":"M5iSf",
			"priority":0,
			"skip":false,
			"toNodeId":"v49du",
			"type":"next"
		},
		{
			"fromNodeId":"v49du",
			"priority":0,
			"skip":false,
			"toNodeId":"MRhi7",
			"type":"next"
		},
		{
			"fromNodeId":"MRhi7",
			"priority":0,
			"skip":false,
			"toNodeId":"_CGIzH",
			"type":"next"
		},
		{
			"fromNodeId":"_CGIzH",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_aV0yo",
			"type":"if"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"7",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@7",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@7",
			"priority":0,
			"skip":false,
			"toNodeId":"_XsQwP",
			"type":"next"
		},
		{
			"fromNodeId":"_XsQwP",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_1zdEi",
			"type":"if"
		},
		{
			"fromNodeId":"_1zdEi",
			"priority":0,
			"skip":false,
			"toNodeId":"UbCU5",
			"type":"next"
		},
		{
			"fromNodeId":"_XsQwP",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"UbCU5",
			"type":"next"
		},
		{
			"fromNodeId":"UbCU5",
			"priority":0,
			"skip":false,
			"toNodeId":"_hpzjQ",
			"type":"next"
		},
		{
			"fromNodeId":"_hpzjQ",
			"priority":0,
			"skip":false,
			"toNodeId":"stqlE",
			"type":"next"
		},
		{
			"fromNodeId":"stqlE",
			"priority":0,
			"skip":false,
			"toNodeId":"_rs4Co",
			"type":"next"
		},
		{
			"fromNodeId":"_rs4Co",
			"priority":0,
			"skip":false,
			"toNodeId":"_aRZom",
			"type":"next"
		},
		{
			"fromNodeId":"_aRZom",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_getwp",
			"type":"if"
		},
		{
			"fromNodeId":"_getwp",
			"priority":0,
			"skip":false,
			"toNodeId":"_huL8h",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"8",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@8",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@8",
			"priority":0,
			"skip":false,
			"toNodeId":"zLUNO",
			"type":"next"
		},
		{
			"fromNodeId":"zLUNO",
			"priority":0,
			"skip":false,
			"toNodeId":"D9avp",
			"type":"next"
		},
		{
			"fromNodeId":"D9avp",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"BpfSB",
			"type":"if"
		},
		{
			"fromNodeId":"BpfSB",
			"priority":0,
			"skip":false,
			"toNodeId":"_MOt9T",
			"type":"next"
		},
		{
			"fromNodeId":"_MOt9T",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_icYoa",
			"type":"if"
		},
		{
			"fromNodeId":"_icYoa",
			"priority":0,
			"skip":false,
			"toNodeId":"Cz0Vu",
			"type":"next"
		},
		{
			"fromNodeId":"_MOt9T",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"Cz0Vu",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"9",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@9",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@9",
			"priority":0,
			"skip":false,
			"toNodeId":"_IfQuF",
			"type":"next"
		},
		{
			"fromNodeId":"_IfQuF",
			"priority":0,
			"skip":false,
			"toNodeId":"_RQIPE",
			"type":"next"
		},
		{
			"fromNodeId":"_RQIPE",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_aB8Hs",
			"type":"if"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"10",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@10",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@10",
			"priority":0,
			"skip":false,
			"toNodeId":"_n0gqq",
			"type":"next"
		},
		{
			"fromNodeId":"_n0gqq",
			"priority":0,
			"skip":false,
			"toNodeId":"_QZQrw",
			"type":"next"
		},
		{
			"fromNodeId":"_QZQrw",
			"priority":0,
			"skip":false,
			"toNodeId":"_p2n2f",
			"type":"next"
		},
		{
			"fromNodeId":"_p2n2f",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_ymDMX",
			"type":"if"
		},
		{
			"fromNodeId":"_ymDMX",
			"priority":0,
			"skip":false,
			"toNodeId":"_XLkLV",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"11",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@11",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@11",
			"priority":0,
			"skip":false,
			"toNodeId":"_iHigf",
			"type":"next"
		},
		{
			"fromNodeId":"_iHigf",
			"priority":0,
			"skip":false,
			"toNodeId":"_NhjAm",
			"type":"next"
		},
		{
			"fromNodeId":"_NhjAm",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_A17jn",
			"type":"if"
		},
		{
			"fromNodeId":"_A17jn",
			"priority":0,
			"skip":false,
			"toNodeId":"_YO66G",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"12",
			"priority":0,
			"skip":false,
			"toNodeId":"L2HAG@12",
			"type":"branch"
		},
		{
			"fromNodeId":"L2HAG@12",
			"priority":0,
			"skip":false,
			"toNodeId":"_XMttw",
			"type":"next"
		},
		{
			"fromNodeId":"_XMttw",
			"priority":0,
			"skip":false,
			"toNodeId":"_QG5Zf",
			"type":"next"
		},
		{
			"fromNodeId":"_QG5Zf",
			"priority":0,
			"skip":false,
			"toNodeId":"_s1tzd",
			"type":"next"
		},
		{
			"fromNodeId":"_s1tzd",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_21YMV",
			"type":"if"
		},
		{
			"fromNodeId":"_21YMV",
			"priority":0,
			"skip":false,
			"toNodeId":"_ZZ2Wh",
			"type":"next"
		},
		{
			"fromNodeId":"6bPpE",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_SS5fX",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_fcUPf",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"o8iCe",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"i7WT1",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"AkF5A",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_aV0yo",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_CGIzH",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_huL8h",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_aRZom",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"Cz0Vu",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"D9avp",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_aB8Hs",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_RQIPE",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_XLkLV",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_p2n2f",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_YO66G",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_NhjAm",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_ZZ2Wh",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"_s1tzd",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"L2HAG",
			"name":"default",
			"priority":0,
			"skip":false,
			"toNodeId":"tUH9u",
			"type":"next"
		},
		{
			"fromNodeId":"tUH9u",
			"priority":0,
			"skip":false,
			"toNodeId":"S8DQ4",
			"type":"next"
		},
		{
			"fromNodeId":"S8DQ4",
			"priority":0,
			"skip":false,
			"toNodeId":"fLiz7",
			"type":"next"
		},
		{
			"fromNodeId":"fLiz7",
			"priority":0,
			"skip":false,
			"toNodeId":"_zc8P3",
			"type":"next"
		},
		{
			"fromNodeId":"_zc8P3",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_F2WJW",
			"type":"if"
		},
		{
			"fromNodeId":"_F2WJW",
			"priority":0,
			"skip":false,
			"toNodeId":"_KmzEO",
			"type":"next"
		},
		{
			"fromNodeId":"_KmzEO",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_4mRAv",
			"type":"if"
		},
		{
			"fromNodeId":"_KmzEO",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_V0cj7",
			"type":"next"
		},
		{
			"fromNodeId":"_4mRAv",
			"priority":0,
			"skip":false,
			"toNodeId":"_TsH7Z",
			"type":"next"
		},
		{
			"fromNodeId":"_V0cj7",
			"priority":0,
			"skip":false,
			"toNodeId":"_TsH7Z",
			"type":"next"
		},
		{
			"fromNodeId":"_TsH7Z",
			"priority":0,
			"skip":false,
			"toNodeId":"3ldPs",
			"type":"next"
		},
		{
			"fromNodeId":"_zc8P3",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"3ldPs",
			"type":"next"
		},
		{
			"fromNodeId":"3ldPs",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_Tummc",
			"type":"if"
		},
		{
			"fromNodeId":"_Tummc",
			"priority":0,
			"skip":false,
			"toNodeId":"_JcwU7",
			"type":"next"
		},
		{
			"fromNodeId":"_JcwU7",
			"priority":0,
			"skip":false,
			"toNodeId":"_i5VUC",
			"type":"next"
		},
		{
			"fromNodeId":"_i5VUC",
			"priority":0,
			"skip":false,
			"toNodeId":"_yqm12",
			"type":"next"
		},
		{
			"fromNodeId":"3ldPs",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_yqm12",
			"type":"next"
		},
		{
			"fromNodeId":"_yqm12",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_CWQa8",
			"type":"if"
		},
		{
			"fromNodeId":"_CWQa8",
			"priority":0,
			"skip":false,
			"toNodeId":"_2p2qr",
			"type":"next"
		},
		{
			"fromNodeId":"_2p2qr",
			"priority":0,
			"skip":false,
			"toNodeId":"_WsCnq",
			"type":"next"
		},
		{
			"fromNodeId":"_yqm12",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_WsCnq",
			"type":"next"
		},
		{
			"fromNodeId":"_WsCnq",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"_WhdRi",
			"type":"if"
		},
		{
			"fromNodeId":"_WhdRi",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"_o5rPB",
			"type":"next"
		},
		{
			"fromNodeId":"_WhdRi",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"5C2rR",
			"type":"if"
		},
		{
			"fromNodeId":"_o5rPB",
			"priority":0,
			"skip":false,
			"toNodeId":"5C2rR",
			"type":"next"
		},
		{
			"fromNodeId":"_WsCnq",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"5C2rR",
			"type":"next"
		}
	],
	"id":"6783248944ce135db1daace5",
	"lastModifiedBy":1,
	"lcName":"decision engine ",
	"modifiedTime":1747000716501,
	"name":"Decision Engine ",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":49,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"PleJz",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"type":{
							"type":"string",
							"title":"Type"
						},
						"queryToUser":{
							"type":"string",
							"title":"Query To User"
						},
						"multipleQueries":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Multiple Queries"
						},
						"actionsTaken":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Actions Taken"
						},
						"currentFlowCancelled":{
							"type":"boolean",
							"title":"Current Flow Cancelled"
						},
						"reasoning":{
							"type":"string",
							"title":"Reasoning"
						}
					},
					"additionalProperties":false,
					"required":[
						"reasoning"
					]
				},
				"setup":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"triggeredByAutomationId":{
							"type":"string",
							"title":"Triggered By Automation Id"
						},
						"triggerReason":{
							"type":"string",
							"title":"Trigger Reason"
						},
						"triggeredByExecutionId":{
							"type":"string",
							"title":"Triggered By Execution Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger from automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":117,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"MhGun",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"triggerFlow":{
							"type":"string",
							"title":"Trigger Flow"
						},
						"executeCurrentFlow":{
							"type":"string",
							"title":"Execute Current Flow"
						},
						"flowCancelled":{
							"type":"boolean",
							"title":"Flow Cancelled"
						},
						"triggerPostTopicSelection":{
							"type":"boolean",
							"title":"Trigger Post Topic Selection"
						},
						"topicNameToTrigger":{
							"type":"string",
							"title":"Topic Name To Trigger"
						},
						"retriggerReason":{
							"type":"string",
							"title":"Retrigger Reason"
						},
						"existingTopicStack":{
							"type":"string",
							"title":"Existing Topic Stack"
						},
						"decisionEngineModel":{
							"type":"string",
							"title":"Decision Engine Model"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"decisionEngineModel":"674a9f79c5aa130d6a86f91a",
				"flowCancelled":false
			},
			"outputSchema":{
				"type":"SCHEMA",
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"triggerFlow":{
							"type":"string",
							"title":"Trigger Flow"
						},
						"executeCurrentFlow":{
							"type":"string",
							"title":"Execute Current Flow"
						},
						"flowCancelled":{
							"type":"boolean",
							"title":"Flow Cancelled"
						},
						"triggerPostTopicSelection":{
							"type":"boolean",
							"title":"Trigger Post Topic Selection"
						},
						"topicNameToTrigger":{
							"type":"string",
							"title":"Topic Name To Trigger"
						},
						"retriggerReason":{
							"type":"string",
							"title":"Retrigger Reason"
						},
						"existingTopicStack":{
							"type":"string",
							"title":"Existing Topic Stack"
						},
						"decisionEngineModel":{
							"type":"string",
							"title":"Decision Engine Model"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"execute flow Variables",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":121,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"w9XRv",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"additionalProperties":false,
									"type":[
										"object",
										"string",
										"number",
										"boolean",
										"integer"
									],
									"properties":{}
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"multipleQueries",
				"ua:list_type":"STRING"
			},
			"outputSchema":{
				"type":"SCHEMA",
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"multipleQueries",
							"disableActions":true,
							"items":{
								"type":"string"
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1817,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"Rb6C1",
			"index":0,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"limit":20,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Conversation State",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_u7N2h",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _sUJgE.outputs.total }}",
						"filter":{
							"operator":"GTE",
							"value":"500"
						}
					},
					{
						"property":"{{ Rb6C1.outputs.properties.errorCount }}",
						"filter":{
							"operator":"GTE",
							"value":"3"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":34,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_u7N2h@qcV8Q-1@y",
			"id":"_GFo2R",
			"index":0,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"yes":{
							"type":"string",
							"title":"Yes"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"jsonString":"ererewere"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":120,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"b10Jg",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						},
						"hasAttachments":{
							"type":"boolean",
							"title":"Has Attachments"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"hasAttachments":false
			},
			"outputSchema":{
				"type":"SCHEMA",
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						},
						"hasAttachments":{
							"type":"boolean",
							"title":"Has Attachments"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"query",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":117,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"JwEtN",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"Llm Response"
						},
						"reasoning":{
							"type":"string",
							"title":"Reasoning"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"type":"SCHEMA",
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"Llm Response"
						},
						"reasoning":{
							"type":"string",
							"title":"Reasoning"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"llm Response variables",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":11,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"65tnh",
			"index":0,
			"inputs":{
				"automationId":"6783284f44ce135db1dab279",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"agentId":"{{ Rb6C1.outputs.properties.currentAIAgentId }}"
				}
			},
			"skip":false,
			"subTitle":"prompt builder",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":80,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_q2m8t",
			"index":0,
			"inputs":{
				"automationId":"66ac70650f725f5b425d12d8",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"logProbs":false,
					"caseId":"{{ PleJz.outputs.caseId }}",
					"aiAgentId":"{{ Rb6C1.outputs.properties.currentAIAgentId }}",
					"message":{
						"ua:type":"mappedArray",
						"items":{
							"content":{
								"ua:type":"mappedArray",
								"items":{
									"type":"{{ 65tnh.outputs.messages[0].content[0].type }}",
									"text":"{{ 65tnh.outputs.messages[0].content[0].text }}"
								},
								"source":"{{ 65tnh.outputs.messages[0].content }}"
							},
							"role":"{{ 65tnh.outputs.messages[0].role }}"
						},
						"source":"{{ 65tnh.outputs.messages }}"
					},
					"temperature":0,
					"maxTokens":4096,
					"modelId":"{{ MhGun.outputs.decisionEngineModel }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":183,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"2yji0",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ JwEtN.outputs.llmResponse }}",
						"value":"{{ _q2m8t.outputs.llmResponse }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"2Yc1f",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"action":{
										"type":"string",
										"title":"Action"
									},
									"arguments":{
										"type":"array",
										"items":{
											"type":"string"
										},
										"title":"Arguments"
									}
								},
								"additionalProperties":false
							},
							"title":"Result",
							"required":[]
						},
						"retriggerDE":{
							"type":"boolean",
							"title":"Retrigger DE"
						},
						"internalContext":{
							"type":"string",
							"title":"Internal Context"
						},
						"fixedOutput":{
							"type":"boolean",
							"title":"Fixed Output"
						},
						"thought":{
							"type":"string",
							"title":"Thought"
						},
						"publishThought":{
							"type":"boolean",
							"title":"Publish Thought"
						}
					},
					"additionalProperties":false,
					"required":[
						"thought",
						"publishThought"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"Llm Response"
						},
						"triggerReason":{
							"type":"string",
							"title":"Trigger Reason"
						},
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"// import groovy.json.JsonSlurper\n// import groovy.json.JsonOutput \n// def jsonSlurper = new JsonSlurper()\n// def input = jsonSlurper.parse(new File(\"/Users/navaneshwar/Downloads/groovy/extract.json\"))\n// def llmResponse = input.llmResponse\n// def conversationState = input.conversationState\n// def triggerReason = input.triggerReason;\n// def sortingEnabled = input.sortingEnabled;\n\n\nreturn extractFunctions(llmResponse, conversationState);\n\ndef extractFunctions(input, conversationState) {\n    // def jsonSlurper = new JsonSlurper()\n\n def toReturn = [:]\n\n    // Regular expression to match specific function names (startflow or setslot) and their arguments\n    def matcher1 = input =~ /Thought:(.*?)\\n{1,}Actions:/\n    def thoughtContent = matcher1 ? matcher1[0][1].trim() : \"\"\n    toReturn.put(\"thought\", thoughtContent)\n    input = input.substring(thoughtContent.size())\n    def pattern = /(StartFlow|SetSlot|ChitChat|Clarify|SetTopic|CancelFlow)\\(([^)]*)\\)/\n    pattern = /(StartFlow|SetSlot|ChitChat|Clarify|SetTopic|CancelFlow|ExecuteFlow|SwitchTopic)\\((.*)\\)(?=\\n|$)/\n    pattern = /(StartFlow|SetSlot|ChitChat|Clarify|Answer|SetTopic|CancelFlow|ExecuteFlow|SwitchTopic|EndTopic|ReferFromKnowledge|ReferFromPreviousSessions|NoPendingTopics|InvokeAgent)\\(([\\s\\S]*?)\\)(?=\\n|$)/\n     pattern = /(StartFlow|SetSlot|ChitChat|Clarify|Answer|SetTopic|CancelFlow|ExecuteFlow|SwitchTopic|EndTopic|ReferFromKnowledge|ReferFromPreviousSessions|NoPendingTopics|InvokeAgent)\\(([\\s\\S]*?)\\)(?=\\n{1,}StartFlow|\\n{1,}SetSlot|\\n{1,}ChitChat|\\n{1,}Clarify|\\n{1,}Answer|\\n{1,}SetTopic|\\n{1,}CancelFlow|\\n{1,}ExecuteFlow|\\n{1,}SwitchTopic|\\n{1,}EndTopic|\\n{1,}ReferFromKnowledge|\\n{1,}ReferFromPreviousSessions|\\n{1,}NoPendingTopics|\\n{1,}InvokeAgent|$)/\n    def matcher = input =~ pattern\n    def predictedActionsList = []\n    def fixedOutput = false;\n    def flowNotFound = false;\n    if(conversationState.currentFlow == null) {\n        flowNotFound = true;\n    }\n    def internalContext = \"\";\n   \n    def predictedActionKeyVsIndex = [:]\n\n    int i=0;\n    for(match in matcher) {\n        def functionName = match[1]\n        def list = predictedActionKeyVsIndex.get(functionName)\n        if(list == null) {\n            list = []\n        }\n        list.add(i)\n        i++\n        predictedActionKeyVsIndex.put(functionName, list)\n        def arguments = []\n        if(functionName == \"SetTopic\"){\n            def topicName = match[2]\n            arguments.add(topicName)\n        } else {\n            arguments = match[2].split(/\\s*,\\s*/).toList()\n        }\n        def cleanedList = arguments.collect { it.replaceAll(/^'(.*)'$/, '$1') }\n        if(triggerReason == \"PREFILLING_SLOTS\"){\n            if(functionName == \"StartFlow\" || functionName == \"ExecuteFlow\" || functionName == \"CancelFlow\") {\n                fixedOutput = true;\n                continue;\n            }\n        }\n        predictedActionsList << [action: functionName, arguments: cleanedList]\n    }\n    \n    // println(predictedActionsList)\n    // println(predictedActionKeyVsIndex)\n\n\n    //Fixes\n   \n\n    def iterator = predictedActionsList.iterator()\n    def stopIteration = false;\n// Use the iterator to traverse the list\ndef currentFlow = conversationState.currentFlow;\nwhile (iterator.hasNext()) {\n    def element = iterator.next()\n    if(stopIteration == true && !(element.action == \"SetSlot\" && (triggerReason == \"FILLING_SLOTS\" || triggerReason == \"PREFILLING_SLOTS\"))){\n        fixedOutput = true;\n        iterator.remove();\n        continue;\n    }\n    // Remove the element if it meets a condition\n    if(binding.hasVariable('availableFlows')) {\n        conversationState.put(\"availableFlows\", availableFlows)\n    }\n    def flowMap = conversationState?.availableFlows?.collectEntries { flow ->\n    [(flow.name.replaceAll(/^'|'$/, '').trim()): flow]  // The key is the name, and the value is the entire object\n}\n    if (element.action  == \"StartFlow\" || element.action  == \"ExecuteFlow\") {\n        if(currentFlow != null) {\n            flowNotFound = false;\n        }\n        def flowName = element.arguments?.get(0)\n        def flow = flowMap?.get(flowName.replaceAll(/^'|'$/, '').trim())\n        if(flow == null && flowName!=\"collect_slot_flow\") {\n            iterator.remove()\n            flowNotFound = true;\n            fixedOutput = true;\n            predictedActionKeyVsIndex.remove(\"StartFlow\")\n            predictedActionKeyVsIndex.remove(\"ExecuteFlow\")\n            continue;\n        } else {\n            if(element.action == \"StartFlow\"){\n                currentFlow = flow.id\n                flowNotFound = false\n            } else if(element.action == \"ExecuteFlow\") {\n                if(currentFlow != flow.id){\n                     iterator.remove()\n                     flowNotFound = true;\n                     continue;\n                }\n                stopIteration = true;\n            }\n        }\n\n    }\n\n    if(element.action == \"Clarify\"){\n         stopIteration = true;\n    }\n\n     if(element.action == \"ReferFromKnowledge\"){\n        if(triggerReason == \"KNOWLEDGE_FETCH_COMPLETED\") {\n            iterator.remove()\n            continue;\n        }\n         stopIteration = true;\n    }\n\n    if(element.action == \"ReferFromPreviousSessions\") {\n        if(triggerReason == \"PREVIOUS_SESSION_FETCH_COMPLETED\") {\n            iterator.remove();\n            continue;\n        }\n        stopIteration = true;\n    }\n\n      if(element.action == \"InvokeAgent\") {\n        stopIteration = true;\n    }\n\n     if(element.action == \"SetSlot\" && flowNotFound == true) {\n        iterator.remove()\n        continue;\n    }\n\n    \n\n    if(element.action == \"InvokeAgent\"){\n         def agentName = element.arguments?.get(0)\n         def aiAgentsMap = conversationState?.availableAgents?.collectEntries { agent ->\n    [(agent.name.replaceAll(/^'|'$/, '').trim()): agent]   \n      }\n        def agent = aiAgentsMap?.get(agentName.replaceAll(/^'|'$/, '').trim())\n        if(agent == null) {\n            iterator.remove()\n            flowNotFound = true;\n            fixedOutput = true;\n        }\n    }\n\n     if(element.action == \"SwitchTopic\" || element.action == \"SetTopic\") {\n        def currentTopic = conversationState.currentTopic\n        def topicToSwitch = element.arguments.get(0)\n\n        if(currentTopic.equals(topicToSwitch)) {\n            fixedOutput = true;\n            iterator.remove()\n            continue;\n         } else {\n            stopIteration = true\n         }\n\n    }\n    //  println(element.action)\n    //  println(\" done and output is \")  \n    //  println(predictedActionsList)\n    //       println(\" ------------- \")  \n\n}\n\n\n    // println(flowNotFound)\n    // println(predictedActionsList)\n    toReturn.put(\"result\", predictedActionsList);\n   \n    \n    //sorting\n    if(binding.hasVariable('sortingEnabled') && sortingEnabled == \"true\") {\n        if(predictedActionKeyVsIndex.containsKey(\"StartFlow\")){\n        def index = predictedActionKeyVsIndex.get(\"StartFlow\").get(0)\n        def item = predictedActionsList.remove(index)\n        predictedActionsList.add(0, item)\n        }\n\n      if(predictedActionKeyVsIndex.containsKey(\"CancelFlow\")){\n        index = predictedActionKeyVsIndex.get(\"CancelFlow\").get(0)\n        item = predictedActionsList.remove(index)\n        predictedActionsList.add(0, item)\n      }\n    }\n    def predictedActionsKeyset = predictedActionKeyVsIndex.keySet()\n    predictedActionsKeyset.remove(\"StartFlow\")\n    predictedActionsKeyset.remove(\"CancelFlow\")\n    predictedActionsKeyset.remove(\"SetSlot\")\n    if(predictedActionsKeyset.isEmpty() && \"PREFILLING_SLOTS\" != triggerReason && predictedActionKeyVsIndex.containsKey(\"StartFlow\")) {\n        toReturn.put(\"retriggerDE\", true);\n    } else {\n        toReturn.put(\"retriggerDE\", false);\n    }\n\n\n    //internal context\n    def publishThought = false;\n    for(predictedAction in predictedActionsList) {\n        def functionName = predictedAction.action\n         if(functionName != \"ChitChat\" && functionName!= \"Clarify\" && functionName!= \"Answer\"){\n             internalContext += predictedAction.action + \"(\" +  predictedAction.arguments.join(\",\") + \")\"\n             if(functionName != \"EndTopic\") {\n                publishThought = true\n             }\n        }\n    }\n    toReturn.put(\"internalContext\", internalContext)\n    toReturn.put(\"fixedOutput\", fixedOutput)\n        toReturn.put(\"publishThought\", publishThought)\n\n    //println(JsonOutput.toJson(toReturn))\n    return toReturn\n}\n\n",
				"parameters":{
					"sortingEnabled":"false",
					"llmResponse":"{{ JwEtN.outputs.llmResponse }}",
					"triggerReason":"{{ PleJz.outputs.triggerReason }}",
					"conversationState":"{{ Rb6C1.outputs.properties }}"
				}
			},
			"skip":false,
			"subTitle":"Extract Action",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":5,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_UPQqe",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"debug_agent",
				"updateFields":[
					{
						"fieldName":"properties.events",
						"actionType":"ADD",
						"setValue":"{{ PleJz.outputs.triggerReason }} -> {{ __RUN__.outputs.executionId }} ->{{ 2Yc1f.outputs.result.internalContext }} -> fixedOutput -> {{ 2Yc1f.outputs.result.fixedOutput }}"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"debug",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_lNraX",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2Yc1f.outputs.result.result[0].action }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.record.content.text"
				]
			},
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":11,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lNraX@qcV8Q-1@y",
			"id":"_AjtSP",
			"index":0,
			"inputs":{
				"object_type":"ai_agent_internal_context",
				"record":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"role":"assistant",
					"aiAgentId":"{{ Rb6C1.outputs.properties.currentAIAgentId }}",
					"content":{
						"text":"[VERY IMPORTANT INSTRUCTION]. {{ _q2m8t.outputs.llmResponse }} is a wrong response consider carefully twice before suggesting next actions "
					}
				}
			},
			"skip":false,
			"subTitle":"context",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lNraX@qcV8Q-1@y",
			"id":"_VNuKN",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"updateFields":[
					{
						"fieldName":"properties.errorCount",
						"actionType":"SET",
						"setValue":"=({{ Rb6C1.outputs.properties.errorCount }} + 1)"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":11,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lNraX@qcV8Q-1@y",
			"id":"_SUXLn",
			"index":0,
			"inputs":{
				"automationId":"66e5ee3762b75407b264a16f",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}",
					"triggeredByAutomationId":"{{ __RUN__.outputs.workflowId }}",
					"caseId":"{{ PleJz.outputs.caseId }}",
					"triggerReason":"RETRIGGER_DUE_TO_EMPTY_RESPONSE"
				}
			},
			"skip":false,
			"subTitle":"trigger DE",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":11,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lNraX@qcV8Q-1@y",
			"id":"_A7pgn",
			"index":0,
			"inputs":{
				"result":{
					"type":"SUB_FLOW_SUCCESSFUL"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":54,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_xhGXo",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2Yc1f.outputs.result.internalContext }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"=LEN({{ 2Yc1f.outputs.result.internalContext }})",
						"filter":{
							"operator":"GT",
							"value":"0"
						}
					},
					{
						"property":"{{ PleJz.outputs.triggerReason }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"PREFILLING_SLOTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2056,
				"resourceName":"storage_by_unifyapps_create_record",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_xhGXo@qcV8Q-1@y",
			"id":"_SGmLG",
			"index":0,
			"inputs":{
				"object_type":"ai_agent_internal_context",
				"record":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"content":{
						"text":"{{ 2Yc1f.outputs.result.internalContext }}"
					},
					"role":"assistant",
					"aiAgentId":"{{ Rb6C1.outputs.properties.currentAIAgentId }}"
				}
			},
			"skip":false,
			"subTitle":"Internal Context",
			"title":"Create record",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_xhGXo@qcV8Q-1@y",
			"id":"_NVT6s",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2Yc1f.outputs.result.publishThought }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_NVT6s@_xhGXo@qcV8Q-1@y@y",
			"id":"_Fv7Z1",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2Yc1f.outputs.result.thought }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"=LEN({{ 2Yc1f.outputs.result.thought }})",
						"filter":{
							"operator":"GTE",
							"value":"1"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"conv_ai_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"conv_ai_by_unifyapps_publish_response",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_Fv7Z1@_NVT6s@_xhGXo@qcV8Q-1@y@y@y",
			"id":"_alYbF",
			"index":0,
			"inputs":{
				"callableInterfaceId":"__ua__publish_response_interface",
				"parameters":{
					"responses":[
						{
							"language":"en",
							"content":"{{ 2Yc1f.outputs.result.thought }}"
						}
					],
					"endConversation":false,
					"temporaryMessage":true,
					"publishToEndUser":true,
					"caseId":"{{ PleJz.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Conversation AI by UnifyApps",
			"title":"Publish Response",
			"type":"CALL_INTERFACE_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":117,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"Vgkf8",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"ui:submitButtonOptions":{
						"norender":true
					}
				},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"type":{
							"type":"string",
							"title":"Type"
						},
						"botResponse":{
							"type":"string",
							"title":"Bot Response"
						}
					},
					"required":[]
				}
			},
			"inputs":{},
			"outputSchema":{
				"type":"SCHEMA",
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"type":{
							"type":"string",
							"title":"Type"
						},
						"botResponse":{
							"type":"string",
							"title":"Bot Response"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":90,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"tUH9u",
			"index":0,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ 2Yc1f.outputs.result.result }}"
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"branch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"tUH9u@qcV8Q-1@l",
			"id":"L2HAG",
			"index":0,
			"inputs":{
				"branches":[
					{
						"id":"1",
						"inputs":{
							"name":"Slot",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"SetSlot"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"2",
						"inputs":{
							"name":"Start Flow",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"StartFlow"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"3",
						"inputs":{
							"name":"Cancel Flow",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"CancelFlow"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"4",
						"inputs":{
							"name":"clarify",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Clarify"
										}
									}
								],
								"operator":"OR"
							}
						}
					},
					{
						"id":"5",
						"inputs":{
							"name":"SkipQuestion",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"SkipQuestion"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"6",
						"inputs":{
							"name":"ChitChat",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"ChitChat"
										}
									},
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"Answer"
										}
									}
								],
								"operator":"OR"
							}
						}
					},
					{
						"id":"7",
						"inputs":{
							"name":"setTopic",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"SetTopic"
										}
									},
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"SwitchTopic"
										}
									}
								],
								"operator":"OR"
							}
						}
					},
					{
						"id":"8",
						"inputs":{
							"name":"Execute Flow",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"ExecuteFlow"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"9",
						"inputs":{
							"name":"EndTopic",
							"conditions":{
								"filters":[
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"EndTopic"
										}
									},
									{
										"property":"{{ tUH9u.outputs.item.action }}",
										"filter":{
											"operator":"EQUAL",
											"value":"NoPendingTopics"
										}
									}
								],
								"operator":"OR"
							}
						}
					},
					{
						"id":"10",
						"inputs":{
							"name":"Refer From Knowledge",
							"conditions":{
								"filters":[
									{
										"property":"ReferFromKnowledge",
										"filter":{
											"operator":"EQUAL",
											"value":"{{ tUH9u.outputs.item.action }}"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"11",
						"inputs":{
							"name":"Refer from Prev Sessions",
							"conditions":{
								"filters":[
									{
										"property":"ReferFromPreviousSessions",
										"filter":{
											"operator":"EQUAL",
											"value":"{{ tUH9u.outputs.item.action }}"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"12",
						"inputs":{
							"name":"Invoke Another Agent",
							"conditions":{
								"filters":[
									{
										"property":"InvokeAgent",
										"filter":{
											"operator":"EQUAL",
											"value":"{{ tUH9u.outputs.item.action }}"
										}
									}
								],
								"operator":"AND"
							}
						}
					},
					{
						"id":"default"
					}
				]
			},
			"skip":false,
			"subTitle":"Branch",
			"title":"",
			"type":"BRANCH"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":35,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@1",
			"id":"L2HAG@1",
			"index":0,
			"inputs":{
				"name":"Slot",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"SetSlot"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1817,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@1",
			"id":"fldPI",
			"index":0,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"limit":20,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Conversation State",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@1",
			"id":"8VWu4",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"updatedFlowSlots":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Updated Flow Slots"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"slotArguments":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Slot Arguments"
						},
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						},
						"currentFlow":{
							"type":"string",
							"title":"Current Flow"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"\ntry {\n    def activeFlowVsSlots = conversationState.activeFlowVsSlots\nif(activeFlowVsSlots == null) {\n    activeFlowVsSlots = [:]\n}\ndef slots = conversationState.activeFlowVsSlots?.get(currentFlow)\nif(slots == null) {\n    slots = [:]\n}\nslots.put(slotArguments.get(0), slotArguments.subList(1,slotArguments.size()).join(\",\"))\nactiveFlowVsSlots.put(currentFlow, slots)\nreturn [\"updatedFlowSlots\" : activeFlowVsSlots, \"success\":true]\n} catch(Exception e) {\n    return [\"updatedFlowSlots\" : conversationState.activeFlowVsSlots, \"success\":false]\n}\n\n",
				"isAsync":false,
				"parameters":{
					"slotArguments":{
						"source":"{{ tUH9u.outputs.item.arguments }}",
						"ua:type":"mappedArray",
						"items":"{{ tUH9u.outputs.item.arguments[0] }}"
					},
					"conversationState":"{{ fldPI.outputs.properties }}",
					"currentFlow":"{{ fldPI.outputs.properties.currentFlow }}"
				}
			},
			"skip":false,
			"subTitle":"update Flow slots",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1817,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@1",
			"id":"3Hwx5",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"updateFields":[
					{
						"fieldName":"properties.activeFlowVsSlots",
						"actionType":"SET",
						"setValue":"{{ 8VWu4.outputs.result.updatedFlowSlots }}"
					}
				],
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@1",
			"id":"6bPpE",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"SLOT_FILLED"
					}
				]
			},
			"skip":false,
			"subTitle":"SLOT_FILLED",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":35,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"L2HAG@2",
			"index":0,
			"inputs":{
				"name":"Start Flow",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"StartFlow"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"HaNjO",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"params":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Params"
						},
						"flowId":{
							"type":"string",
							"title":"Flow Id"
						},
						"flowName":{
							"type":"string",
							"title":"Flow Name"
						},
						"failed":{
							"type":"boolean",
							"title":"Failed"
						}
					},
					"additionalProperties":false,
					"required":[
						"failed"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"availableFlows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Available Flows"
						},
						"flowName":{
							"type":"string",
							"title":"Flow Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"if(!binding.hasVariable('availableFlows')) {\n return [\"failed\":true]\n}\ndef flowMap = availableFlows.collectEntries { flow ->\n    [(flow.name.replaceAll(/^'|'$/, '').trim()): flow]  \n}\ndef flow = flowMap.get(flowName)\nif(flow == null) {\n    flowName = flowName.replaceAll(/^'|'$/, '').trim()\n    flow = flowMap.get(flowName)\n}\nif(flow == null) {\n    return [\"failed\":true]\n}\nreturn [\"params\":[\"caseId\":caseId], \"flowId\":flow.id, \"flowName\":flow.name]",
				"isAsync":false,
				"parameters":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"availableFlows":{
						"source":"{{ Rb6C1.outputs.properties.availableFlows }}",
						"ua:type":"mappedArray",
						"items":"{{ Rb6C1.outputs.properties.availableFlows[0] }}"
					},
					"flowName":"{{ tUH9u.outputs.item.arguments[0] }}"
				}
			},
			"skip":false,
			"subTitle":"Get payload and flowId",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":4,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"_bhCWU",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ HaNjO.outputs.result.failed }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":4,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_bhCWU@L2HAG@tUH9u@qcV8Q-1@l@2@y",
			"id":"_msCQz",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1817,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"zYrhI",
			"index":0,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"page":{
					"offset":0,
					"limit":20
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"Conversation State",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":50,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"UO3qW",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ zYrhI.outputs.properties.currentFlow }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ HaNjO.outputs.result.flowId }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":50,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"UO3qW@L2HAG@tUH9u@qcV8Q-1@l@2@y",
			"id":"EFmE2",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"5lLgx",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"activeFlowStack":{
							"type":"string",
							"title":"Active Flow Stack"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						},
						"flowId":{
							"type":"string",
							"title":"Flow Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def flowStackStr = conversationState.activeFlowStack;\nList activeFlowStack = []\nif(flowStackStr != null){\n    activeFlowStack = com.unifyapps.infra.utils.JsonUtils.fromJson(flowStackStr, List.class)\n}\nactiveFlowStack.add(0, flowId)\n return [\"activeFlowStack\": com.unifyapps.infra.utils.JsonUtils.toJson(activeFlowStack)]\n\n",
				"isAsync":false,
				"parameters":{
					"conversationState":"{{ Rb6C1.outputs.properties }}",
					"flowId":"{{ HaNjO.outputs.result.flowId }}"
				}
			},
			"skip":false,
			"subTitle":"populate flow stack",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1823,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"XNshC",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"updateFields":[
					{
						"fieldName":"properties.currentFlow",
						"actionType":"SET",
						"setValue":"{{ HaNjO.outputs.result.flowId }}"
					},
					{
						"fieldName":"properties.activeFlowStack",
						"actionType":"SET",
						"setValue":"{{ 5lLgx.outputs.result.activeFlowStack }}"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"szphI",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.triggerFlow }}",
						"value":"{{ HaNjO.outputs.result.flowName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"collect flow to trigger",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":9,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@2",
			"id":"_fcUPf",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2Yc1f.outputs.result.retriggerDE }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":9,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_fcUPf@L2HAG@tUH9u@qcV8Q-1@l@2@y",
			"id":"_SS5fX",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.retriggerReason }}",
						"value":"RETRIGGER_DUE_TO_INCOMPLETE_RESPONSE"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":35,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@3",
			"id":"L2HAG@3",
			"index":0,
			"inputs":{
				"name":"Cancel Flow",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"CancelFlow"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@3",
			"id":"7fEMG",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"activeFlowStack":{
							"type":"string",
							"title":"Active Flow Stack"
						},
						"cancelledFlowName":{
							"type":"string",
							"title":"Cancelled Flow Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						},
						"flowId":{
							"type":"string",
							"title":"Flow Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"def flowIdMap = conversationState.availableFlows.collectEntries { flow ->\n    [(flow.id): flow]  // The key is the name, and the value is the entire object\n}\ndef flow = flowIdMap.get(flowId)\ndef flowStack = conversationState.activeFlowStack;\ndef flowStackList;\nif(flowStack == null){\n    flowStackList = []\n} else {\n    flowStackList = flowStack.split(\",\").toList()\n    flowStackList.remove(flowId)\n}\n return [\"activeFlowStack\": flowStackList.join(\",\"), \"cancelledFlowName\": flow?.name]\n\n",
				"isAsync":false,
				"parameters":{
					"conversationState":"{{ Rb6C1.outputs.properties }}",
					"flowId":"{{ Rb6C1.outputs.properties.currentFlow }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL"
			},
			"skip":false,
			"subTitle":"populate flow stack",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":1,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"7fEMG@L2HAG@tUH9u@qcV8Q-1@l@3@error",
			"id":"_5nEDk",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1860,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@3",
			"id":"i3bCK",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"updateFields":[
					{
						"fieldName":"properties.activeFlowStack",
						"actionType":"SET",
						"setValue":"{{ 7fEMG.outputs.result.activeFlowStack }}"
					}
				],
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@3",
			"id":"o8iCe",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"RESPOND_TO_USER"
					},
					{
						"source":"{{ Vgkf8.outputs.botResponse }}",
						"value":"successfully cancelled{{ 7fEMG.outputs.result.cancelledFlowName }}"
					},
					{
						"source":"{{ MhGun.outputs.flowCancelled }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":35,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@4",
			"id":"L2HAG@4",
			"index":0,
			"inputs":{
				"name":"clarify",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Clarify"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@4",
			"id":"554WP",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"ans":{
							"type":"string",
							"title":"Ans"
						},
						"multipleQueries":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Multiple Queries"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"args":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Args"
						},
						"answerList":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Answer List"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"def ans = args.join(\",\")\ndef ansList = []\nif(binding.hasVariable('answerList')) {\n    ansList = answerList\n}\nansList.add(ans)\nreturn [\"multipleQueries\" : ansList, \"ans\": ans]\n",
				"isAsync":false,
				"parameters":{
					"args":{
						"source":"{{ tUH9u.outputs.item.arguments }}",
						"ua:type":"mappedArray",
						"items":"{{ tUH9u.outputs.item.arguments[0] }}"
					},
					"answerList":{
						"source":"{{ w9XRv.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ w9XRv.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@4",
			"id":"X7c7Y",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"REQUEST_CLARIFICATION_FROM_USER"
					},
					{
						"source":"{{ Vgkf8.outputs.botResponse }}",
						"value":"{{ Vgkf8.outputs.botResponse }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":89,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@4",
			"id":"5Nf09",
			"index":0,
			"inputs":{
				"listName":"{{ w9XRv.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":66,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@4",
			"id":"i7WT1",
			"index":0,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ 554WP.outputs.result.multipleQueries }}",
					"items":"{{ 554WP.outputs.result.multipleQueries[0] }}"
				},
				"listName":"{{ w9XRv.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":35,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@5",
			"id":"L2HAG@5",
			"index":0,
			"inputs":{
				"name":"SkipQuestion",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"SkipQuestion"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@5",
			"id":"AkF5A",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"SLOT_FILLED"
					}
				]
			},
			"skip":false,
			"subTitle":"SLOT_FILLED",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":36,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@6",
			"id":"L2HAG@6",
			"index":0,
			"inputs":{
				"name":"ChitChat",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"ChitChat"
							}
						},
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"Answer"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@6",
			"id":"ZfuAb",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"ans":{
							"type":"string",
							"title":"Ans"
						},
						"multipleQueries":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Multiple Queries"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"args":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Args"
						},
						"answerList":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Answer List"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def ans = args.join(\",\")\ndef ansList = []\nif(binding.hasVariable('answerList')) {\n    ansList = answerList\n}\nansList.add(ans)\nreturn [\"multipleQueries\" : ansList, \"ans\": ans]\n",
				"isAsync":false,
				"parameters":{
					"args":{
						"source":"{{ tUH9u.outputs.item.arguments }}",
						"ua:type":"mappedArray",
						"items":"{{ tUH9u.outputs.item.arguments[0] }}"
					},
					"answerList":{
						"source":"{{ w9XRv.outputs.items }}",
						"ua:type":"mappedArray",
						"items":"{{ w9XRv.outputs.items[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@6",
			"id":"M5iSf",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"RESPOND_TO_USER"
					},
					{
						"source":"{{ Vgkf8.outputs.botResponse }}",
						"value":"{{ Vgkf8.outputs.botResponse }}"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":89,
				"resourceName":"variable_by_unifyapps_clear_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@6",
			"id":"v49du",
			"index":0,
			"inputs":{
				"listName":"{{ w9XRv.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Remove all items from list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":66,
				"resourceName":"variable_by_unifyapps_add_items_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@6",
			"id":"MRhi7",
			"index":0,
			"inputs":{
				"insertLocation":"END",
				"itemsToAdd":{
					"ua:type":"mappedArray",
					"source":"{{ ZfuAb.outputs.result.multipleQueries }}",
					"items":"{{ ZfuAb.outputs.result.multipleQueries[0] }}"
				},
				"listName":"{{ w9XRv.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Add items to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":9,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@6",
			"id":"_CGIzH",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ Rb6C1.outputs.properties.triggerDetails.triggeredByAgentDetails.waitingInstanceId }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":10,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_CGIzH@L2HAG@tUH9u@qcV8Q-1@l@6@y",
			"id":"_aV0yo",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":36,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"L2HAG@7",
			"index":0,
			"inputs":{
				"name":"setTopic",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"SetTopic"
							}
						},
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"SwitchTopic"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":1,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"_XsQwP",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ PleJz.outputs.triggerReason }}",
						"filter":{
							"operator":"EQUAL",
							"value":"TOPIC_EXECUTION"
						}
					},
					{
						"property":"{{ Rb6C1.outputs.properties.currentTopic }}",
						"filter":{
							"operator":"EQUAL",
							"value":"{{ tUH9u.outputs.item.arguments[0] }}"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":1,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XsQwP@L2HAG@tUH9u@qcV8Q-1@l@7@y",
			"id":"_1zdEi",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":62,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"UbCU5",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"TOPIC_MATCHED"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.args.items",
					"root.parameters.availableTopics.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"_hpzjQ",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"topicStack":{
							"type":"string",
							"title":"Topic Stack"
						},
						"topicNameMismatch":{
							"type":"boolean",
							"title":"Topic Name Mismatch"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"args":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Args"
						},
						"availableTopics":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Available Topics"
						},
						"existingTopicStack":{
							"type":"string",
							"title":"Existing Topic Stack"
						}
					},
					"additionalProperties":false,
					"required":[
						"existingTopicStack"
					]
				},
				"compile_static":false,
				"code":"def topics = []\nif(binding.hasVariable('existingTopicStack')){\n  topics = com.unifyapps.infra.utils.JsonUtils.fromJson(existingTopicStack, List.class)\n}\ndef topicNameMismatch = false\nif (binding.hasVariable('availableTopics')) {\n  def topicNameMap = availableTopics.collectEntries {\n    topic -> [(topic.name.replaceAll(/^'|'$/, '').trim()): topic]\n  }\n  def topicName = args.join(\",\").replaceAll(/^'|'$/, '').trim()\n    def topic = topicNameMap.get(topicName)\n    if (topic == null) {\n      topicNameMismatch = true\n    } else {\n      topics.add(topic.id)\n    }\n}\n\nreturn [\"topicStack\":com.unifyapps.infra.utils.JsonUtils.toJson(topics), \"topicNameMismatch\":topicNameMismatch]",
				"isAsync":false,
				"parameters":{
					"args":{
						"source":"{{ tUH9u.outputs.item.arguments }}",
						"ua:type":"mappedArray",
						"items":"{{ tUH9u.outputs.item.arguments[0] }}"
					},
					"availableTopics":{
						"source":"{{ Rb6C1.outputs.properties.availableTopics }}",
						"ua:type":"mappedArray",
						"items":"{{ Rb6C1.outputs.properties.availableTopics[0] }}"
					},
					"existingTopicStack":"{{ MhGun.outputs.existingTopicStack }}"
				}
			},
			"skip":false,
			"subTitle":"prepare topic stack",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":1860,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"stqlE",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"updateFields":[
					{
						"fieldName":"properties.status",
						"actionType":"SET",
						"setValue":"TASK_SELECTED"
					},
					{
						"fieldName":"properties.topicStack",
						"actionType":"SET",
						"setValue":"{{ _hpzjQ.outputs.result.topicStack }}"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":65,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"_rs4Co",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.triggerPostTopicSelection }}",
						"value":true
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":0,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@7",
			"id":"_aRZom",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ tUH9u.outputs.item.action }}",
						"filter":{
							"operator":"EQUAL",
							"value":"SwitchTopic"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_aRZom@L2HAG@tUH9u@qcV8Q-1@l@7@y",
			"id":"_getwp",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.flowCancelled }}",
						"value":true
					},
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"FLOW_CANCELLED"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"break",
				"resourceVersion":1,
				"resourceName":"break",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_aRZom@L2HAG@tUH9u@qcV8Q-1@l@7@y",
			"id":"_huL8h",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Break",
			"title":"Break",
			"type":"BREAK"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":36,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@8",
			"id":"L2HAG@8",
			"index":0,
			"inputs":{
				"name":"Execute Flow",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"ExecuteFlow"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":62,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@8",
			"id":"zLUNO",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.executeCurrentFlow }}",
						"value":"true"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":50,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@8",
			"id":"D9avp",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ MhGun.outputs.triggerFlow }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ Rb6C1.outputs.properties.currentFlow }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.availableFlows.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":55,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"D9avp@L2HAG@tUH9u@qcV8Q-1@l@8@y",
			"id":"BpfSB",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"params":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Params"
						},
						"flowId":{
							"type":"string",
							"title":"Flow Id"
						},
						"flowName":{
							"type":"string",
							"title":"Flow Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"availableFlows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Available Flows"
						},
						"flowName":{
							"type":"string",
							"title":"Flow Name"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"def flowMap = availableFlows.collectEntries { flow ->\n    [(flow.name.replaceAll(/^'|'$/, '').trim()): flow]  // The key is the name, and the value is the entire object\n}\ndef flow = flowMap.get(flowName)\nif(flow == null) {\n    flowName = flowName.replaceAll(/^'|'$/, '').trim()\n    flow = flowMap.get(flowName)\n}\nreturn [\"params\":[\"caseId\":caseId], \"flowId\":flow.id, \"flowName\":flow.name]",
				"isAsync":false,
				"parameters":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"availableFlows":{
						"source":"{{ Rb6C1.outputs.properties.availableFlows }}",
						"ua:type":"mappedArray",
						"items":"{{ Rb6C1.outputs.properties.availableFlows[0] }}"
					},
					"flowName":"{{ tUH9u.outputs.item.arguments[0] }}"
				}
			},
			"skip":false,
			"subTitle":"Get payload and flowId",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":1,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"D9avp@L2HAG@tUH9u@qcV8Q-1@l@8@y",
			"id":"_MOt9T",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ BpfSB.outputs.result.flowName }}",
						"filter":{
							"operator":"CONTAINS",
							"value":"collect_slot_flow"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":1,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MOt9T@D9avp@L2HAG@tUH9u@qcV8Q-1@l@8@y@y",
			"id":"_icYoa",
			"index":0,
			"inputs":{
				"loop":"tUH9u"
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"D9avp@L2HAG@tUH9u@qcV8Q-1@l@8@y",
			"id":"Cz0Vu",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.triggerFlow }}",
						"value":"{{ BpfSB.outputs.result.flowName }}"
					}
				]
			},
			"skip":false,
			"subTitle":"collect flow to trigger",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":8,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@9",
			"id":"L2HAG@9",
			"index":0,
			"inputs":{
				"name":"EndTopic",
				"conditions":{
					"filters":[
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"EndTopic"
							}
						},
						{
							"property":"{{ tUH9u.outputs.item.action }}",
							"filter":{
								"operator":"EQUAL",
								"value":"NoPendingTopics"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":8,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@9",
			"id":"_IfQuF",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"updateFields":[
					{
						"fieldName":"properties.currentTopic",
						"actionType":"UNSET",
						"setValue":"\"\""
					},
					{
						"fieldName":"properties.availableFlows",
						"actionType":"UNSET",
						"setValue":"\"\""
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@9",
			"id":"_RQIPE",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ Vgkf8.outputs.type }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":7,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_RQIPE@L2HAG@tUH9u@qcV8Q-1@l@9@y",
			"id":"_aB8Hs",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ MhGun.outputs.triggerPostTopicSelection }}",
						"value":false
					},
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"END_TOPIC_RECEIVED"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":9,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@10",
			"id":"L2HAG@10",
			"index":0,
			"inputs":{
				"name":"Refer From Knowledge",
				"conditions":{
					"filters":[
						{
							"property":"ReferFromKnowledge",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ tUH9u.outputs.item.action }}"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":9,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@10",
			"id":"_n0gqq",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						},
						"generateCharts":{
							"type":"boolean",
							"title":"Generate Charts"
						},
						"chartType":{
							"type":"string",
							"title":"Chart Type"
						}
					},
					"additionalProperties":false,
					"required":[
						"query",
						"generateCharts",
						"chartType"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						},
						"arguments":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Arguments"
						}
					},
					"additionalProperties":false,
					"required":[
						"conversationState",
						"arguments"
					]
				},
				"compile_static":false,
				"code":"\ndef toReturn = [:]\ntoReturn << [\"query\": arguments.get(0)]\nif(arguments.size() > 1){\n    toReturn << [\"generateCharts\": \"true\".equals(arguments.get(1))]\n}\nif(arguments.size() > 2){\n    toReturn << [\"chartType\": arguments.get(2)]\n}\nreturn toReturn;\n\n",
				"parameters":{
					"conversationState":"{{ Rb6C1.outputs.properties }}",
					"arguments":{
						"source":"{{ tUH9u.outputs.item.arguments }}",
						"ua:type":"mappedArray",
						"items":"{{ tUH9u.outputs.item.arguments[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"generateCharts ?",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@10",
			"id":"_QZQrw",
			"index":0,
			"inputs":{
				"automationId":"675aa2300b0cd51f362f94c6",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"query":"{{ tUH9u.outputs.item.arguments[0] }}",
					"caseId":"{{ PleJz.outputs.caseId }}",
					"aiAgentId":"{{ Rb6C1.outputs.properties.currentAIAgentId }}",
					"generateCharts":"{{ _n0gqq.outputs.result.generateCharts }}",
					"chartType":"{{ _n0gqq.outputs.result.chartType }}"
				}
			},
			"skip":false,
			"subTitle":"Refer from Knowledge",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":8,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@10",
			"id":"_p2n2f",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _QZQrw.outputs.success }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ _QZQrw.outputs.responseSentToUser }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_p2n2f@L2HAG@tUH9u@qcV8Q-1@l@10@y",
			"id":"_ymDMX",
			"index":0,
			"inputs":{
				"automationId":"66e5ee3762b75407b264a16f",
				"runtimeConnections":{},
				"synchronous":false,
				"parameters":{
					"triggerReason":"KNOWLEDGE_FETCH_COMPLETED",
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}",
					"triggeredByAutomationId":"{{ __RUN__.outputs.workflowId }}",
					"caseId":"{{ PleJz.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_p2n2f@L2HAG@tUH9u@qcV8Q-1@l@10@y",
			"id":"_XLkLV",
			"index":0,
			"inputs":{
				"result":{
					"currentFlowCancelled":false,
					"type":"KNOWLEDGE_FETCH_COMPLETED"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":9,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@11",
			"id":"L2HAG@11",
			"index":0,
			"inputs":{
				"name":"Refer from Prev Sessions",
				"conditions":{
					"filters":[
						{
							"property":"ReferFromPreviousSessions",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ tUH9u.outputs.item.action }}"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@11",
			"id":"_iHigf",
			"index":0,
			"inputs":{
				"automationId":"675bda3233f65e1857fccd33",
				"runtimeConnections":{},
				"synchronous":true,
				"parameters":{
					"userQuery":"{{ tUH9u.outputs.item.arguments[0] }}",
					"aiAgentId":"{{ Rb6C1.outputs.properties.currentAIAgentId }}",
					"caseId":"{{ PleJz.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Prev sessions",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":8,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@11",
			"id":"_NhjAm",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _iHigf.outputs.success }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_NhjAm@L2HAG@tUH9u@qcV8Q-1@l@11@y",
			"id":"_A17jn",
			"index":0,
			"inputs":{
				"automationId":"66e5ee3762b75407b264a16f",
				"runtimeConnections":{},
				"synchronous":false,
				"parameters":{
					"triggerReason":"PREVIOUS_SESSION_FETCH_COMPLETED",
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}",
					"triggeredByAutomationId":"{{ __RUN__.outputs.workflowId }}",
					"caseId":"{{ PleJz.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_NhjAm@L2HAG@tUH9u@qcV8Q-1@l@11@y",
			"id":"_YO66G",
			"index":0,
			"inputs":{
				"result":{
					"currentFlowCancelled":false,
					"type":"KNOWLEDGE_FETCH_COMPLETED"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"branch_condition",
				"resourceVersion":10,
				"resourceName":"branch_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@12",
			"id":"L2HAG@12",
			"index":0,
			"inputs":{
				"name":"Invoke Another Agent",
				"conditions":{
					"filters":[
						{
							"property":"InvokeAgent",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ tUH9u.outputs.item.action }}"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"title":"",
			"type":"BRANCH_CONDITION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":9,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@12",
			"id":"_XMttw",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"agentId":{
							"type":"string",
							"title":"Agent Id"
						},
						"query":{
							"type":"string",
							"title":"Query"
						},
						"agentName":{
							"type":"string",
							"title":"Agent Name"
						}
					},
					"additionalProperties":false,
					"required":[
						"agentId",
						"query",
						"agentName"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						},
						"arguments":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Arguments"
						}
					},
					"additionalProperties":false,
					"required":[
						"conversationState",
						"arguments"
					]
				},
				"compile_static":false,
				"code":"def aiAgentsMap = conversationState?.availableAgents?.collectEntries { agent ->\n    [(agent.name.replaceAll(/^'|'$/, '').trim()): agent]  \n}\n\ndef agentName = arguments.get(0)\ndef agentId = aiAgentsMap.get(agentName)?.id\ndef query = arguments.get(1)\n\nreturn [\"agentId\":agentId, \"query\":query, \"agentName\":agentName]\n\n",
				"parameters":{
					"conversationState":"{{ Rb6C1.outputs.properties }}",
					"arguments":{
						"source":"{{ tUH9u.outputs.item.arguments }}",
						"ua:type":"mappedArray",
						"items":"{{ tUH9u.outputs.item.arguments[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"getAgentId",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":10,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@12",
			"id":"_QG5Zf",
			"index":0,
			"inputs":{
				"automationId":"675d41706a03ce746de200c5",
				"runtimeConnections":{},
				"synchronous":true,
				"parameters":{
					"aiAgentId":"{{ _XMttw.outputs.result.agentId }}",
					"query":"{{ _XMttw.outputs.result.query }}",
					"caseId":"{{ PleJz.outputs.caseId }}",
					"agentName":"{{ _XMttw.outputs.result.agentName }}"
				}
			},
			"skip":false,
			"subTitle":"Invoke Agent",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":8,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L2HAG@tUH9u@qcV8Q-1@l@12",
			"id":"_s1tzd",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _QG5Zf.outputs.success }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_s1tzd@L2HAG@tUH9u@qcV8Q-1@l@12@y",
			"id":"_21YMV",
			"index":0,
			"inputs":{
				"automationId":"66e5ee3762b75407b264a16f",
				"runtimeConnections":{},
				"synchronous":false,
				"parameters":{
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}",
					"triggeredByAutomationId":"{{ __RUN__.outputs.workflowId }}",
					"caseId":"{{ PleJz.outputs.caseId }}",
					"triggerReason":"AGENT_INVOKE_COMPLETED"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_s1tzd@L2HAG@tUH9u@qcV8Q-1@l@12@y",
			"id":"_ZZ2Wh",
			"index":0,
			"inputs":{
				"result":{
					"currentFlowCancelled":false,
					"type":"KNOWLEDGE_FETCH_COMPLETED"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2023,
				"resourceName":"storage_by_unifyapps_fetch_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"S8DQ4",
			"index":0,
			"inputs":{
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"e_ai_agent_conversation_state",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"page":{
					"limit":20,
					"offset":0
				},
				"numberOfRecordsToFetch":"SINGLE",
				"includeTotalCount":false
			},
			"skip":false,
			"subTitle":"conversation State",
			"title":"Fetch records",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"fLiz7",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"triggerFlow":{
							"type":"boolean",
							"title":"Trigger Flow"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"conversationState":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Conversation State"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def activeflow = conversationState.currentFlow\nif(activeflow == null) {\n    return [\"triggerFlow\" : false]\n}\ndef activeFlowVsSlots = conversationState.activeFlowVsSlots;\ndef filledSlots = activeFlowVsSlots?.get(activeflow)\nfor(flow in conversationState.availableFlows){\n    if(flow.id == activeflow) {\n        for(slot in flow.slots) {\n            if(!filledSlots?.containsKey(slot.name)){\n                return [\"triggerFlow\" : false]\n            }\n        }\n    }\n}\nreturn [\"triggerFlow\" : true]\n",
				"isAsync":false,
				"parameters":{
					"conversationState":"{{ S8DQ4.outputs.properties }}"
				}
			},
			"skip":false,
			"subTitle":"should trigger flow",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":47,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_zc8P3",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ MhGun.outputs.executeCurrentFlow }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					},
					{
						"property":"{{ MhGun.outputs.triggerFlow }}",
						"filter":{
							"operator":"EXISTS"
						}
					},
					{
						"property":"{{ MhGun.outputs.triggerFlow }}",
						"filter":{
							"operator":"NOT_EQUAL",
							"value":"collect_slot_flow"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Flow Executor Enabled?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":78,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zc8P3@qcV8Q-1@y",
			"id":"_F2WJW",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sync":{
							"type":"boolean",
							"title":"Sync"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"activeFlowStack":{
							"type":"string",
							"title":"Active Flow Stack"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"return [\"sync\": activeFlowStack.contains(\"collect_slot_flow\")]",
				"isAsync":false,
				"parameters":{
					"activeFlowStack":"{{ S8DQ4.outputs.properties.activeFlowStack }}"
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":64,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zc8P3@qcV8Q-1@y",
			"id":"_KmzEO",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ _F2WJW.outputs.result.sync }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"run in sync?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KmzEO@_zc8P3@qcV8Q-1@y@y",
			"id":"_4mRAv",
			"index":0,
			"inputs":{
				"automationId":"67213681a48df519288a54d4",
				"runtimeConnections":{},
				"synchronous":true,
				"parameters":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}"
				}
			},
			"skip":false,
			"subTitle":"Flow Executor",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":67,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_KmzEO@_zc8P3@qcV8Q-1@y@n",
			"id":"_V0cj7",
			"index":0,
			"inputs":{
				"automationId":"67213681a48df519288a54d4",
				"runtimeConnections":{},
				"synchronous":false,
				"parameters":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}"
				}
			},
			"skip":false,
			"subTitle":"Flow Executor",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_zc8P3@qcV8Q-1@y",
			"id":"_TsH7Z",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.botResponse }}",
						"value":"successfully executedm{{ MhGun.outputs.triggerFlow }}"
					},
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"SUBFLOW_SUCCESSFUL"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":50,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"3ldPs",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2Yc1f.outputs.result.retriggerDE }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Retrigger DE?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":2045,
				"resourceName":"storage_by_unifyapps_update_records",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3ldPs@qcV8Q-1@y",
			"id":"_Tummc",
			"index":0,
			"inputs":{
				"numberOfRecordsToUpdate":"SINGLE",
				"triggerInputCondition":{
					"filters":[
						{
							"property":"properties_caseId",
							"filter":{
								"operator":"EQUAL",
								"value":"{{ PleJz.outputs.caseId }}"
							}
						}
					],
					"operator":"AND"
				},
				"object_type":"debug_agent",
				"updateFields":[
					{
						"fieldName":"properties.events",
						"actionType":"ADD",
						"setValue":"REDFLAG_RETRIGGER_DE -> {{ __RUN__.outputs.executionId }}"
					}
				],
				"skipIfEmpty":false,
				"page":{
					"offset":0,
					"limit":20
				}
			},
			"skip":false,
			"subTitle":"Storage by UnifyApps",
			"title":"Update records by query",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":9,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3ldPs@qcV8Q-1@y",
			"id":"_JcwU7",
			"index":0,
			"inputs":{
				"automationId":"66e5ee3762b75407b264a16f",
				"runtimeConnections":{},
				"synchronous":false,
				"parameters":{
					"triggerReason":"RETRIGGER_DUE_TO_INCOMPLETE_RESPONSE",
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}",
					"triggeredByAutomationId":"{{ __RUN__.outputs.workflowId }}",
					"caseId":"{{ PleJz.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"retriggerDE",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":54,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3ldPs@qcV8Q-1@y",
			"id":"_i5VUC",
			"index":0,
			"inputs":{
				"result":{
					"currentFlowCancelled":true,
					"type":"FLOW_CANCELLED"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":54,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_yqm12",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ MhGun.outputs.triggerPostTopicSelection }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Trigger post topic selection?",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":54,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yqm12@qcV8Q-1@y",
			"id":"_CWQa8",
			"index":0,
			"inputs":{
				"automationId":"66e29c7403a9a06cf6eba2da",
				"runtimeConnections":{},
				"synchronous":false,
				"parameters":{
					"caseId":"{{ PleJz.outputs.caseId }}",
					"triggeredByExecutionId":"{{ __RUN__.outputs.executionId }}",
					"triggeredByAutomationId":"{{ __RUN__.outputs.workflowId }}"
				}
			},
			"skip":false,
			"subTitle":"Trigger post Topic",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":1,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_yqm12@qcV8Q-1@y",
			"id":"_2p2qr",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"POST_TOPIC_SELECTION_DONE"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"_WsCnq",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ Vgkf8.outputs.type }}",
						"filter":{
							"operator":"EQUAL",
							"value":"END_TOPIC_RECEIVED"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":10,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_WsCnq@qcV8Q-1@y",
			"id":"_WhdRi",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ Rb6C1.outputs.properties.triggerDetails.triggeredByAgentDetails.waitingInstanceId }}",
						"filter":{
							"operator":"EXISTS"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":10,
				"resourceName":"variable_by_unifyapps_update_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_WhdRi@_WsCnq@qcV8Q-1@y@n",
			"id":"_o5rPB",
			"index":0,
			"inputs":{
				"variables":[
					{
						"source":"{{ Vgkf8.outputs.type }}",
						"value":"RESPOND_TO_USER"
					},
					{
						"source":"{{ b10Jg.outputs.query }}",
						"value":"Is there anything else you need help with ?"
					}
				]
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Update variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":45,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"qcV8Q-1",
			"id":"5C2rR",
			"index":0,
			"inputs":{
				"result":{
					"type":"{{ Vgkf8.outputs.type }}",
					"queryToUser":"{{ Vgkf8.outputs.botResponse }}",
					"multipleQueries":{
						"ua:type":"mappedArray",
						"source":"{{ w9XRv.outputs.items }}",
						"items":"{{ w9XRv.outputs.items[0] }}"
					},
					"currentFlowCancelled":"{{ MhGun.outputs.flowCancelled }}",
					"reasoning":"{{ JwEtN.outputs.reasoning }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true
	},
	"standard":false,
	"tags":[
		"AI Agent",
		"Team"
	],
	"version":16
}