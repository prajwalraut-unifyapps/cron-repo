{
	"appsUsed":[
		"storage_by_unifyapps"
	],
	"createdTime":1760082008818,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_LQTKC",
			"priority":0,
			"skip":false,
			"toNodeId":"n_RtjNn",
			"type":"next"
		},
		{
			"fromNodeId":"n_RtjNn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zYCxO",
			"type":"next"
		},
		{
			"fromNodeId":"n_zYCxO",
			"priority":0,
			"skip":false,
			"toNodeId":"n_apmBP",
			"type":"next"
		},
		{
			"fromNodeId":"n_apmBP",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cnKJ4",
			"type":"next"
		},
		{
			"fromNodeId":"n_cnKJ4",
			"priority":0,
			"skip":false,
			"toNodeId":"n_HNnuw",
			"type":"next"
		},
		{
			"fromNodeId":"n_HNnuw",
			"priority":0,
			"skip":false,
			"toNodeId":"_zpJTM",
			"type":"loop"
		},
		{
			"fromNodeId":"_zpJTM",
			"priority":0,
			"skip":false,
			"toNodeId":"n_0oA5N",
			"type":"next"
		},
		{
			"fromNodeId":"n_0oA5N",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"n_HNnuw",
			"type":"next"
		},
		{
			"fromNodeId":"n_HNnuw",
			"priority":0,
			"skip":false,
			"toNodeId":"n_rYuMU",
			"type":"next"
		}
	],
	"id":"68e76e270e377b0bdc8c4a7f",
	"lastModifiedBy":1,
	"lcName":"[dt] retrieves the chat history",
	"modifiedTime":1760082008818,
	"name":"[DT] Retrieves the chat history",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":0,
				"resourceName":"callables_from_api"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_LQTKC",
			"index":1,
			"inputs":{
				"request":{
					"contentType":"application/json",
					"body":{
						"type":"object",
						"properties":{
							"caseId":{
								"type":"string",
								"title":"Case Id"
							}
						},
						"additionalProperties":false,
						"required":[]
					}
				},
				"endpointType":"REST",
				"response":[
					{
						"status":200,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						},
						"body":{
							"type":"object",
							"properties":{
								"chatResult":{
									"type":"object",
									"properties":{
										"chat":{
											"type":"object",
											"properties":{
												"id":{
													"type":"string",
													"title":"id"
												},
												"createTime":{
													"type":"integer",
													"title":"createTime"
												},
												"updateTime":{
													"type":"integer",
													"title":"updateTime"
												},
												"messages":{
													"type":"array",
													"items":{
														"type":"object",
														"properties":{},
														"additionalProperties":false,
														"required":[]
													},
													"title":"messages"
												}
											},
											"title":"chat",
											"additionalProperties":false,
											"required":[]
										}
									},
									"title":"chatResult",
									"additionalProperties":false,
									"required":[]
								}
							},
							"additionalProperties":false
						},
						"namespaces":[]
					},
					{
						"status":400,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					},
					{
						"status":401,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					},
					{
						"status":403,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					},
					{
						"status":429,
						"contentType":"application/json",
						"textBody":{
							"type":"string"
						}
					}
				],
				"streamingResponse":false
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via API",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"storage_by_unifyapps",
				"resourceVersion":395,
				"resourceName":"storage_by_unifyapps_get_record_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_RtjNn",
			"index":2,
			"inputs":{
				"object_type":"service_hub_case",
				"includeRoleMappings":false,
				"includeCurrentUserPermissions":false,
				"translationsOption":"DEFAULT",
				"id":"{{ n_LQTKC.outputs.body.caseId }}",
				"readThroughSessionVariables":false
			},
			"skip":false,
			"subTitle":"Case details",
			"title":"Fetch record by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":592,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_zYCxO",
			"index":3,
			"inputs":{
				"automationId":"66ab98083d73300e63962287",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ n_LQTKC.outputs.body.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Conversation details",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.convDetails.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":528,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_apmBP",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"reversedConvDetails":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Reversed Conv Details"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"convDetails":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Conv Details"
						}
					}
				},
				"code":"if(binding.hasVariable('convDetails')) {\n  return [reversedConvDetails: convDetails.reverse()]\n}\n\nreturn [reversedConvDetails: []]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"convDetails":{
						"source":"{{ n_zYCxO.outputs.messages }}",
						"ua:type":"mappedArray",
						"items":"{{ n_zYCxO.outputs.messages[0] }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Reverse conversation details list",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.messages.source",
					"root.messages.ua:type",
					"root.messages.items.messageId",
					"root.messages.items.messageType"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":520,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_cnKJ4",
			"index":5,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object"
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray"
				},
				"ua:title":"messages",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"messages",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Messages",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":463,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_HNnuw",
			"index":6,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ n_apmBP.outputs.result.reversedConvDetails }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For each loop",
			"type":"LOOP"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.convDetails.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":528,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_HNnuw@_MPdFP-1@l",
			"id":"_zpJTM",
			"index":7,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"modifiedMessage":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Modified Message",
							"required":[]
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"message":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Message"
						}
					}
				},
				"code":"if (!binding.hasVariable('message') || message == null) {\n  return [:]\n}\n\ndef extractRawCitations = { List blocks, Map topLevelMsg ->\n  def cites = []\n  blocks?.each { b ->\n    if ((b?.blockType ?: '') == 'Citation') {\n      def c = b?.data?.citations\n      if (c instanceof List) cites.addAll(c)\n    }\n  }\n  if (topLevelMsg?.citations instanceof List) {\n    cites.addAll(topLevelMsg.citations)\n  }\n  cites\n}\n\n/**\n * Map a single raw citation from object-1 into object-2 shape:\n *   { sourceFile: { id, url, name, metadata: { mimeType }, chunkDetails: [...] } }\n */\ndef mapCitationToSourceFile = { Map c ->\n  if (!(c instanceof Map)) return null\n\n  def meta = [:]\n  if (c.fileType) meta.mimeType = c.fileType\n\n  def sourceFile = [:]\n  if (c.uniqueEntityId)      sourceFile.id = c.uniqueEntityId\n  else if (c.name)           sourceFile.id = c.name\n  else if (c.referenceUrl)   sourceFile.id = c.referenceUrl\n\n  if (c.referenceUrl)        sourceFile.url = c.referenceUrl\n  if (c.name)                sourceFile.name = c.name\n  if (!meta.isEmpty())       sourceFile.metadata = meta\n\n  if (c.chunkDetails instanceof List && !c.chunkDetails.isEmpty()) {\n    sourceFile.chunkDetails = c.chunkDetails\n  }\n\n  [ sourceFile: sourceFile ]\n}\n\n// safe text read\ndef frag = [:]\ndef textVal = (message?.message instanceof List && message.message)\n  ? message.message[0]?.data?.text\n  : null\nif (textVal) {\n  frag.text = textVal\n}\n\n// attachments -> fragments.file (first attachment)\nif (message.attachments instanceof List && !message.attachments.isEmpty()) {\n  def att = message.attachments[0]\n  def meta = [:]\n  if (att.mimeType) meta.mimeType = att.mimeType\n  if (message.createdTime) meta.uploadTime = message.createdTime\n\n  def fileObj = [\n    id      : att.id,\n    url     : att.url,\n    name    : att.name,\n    metadata: meta\n  ]\n  frag.file = fileObj\n}\n\ndef fragments = []\nif (!frag.isEmpty()) fragments << frag\n\n// citations mapping (object-1 -> object-2.citations[*].sourceFile)\ndef rawCitations = extractRawCitations(message.message as List, message)\ndef mappedCitations = rawCitations\n  ?.collect { mapCitationToSourceFile(it as Map) }\n  ?.findAll { it?.sourceFile && !it.sourceFile.isEmpty() } ?: null\n\ndef addIfPresent = { Map dst, String key, def val ->\n  if (val != null) dst[key] = val\n}\n\ndef modifiedMessage = [\n  messageId  : message.messageId,\n  messageType: message.messageType,\n  fragments  : fragments\n]\nif (mappedCitations) {\n  modifiedMessage.citations = mappedCitations\n}\n\naddIfPresent(modifiedMessage, 'caseId',            message.caseId)\naddIfPresent(modifiedMessage, 'additional',        (message.additional instanceof Map) ? new LinkedHashMap(message.additional) : message.additional)\naddIfPresent(modifiedMessage, 'hasAttachments',    message.hasAttachments)\naddIfPresent(modifiedMessage, 'fromCustomerUserId',message.fromCustomerUserId)\naddIfPresent(modifiedMessage, 'createdTime',       message.createdTime)\naddIfPresent(modifiedMessage, 'searchQueryId',     message.searchQueryId)\n\nreturn [modifiedMessage: modifiedMessage]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"message":"{{ n_HNnuw.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Modify message according to API",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.itemToAdd.fragments.items",
					"root.itemToAdd.citations.items"
				]
			},
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":536,
				"resourceName":"variable_by_unifyapps_add_item_to_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_HNnuw@_MPdFP-1@l",
			"id":"n_0oA5N",
			"index":8,
			"inputs":{
				"itemToAdd":"{{ _zpJTM.outputs.result.modifiedMessage }}",
				"insertLocation":"END",
				"listName":"{{ n_cnKJ4.outputs.items[0] }}"
			},
			"skip":false,
			"subTitle":"Add modified message to list",
			"title":"Add item to list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":0,
				"resourceName":"callables_return_response_to_api",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_MPdFP-1",
			"id":"n_rYuMU",
			"index":9,
			"inputs":{
				"streamingCompleted":true,
				"responseName":"200_undefined",
				"set_cookies":[],
				"body":{
					"chatResult":{
						"chat":{
							"id":"{{ n_RtjNn.outputs.id }}",
							"createTime":"{{ n_RtjNn.outputs.createdTime }}",
							"updateTime":"{{ n_RtjNn.outputs.modifiedTime }}",
							"messages":{
								"ua:type":"mappedArray",
								"source":"{{ n_cnKJ4.outputs.items }}",
								"items":"{{ n_cnKJ4.outputs.items[0] }}"
							}
						}
					}
				},
				"status":200
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to API request",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":19
}