{
	"appsUsed":[
		
	],
	"createdTime":1758731841815,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760550805320,
		"deployedBy":1,
		"deployedDefinitionId":"68efdf95e09fb733aee424c6",
		"status":"DEPLOYED",
		"version":41,
		"workflowVersion":72
	},
	"edges":[
		{
			"fromNodeId":"n_5edEE",
			"priority":0,
			"skip":false,
			"toNodeId":"_VG1ro",
			"type":"next"
		},
		{
			"fromNodeId":"_VG1ro",
			"priority":0,
			"skip":false,
			"toNodeId":"_swKzt",
			"type":"next"
		},
		{
			"fromNodeId":"_swKzt",
			"priority":0,
			"skip":false,
			"toNodeId":"n_kOprv",
			"type":"next"
		},
		{
			"fromNodeId":"n_kOprv",
			"priority":0,
			"skip":false,
			"toNodeId":"n_6XCrL",
			"type":"next"
		},
		{
			"fromNodeId":"n_6XCrL",
			"priority":0,
			"skip":false,
			"toNodeId":"n_xpUuG",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"6890ba042a3cad20290ca2d7",
	"lastModifiedBy":0,
	"lcName":"deep research tool | search_query_generation ",
	"modifiedTime":1760636872736,
	"name":"Deep Research Tool | search_query_generation ",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":447,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_omAqi-1",
			"id":"n_5edEE",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"searchQuery":{
							"type":"string",
							"title":"Search Query"
						},
						"research_needed":{
							"type":"boolean",
							"title":"Research Needed"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"previousQuesAnswer":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Previous Ques Answer"
						},
						"userQuestion":{
							"type":"string",
							"title":"User Question"
						},
						"agentId":{
							"type":"string",
							"title":"Agent Id"
						},
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"evolvingDraft":{
							"type":"string",
							"title":"Evolving Draft"
						},
						"research_plan":{
							"type":"string",
							"title":"Research Plan"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":450,
				"resourceName":"variable_by_unifyapps_create_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_omAqi-1",
			"id":"_VG1ro",
			"index":2,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{
					"createList":{
						"ui:title":"",
						"ua:type":{
							"ui:widget":"hidden"
						},
						"items":{
							"ui:title":"Initial list items",
							"ui:description":"Set the initial values of the list (defaults to empty)"
						},
						"ui:order":[
							"*",
							"items"
						]
					},
					"ua:title":{
						"ui:widget":"hidden"
					},
					"ua:list_type":{
						"ui:widget":"hidden"
					}
				},
				"schema":{
					"allOf":[
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"OBJECT"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"items":{
												"type":"object",
												"properties":{}
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"STRING"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of String"
											},
											"items":{
												"type":"string"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"INTEGER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Integers"
											},
											"items":{
												"type":"integer"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"NUMBER"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Numbers"
											},
											"items":{
												"type":"number"
											}
										}
									}
								}
							}
						},
						{
							"if":{
								"properties":{
									"ua:list_type":{
										"const":"BOOLEAN"
									}
								}
							},
							"then":{
								"properties":{
									"createList":{
										"type":"object",
										"properties":{
											"source":{
												"type":"string",
												"format":"ua:source",
												"title":"List of Booleans"
											},
											"items":{
												"type":"boolean"
											}
										}
									}
								}
							}
						}
					],
					"format":"ua:list",
					"type":"object",
					"properties":{
						"ua:title":{
							"type":"string"
						},
						"ua:list_type":{
							"type":"string",
							"title":"List Type",
							"oneOf":[
								{
									"const":"OBJECT",
									"title":"Object"
								},
								{
									"const":"STRING",
									"title":"String"
								},
								{
									"const":"NUMBER",
									"title":"Number"
								},
								{
									"const":"INTEGER",
									"title":"Integer"
								},
								{
									"const":"BOOLEAN",
									"title":"Boolean"
								}
							],
							"default":"OBJECT"
						},
						"createList":{
							"type":"object",
							"properties":{
								"ua:type":{
									"type":"string",
									"default":"mappedArray"
								},
								"source":{
									"type":"string",
									"format":"ua:source",
									"title":"List Item Source"
								},
								"items":{
									"type":"object",
									"properties":{
										"type":{
											"type":"string",
											"title":"type"
										},
										"text":{
											"type":"string",
											"title":"text"
										}
									},
									"additionalProperties":false
								}
							}
						}
					}
				}
			},
			"inputs":{
				"createList":{
					"ua:type":"mappedArray",
					"items":{
						"type":"text",
						"text":"You are a research assistant. Given the following:\nThe evolving draft:{{ n_5edEE.outputs.evolvingDraft }}\nThe research plan:{{ n_5edEE.outputs.research_plan }}\nThe user's original query:{{ n_5edEE.outputs.userQuestion }}\nAll previous search questions and their answers:{{ n_5edEE.outputs.previousQuesAnswer }}\n\nYour Task: Carefully review all the provided context and determine the single most critical action to improve the draft. Your priority for identifying a research gap should be in this order:\n     1. Fulfill the Plan: Compare the current draft against the original research plan. Identify a key section from the plan that is either completely missing or exists only as a placeholder. Your first priority is to build out the core structure.\n     2. Correct & Substantiate: If all sections of the plan are present, find claims within the draft that are unsupported, vague, or potentially inaccurate. Prioritize adding specific data, statistics, or expert quotes to existing points.\n     3. Deepen & Nuance: If the draft is both structurally complete and factually substantiated, seek opportunities to add greater depth, explore counterarguments, or introduce alternative perspectives to create a more comprehensive and balanced analysis.\nBased on your analysis, generate a single, highly specific, and targeted search query to fill the highest-priority gap you have identified.\n\nDo not duplicate previous queries or seek information already found.\n[STRICTLY] Return your response in the following JSON format: {\"EXPLANATION\": \"[Why this search is needed; what previous searches missed]\", \"SEARCH_QUERY\": \"[The targeted search query you recommend]\", \"RESEARCH_NEEDED\": true}\nDO NOT OUTPUT ANYTHING EXCEPT THIS JSON AS REQUESTED.\n[IMPORTANT] If no unanswered question remains based on the evolving draft and previous Q&A, return: {\"EXPLANATION\": \"no unanswered question left\",\"SEARCH_QUERY\": \"\",\"RESEARCH_NEEDED\": false}"
					}
				},
				"ua:title":"content",
				"ua:list_type":"OBJECT"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"type":"object",
					"properties":{
						"items":{
							"type":"array",
							"title":"content",
							"disableActions":true,
							"items":{
								"type":"object",
								"properties":{
									"type":{
										"type":"string",
										"title":"type"
									},
									"text":{
										"type":"string",
										"title":"text"
									}
								}
							}
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Create list",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":464,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_omAqi-1",
			"id":"_swKzt",
			"index":3,
			"inputs":{
				"automationId":"66ac70650f725f5b425d12d8",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"logProbs":false,
					"responseFormat":{
						"type":"text"
					},
					"message":{
						"items":{
							"role":"user",
							"content":{
								"ua:type":"mappedArray",
								"source":"{{ _VG1ro.outputs.items }}",
								"items":"{{ _VG1ro.outputs.items[0] }}"
							}
						},
						"ua:type":"mappedArray"
					},
					"aiAgentId":"{{ n_5edEE.outputs.agentId }}",
					"caseId":"{{ n_5edEE.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"search query gen",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":464,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_omAqi-1",
			"id":"n_kOprv",
			"index":4,
			"inputs":{
				"automationId":"66c58126e5ea140340d84aa8",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"response_format":{
						"type":"text"
					},
					"logprobs":false,
					"provider":"openai",
					"custom_url":"https://api.openai.com",
					"is_async":"False",
					"messages":{
						"items":{
							"content":{
								"items":{
									"type":"text",
									"text":"You are a research assistant. Given the following:\nThe research plan:{{ n_5edEE.outputs.researchPlan }}\nThe user's original query:{{ n_5edEE.outputs.userQuestion }}\nAll previous search questions and their answers:{{ n_5edEE.outputs.evolvingDraft }}\nYour task: Review the above information and identify the most important remaining research gap that has not yet been adequately answered. Generate one clear, specific, and targeted search query that is likely to fill this gap with explanation why that search query is needed, and a research_needed boolean.\nDo not duplicate previous queries or seek information already found.\nReturn your response in the following JSON format:\n{ \"EXPLANATION\": \"[Why this search is needed; what previous searches missed]\", \"SEARCH_QUERY\": \"[The targeted search query you recommend]\", \"RESEARCH_NEEDED\": true } \n[IMPORTANT] If no unanswered question remains based on the research plan and previous Q&A, return:\n{ \"EXPLANATION\": \"no unanswered question left\", \"SEARCH_QUERY\": \"\", \"RESEARCH_NEEDED\": false }"
								},
								"ua:type":"mappedArray"
							},
							"role":"user"
						},
						"ua:type":"mappedArray"
					},
					"model":"gpt-4.1-mini"
				}
			},
			"skip":true,
			"subTitle":"search query",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_to_json_object",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_omAqi-1",
			"id":"n_6XCrL",
			"index":5,
			"inputs":{
				"jsonSchema":{
					"type":"object",
					"properties":{
						"EXPLANATION":{
							"type":"string",
							"title":"EXPLANATION"
						},
						"SEARCH_QUERY":{
							"type":"string",
							"title":"SEARCH_QUERY"
						},
						"RESEARCH_NEEDED":{
							"type":"boolean",
							"title":"RESEARCH NEEDED"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"jsonString":"{{ _swKzt.outputs.llmResponse }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Deserialise string to JSON object",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":457,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_omAqi-1",
			"id":"n_xpUuG",
			"index":6,
			"inputs":{
				"result":{
					"searchQuery":"{{ n_6XCrL.outputs.result.SEARCH_QUERY }}",
					"research_needed":"{{ n_6XCrL.outputs.result.RESEARCH_NEEDED }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":74
}