{
	"appsUsed":[
		
	],
	"createdTime":1757010526785,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759323914088,
		"deployedBy":1,
		"deployedDefinitionId":"68dd270aa15f9e7fa5e1f00e",
		"status":"DEPLOYED",
		"version":33,
		"workflowVersion":63
	},
	"edges":[
		{
			"fromNodeId":"n_FAY4f",
			"priority":0,
			"skip":false,
			"toNodeId":"n_zZrn6",
			"type":"next"
		},
		{
			"fromNodeId":"n_zZrn6",
			"priority":0,
			"skip":false,
			"toNodeId":"7lhAW",
			"type":"next"
		},
		{
			"fromNodeId":"7lhAW",
			"priority":0,
			"skip":false,
			"toNodeId":"PPXBS",
			"type":"next"
		},
		{
			"fromNodeId":"PPXBS",
			"priority":0,
			"skip":false,
			"toNodeId":"vPnvz",
			"type":"next"
		},
		{
			"fromNodeId":"vPnvz",
			"priority":0,
			"skip":false,
			"toNodeId":"n_rpXX3",
			"type":"next"
		},
		{
			"fromNodeId":"n_rpXX3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_RgVFj",
			"type":"next"
		},
		{
			"fromNodeId":"n_RgVFj",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Rah3o",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"687d38e619ec661bd5bafb7a",
	"lastModifiedBy":-1,
	"lcName":"knowledge downloader | gong | single call",
	"modifiedTime":1759425302685,
	"name":"Knowledge Downloader | Gong | Single Call",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":445,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"n_FAY4f",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"success":{
							"type":"boolean",
							"title":"Success"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"content":{
							"type":"object",
							"properties":{
								"brief":{
									"type":"string",
									"title":"brief"
								},
								"keyPoints":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"text":{
												"type":"string",
												"title":"text"
											}
										},
										"additionalProperties":false
									},
									"title":"keyPoints"
								}
							},
							"title":"content",
							"additionalProperties":false
						},
						"context":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"objects":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"objectId":{
													"type":"string",
													"title":"objectId"
												},
												"objectType":{
													"type":"string",
													"title":"objectType"
												}
											},
											"additionalProperties":false
										},
										"title":"objects"
									},
									"system":{
										"type":"string",
										"title":"system"
									}
								},
								"additionalProperties":false
							},
							"title":"context"
						},
						"metaData":{
							"type":"object",
							"properties":{
								"clientUniqueId":{
									"type":"string",
									"title":"clientUniqueId"
								},
								"direction":{
									"type":"string",
									"title":"direction"
								},
								"duration":{
									"type":"integer",
									"title":"duration"
								},
								"id":{
									"type":"string",
									"title":"id"
								},
								"isPrivate":{
									"type":"boolean",
									"title":"isPrivate"
								},
								"language":{
									"type":"string",
									"title":"language"
								},
								"media":{
									"type":"string",
									"title":"media"
								},
								"meetingUrl":{
									"type":"string",
									"title":"meetingUrl"
								},
								"primaryUserId":{
									"type":"string",
									"title":"primaryUserId"
								},
								"scheduled":{
									"type":"string",
									"title":"scheduled"
								},
								"scope":{
									"type":"string",
									"title":"scope"
								},
								"sdrDisposition":{
									"type":"string",
									"title":"sdrDisposition"
								},
								"started":{
									"type":"string",
									"title":"started"
								},
								"system":{
									"type":"string",
									"title":"system"
								},
								"title":{
									"type":"string",
									"title":"title"
								},
								"url":{
									"type":"string",
									"title":"url"
								},
								"workspaceId":{
									"type":"string",
									"title":"workspaceId"
								}
							},
							"title":"metaData",
							"additionalProperties":false
						},
						"parties":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"affiliation":{
										"type":"string",
										"title":"affiliation"
									},
									"context":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{
												"objects":{
													"type":"array",
													"items":{
														"type":"object",
														"properties":{
															"objectId":{
																"type":"string",
																"title":"objectId"
															},
															"objectType":{
																"type":"string",
																"title":"objectType"
															}
														},
														"additionalProperties":false
													},
													"title":"objects"
												},
												"system":{
													"type":"string",
													"title":"system"
												}
											},
											"additionalProperties":false
										},
										"title":"context"
									},
									"emailAddress":{
										"type":"string",
										"title":"emailAddress"
									},
									"id":{
										"type":"string",
										"title":"id"
									},
									"methods":{
										"type":"array",
										"items":{
											"type":"string"
										},
										"title":"methods"
									},
									"name":{
										"type":"string",
										"title":"name"
									},
									"phoneNumber":{
										"type":"string",
										"title":"phoneNumber"
									},
									"speakerId":{
										"type":"string",
										"title":"speakerId"
									},
									"title":{
										"type":"string",
										"title":"title"
									},
									"userId":{
										"type":"string",
										"title":"userId"
									}
								},
								"additionalProperties":false
							},
							"title":"parties"
						},
						"knowledgeId":{
							"type":"string",
							"title":"Knowledge Id"
						},
						"knoledge":{
							"type":"object",
							"properties":{
								"aiAgentId":{
									"type":"string",
									"title":"aiAgentId"
								},
								"applicationInfo":{
									"type":"object",
									"properties":{
										"context":{
											"type":"object",
											"properties":{
												"connectionId":{
													"type":"string",
													"title":"connectionId"
												}
											},
											"title":"context",
											"additionalProperties":false,
											"required":[]
										}
									},
									"title":"applicationInfo",
									"additionalProperties":false,
									"required":[]
								},
								"indexingVersion":{
									"type":"integer",
									"title":"indexingVersion"
								},
								"readVersion":{
									"type":"integer",
									"title":"Read Version"
								},
								"lastSyncTime":{
									"type":"integer",
									"title":"Last Sync Time"
								},
								"cursorObject":{
									"type":"object",
									"properties":{},
									"additionalProperties":false,
									"title":"Cursor Object"
								}
							},
							"additionalProperties":false,
							"required":[]
						},
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Shared With Ids"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.sharedWithIds.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":451,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"n_zZrn6",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Shared With Ids"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Shared With Ids"
						},
						"callId":{
							"type":"string",
							"title":"Call Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def sharedWithIdsNew = []\n\nif (binding.hasVariable('sharedWithIds') && binding.hasVariable('callId')) {\n    sharedWithIds.each { str ->\n        def parts = str.split(\",\")\n        def callIdTmp = parts[0]\n\n        if (callIdTmp == callId) {\n            sharedWithIdsNew = parts.tail().collect { email ->\n                \"gong/u/\"+email\n            }\n            return [\"sharedWithIds\": sharedWithIdsNew]\n        }\n    }\n}\n\nreturn [\"sharedWithIds\": sharedWithIdsNew]\n",
				"parameters":{
					"sharedWithIds":{
						"source":"{{ n_FAY4f.outputs.sharedWithIds }}",
						"ua:type":"mappedArray",
						"items":"{{ n_FAY4f.outputs.sharedWithIds[0] }}"
					},
					"callId":"{{ n_FAY4f.outputs.metaData.id }}"
				}
			},
			"skip":false,
			"subTitle":"Extract SharedWithIds",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.context.items",
					"root.parameters.parties.items",
					"root.parameters.content.brief",
					"root.parameters.content.keyPoints.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":61,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"7lhAW",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"string",
							"title":"Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"data"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"metadata":{
							"type":"object",
							"title":"metadata"
						},
						"context":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"context"
						},
						"parties":{
							"type":"array",
							"items":{
								"type":"object"
							},
							"title":"parties"
						},
						"content":{
							"type":"object",
							"properties":{
								"brief":{
									"type":"string",
									"title":"brief"
								},
								"keyPoints":{
									"type":"array",
									"items":{
										"type":"object"
									},
									"title":"keyPoints"
								}
							},
							"title":"content",
							"additionalProperties":false
						}
					},
					"additionalProperties":false
				},
				"compile_static":false,
				"code":"// Extract metadata fields\ndef metadataPart = \"\"\nif (binding.hasVariable('metadata') && metadata) {\n    metadataPart += (metadata.id) ? \"Call ID: ${metadata.id}; \" : \"\"\n    metadataPart += (metadata.title) ? \"Call Title: ${metadata.title}; \" : \"\"\n    metadataPart += (metadata.scheduled) ? \"Scheduled Time: ${metadata.scheduled}; \" : \"\"\n    metadataPart += (metadata.started) ? \"Started Time: ${metadata.started}; \" : \"\"\n    metadataPart += (metadata.duration) ? \"Duration: ${metadata.duration} seconds; \" : \"\"\n    metadataPart += (metadata.direction) ? \"Direction: ${metadata.direction}; \" : \"\"\n    metadataPart += (metadata.system) ? \"System: ${metadata.system}; \" : \"\"\n    metadataPart += (metadata.scope) ? \"Scope: ${metadata.scope}; \" : \"\"\n    metadataPart += (metadata.media) ? \"Media Type: ${metadata.media}; \" : \"\"\n    metadataPart += (metadata.language) ? \"Language: ${metadata.language}; \" : \"\"\n    metadataPart += (metadata.meetingUrl) ? \"Meeting URL: ${metadata.meetingUrl}; \" : \"\"\n    metadataPart += (metadata.isPrivate != null) ? \"Is Private: ${metadata.isPrivate}; \" : \"\"\n} else {\n    metadataPart = \"Call metadata is missing; \"\n}\n\n// Extract context\ndef contextPart = \"\"\nif (binding.hasVariable('context') && context && context.size() > 0) {\n    contextPart = \"Context Systems: \"\n    context.each { ctx ->\n        contextPart += \"${ctx.system} \"\n        if (ctx.objects && ctx.objects.size() > 0) {\n            contextPart += \"(Objects: \"\n            ctx.objects.each { obj ->\n                contextPart += \"${obj.objectType}:${obj.objectId} \"\n            }\n            contextPart += \") \"\n        }\n    }\n    contextPart += \"; \"\n} else {\n    contextPart = \"Context information is missing; \"\n}\n\n// Extract parties (excluding id, speakerId, and context)\ndef partiesPart = \"\"\nif (binding.hasVariable('parties') && parties && parties.size() > 0) {\n    partiesPart = \"Call Participants: \"\n    parties.each { party ->\n        partiesPart += (party.name) ? \"Name: ${party.name}, \" : \"\"\n        partiesPart += (party.emailAddress) ? \"Email: ${party.emailAddress}, \" : \"\"\n        partiesPart += (party.title) ? \"Title: ${party.title}, \" : \"\"\n        partiesPart += (party.userId) ? \"User ID: ${party.userId}, \" : \"\"\n        partiesPart += (party.affiliation) ? \"Affiliation: ${party.affiliation}, \" : \"\"\n        partiesPart += (party.phoneNumber) ? \"Phone: ${party.phoneNumber}, \" : \"\"\n        if (party.methods && party.methods.size() > 0) {\n            partiesPart += \"Methods: ${party.methods.join(', ')}, \"\n        }\n        partiesPart += \"; \"\n    }\n} else {\n    partiesPart = \"Participant information is missing; \"\n}\n\n// Extract content\ndef contentPart = \"\"\nif (binding.hasVariable('content') && content) {\n    contentPart += (content.brief) ? \"Brief of the call: ${content.brief}; \" : \"Brief is missing; \"\n    \n    if (content.keyPoints && content.keyPoints.size() > 0) {\n        contentPart += \"Key Points of the call: \"\n        content.keyPoints.each { point ->\n            contentPart += \"${point.text}; \"\n        }\n    } else {\n        contentPart += \"Key points are missing; \"\n    }\n} else {\n    contentPart = \"Content information is missing; \"\n}\n\ndef data = \"Gong call data: ${metadataPart}${contextPart}${partiesPart}${contentPart}\"\n\nreturn [ \"data\": data.toString() ]",
				"parameters":{
					"context":{
						"ua:type":"mappedArray",
						"source":"{{ n_FAY4f.outputs.context }}",
						"items":"{{ n_FAY4f.outputs.context[0] }}"
					},
					"parties":{
						"ua:type":"mappedArray",
						"source":"{{ n_FAY4f.outputs.parties }}",
						"items":"{{ n_FAY4f.outputs.parties[0] }}"
					},
					"content":{
						"keyPoints":{
							"ua:type":"mappedArray",
							"source":"{{ n_FAY4f.outputs.content.keyPoints }}",
							"items":"{{ n_FAY4f.outputs.content.keyPoints[0] }}"
						},
						"brief":"{{ n_FAY4f.outputs.content.brief }}"
					},
					"metadata":"{{ n_FAY4f.outputs.metaData }}"
				}
			},
			"skip":false,
			"subTitle":"Content formatting",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.attachments.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":64,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"PPXBS",
			"index":4,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"createdBy":{
							"type":"string",
							"title":"Created By"
						},
						"modifiedOn":{
							"type":"string",
							"title":"Modified On"
						},
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.time.OffsetDateTime\nimport java.time.format.DateTimeFormatter\ndef chunkMetadata = [:]\n\nchunkMetadata << (binding.hasVariable('uniqueEntityId') && uniqueEntityId ? [\"uniqueEntityId\": uniqueEntityId] : [:])\nchunkMetadata << (binding.hasVariable('appName') && appName ? [\"appName\": appName] : [:])\nchunkMetadata << (binding.hasVariable('name') && name ? [\"name\": name] : [:])\nchunkMetadata << (binding.hasVariable('author') && author ? [\"author\": author] : [:])\nchunkMetadata << (binding.hasVariable('referenceUrl') && referenceUrl ? [\"referenceUrl\": referenceUrl] : [:])\n\nchunkMetadata << (binding.hasVariable('createdBy') && createdBy ? [\"createdBy\": createdBy] : [:])\n\n// Date-time conversion\ndef dateTimeStr = binding.hasVariable('createdTime') ? createdTime : null\nif (dateTimeStr) {\n    def offsetDateTime = OffsetDateTime.parse(dateTimeStr)\n    def epochMillis = offsetDateTime.toInstant().toEpochMilli()\n    chunkMetadata << [\"createdTime\": epochMillis]\n}\n\ndef modifiedOnStr = binding.hasVariable('modifiedOn') ? modifiedOn : null\nif (modifiedOnStr) {\n    def offsetDateTime = OffsetDateTime.parse(modifiedOnStr)\n    def epochMillis = offsetDateTime.toInstant().toEpochMilli()\n    chunkMetadata << [\"modifiedOn\": epochMillis]\n}\n\nreturn [\"chunkMetadata\": chunkMetadata]\n",
				"isAsync":false,
				"parameters":{
					"appName":"gong",
					"uniqueEntityId":"gong_{{ n_FAY4f.outputs.metaData.id }}",
					"name":"{{ n_FAY4f.outputs.metaData.title }}",
					"referenceUrl":"{{ n_FAY4f.outputs.metaData.url }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"chunkMetadata",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":73,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"CONTINUE",
			"groupId":"_XnXa5-1",
			"id":"vPnvz",
			"index":5,
			"inputs":{
				"automationId":"67091f09c6db330cf5b08ead",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"text":"{{ 7lhAW.outputs.result.data }}",
					"knowledgeId":"{{ n_FAY4f.outputs.knowledgeId }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"CONTINUE",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Text chunker",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.chunks.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":449,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"n_rpXX3",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"sourceResponse":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Source Response"
						}
					},
					"additionalProperties":false,
					"required":[
						"sourceResponse"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"chunks":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Chunks"
						},
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"def sourceResponse = [:]\n\nsourceResponse[\"chunks\"] = chunks\nsourceResponse[\"chunkMetadata\"] = chunkMetadata\n\nreturn ['sourceResponse' : sourceResponse]",
				"parameters":{
					"chunks":{
						"source":"{{ vPnvz.outputs.chunks }}",
						"ua:type":"mappedArray",
						"items":"{{ vPnvz.outputs.chunks[0] }}"
					},
					"chunkMetadata":"{{ PPXBS.outputs.result.chunkMetadata }}"
				}
			},
			"skip":false,
			"subTitle":"Create source response",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":460,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"n_RgVFj",
			"index":7,
			"inputs":{
				"automationId":"6867a54b78989b484e92345e",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"resourceType":"call",
					"uniqueEntityId":"gong_{{ n_FAY4f.outputs.knowledgeId }}_{{ n_FAY4f.outputs.metaData.id }}",
					"sharedWithIds":{
						"ua:type":"mappedArray",
						"source":"{{ n_zZrn6.outputs.result.sharedWithIds }}",
						"items":"{{ n_zZrn6.outputs.result.sharedWithIds[0] }}"
					},
					"knowledgeId":"{{ n_FAY4f.outputs.knowledgeId }}",
					"sourceResponse":"{{ n_rpXX3.outputs.result.sourceResponse }}",
					"knowledgeVersion":"{{ n_FAY4f.outputs.knoledge.indexingVersion }}"
				}
			},
			"skip":false,
			"subTitle":"Store knowledge raw data",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":454,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_XnXa5-1",
			"id":"n_Rah3o",
			"index":8,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":-1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":false,
		"enableRunLogging":true,
		"enableVariableLogging":false,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		"knowledge_v2"
	],
	"version":64
}