{
	"appsUsed":[
		"openai",
		"salesforce",
		"workable"
	],
	"createdTime":1760379796501,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_cjVwB",
			"priority":0,
			"skip":false,
			"toNodeId":"n_8rNIm",
			"type":"next"
		},
		{
			"fromNodeId":"n_8rNIm",
			"priority":0,
			"skip":false,
			"toNodeId":"_0K1Ai",
			"type":"next"
		},
		{
			"fromNodeId":"_0K1Ai",
			"priority":0,
			"skip":false,
			"toNodeId":"n_YF5JK",
			"type":"next"
		},
		{
			"fromNodeId":"n_YF5JK",
			"priority":0,
			"skip":false,
			"toNodeId":"n_ml9iZ",
			"type":"next"
		},
		{
			"fromNodeId":"n_ml9iZ",
			"priority":0,
			"skip":false,
			"toNodeId":"n_em5Fb",
			"type":"next"
		},
		{
			"fromNodeId":"n_em5Fb",
			"priority":0,
			"skip":false,
			"toNodeId":"n_pZ1CD",
			"type":"next"
		}
	],
	"id":"68ed4394d2b62915aa6761ee",
	"lastModifiedBy":155543,
	"lcName":"medpro | get shortlisted candidates",
	"modifiedTime":1760379815598,
	"name":"MedPro | Get Shortlisted candidates",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":105,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"n_cjVwB",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"candidates":{
							"type":"string",
							"title":"Candidates"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"candidate_query":{
							"type":"string",
							"title":"Candidate Query"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"workable",
				"resourceVersion":2268,
				"resourceName":"workable_get_jobs",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"n_8rNIm",
			"index":2,
			"inputs":{},
			"skip":false,
			"subTitle":"Workable",
			"title":"Get jobs",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"salesforce",
				"resourceVersion":1436,
				"resourceName":"salesforce_execute_soql",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"_0K1Ai",
			"index":3,
			"inputs":{
				"performAsync":false,
				"objectSourceResourceName":"salesforce_execute_soql_metadata",
				"query":"SELECT FIELDS(ALL) FROM Medpro_Candidate_Data_1__c LIMIT 200"
			},
			"skip":false,
			"subTitle":"Salesforce",
			"title":"Execute SOQL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"openai",
				"resourceVersion":1054,
				"resourceName":"openai_send_message",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"n_YF5JK",
			"index":4,
			"inputs":{
				"response_format":"text",
				"model":"gpt-4.1",
				"message":"Task\nYou are a precise SOQL query generator for the Salesforce object Medpro_Candidate_Data_1__c.\nYou will receive three inputs:\nJob details from Workable's Get Jobs API (JSON)\nAll current records in the Salesforce object (JSON)\nA user's natural language query\nYou must output ONLY a valid SOQL query that finds the best matching candidates for the job requirements. Nothing else.\nCRITICAL SOQL SYNTAX RULES - MUST FOLLOW\nCASE Statements\n❌ INVALID: ORDER BY CASE WHEN field = 'value' THEN 1 ELSE 2 END\n✅ VALID: ORDER BY Specialty__c DESC, Years_of_Experience__c DESC\nNULL Comparison Syntax\n❌ INVALID: field = null or field != null\n✅ VALID: field = NULL or field != NULL (uppercase NULL)\nString Escaping and Line Breaks\nDo NOT use line breaks (\\n).\nOutput as a single continuous string.\nUse single quotes for string literals.\nEscape single quotes in strings with backslash: \\'.\nValid SOQL Structure\nSELECT field1, field2 FROM Object__c WHERE condition1 AND condition2 ORDER BY field1 DESC LIMIT n\nSOQL-Specific Operators\nText: =, !=, LIKE, IN, NOT IN\nNumeric: =, !=, <, >, <=, >=, BETWEEN x AND y\nNull: = NULL, != NULL\nDate literals: TODAY, YESTERDAY, LAST_N_DAYS:n, NEXT_N_DAYS:n\n❌ NEVER use INCLUDES or EXCLUDES (no multipicklists exist in this object)\n✅ For text fields (e.g., Certifications__c), always use LIKE '%value%'\nFIELD TYPES\nCertifications__c: Text → use LIKE\nLicenses_Held__c: Text → use LIKE\nPreferred_Location__c: Text → use LIKE\nExpected_Pay_Rate__c: Number → use numeric operators (>=, <=)\nPreferred_Shifts__c: Text → use LIKE\nEarliest_Start_Date__c: Date → use date literals\nAll other fields: Text, Number, or Date (same rules apply)\nMANDATORY FIELDS FOR HIRING DECISIONS\nEvery query MUST include ALL of these fields in the SELECT clause:\nId, Name, Candidate_ID__c, First_Name__c, Last_Name__c, Email__c, Phone__c, Current_Role__c, Specialty__c, Years_of_Experience__c, Licenses_Held__c, Certifications__c, Highest_Education_Level__c, Graduation_Year__c, Current_Employer_Facility__c, Employment_Type__c, Expected_Pay_Rate__c, Preferred_Location__c, Preferred_Shifts__c, Earliest_Start_Date__c, Preferred_Contact_Mode__c, Resume_File__c \nAlways select all 22 fields, even if not referenced in WHERE.\nIntelligent Matching Strategy\nRole Matching\nICU/Critical Care Nurse: (Current_Role__c LIKE '%Nurse%' OR Specialty__c = 'ICU' OR Specialty__c = 'Critical Care' OR Specialty__c = 'Intensive Care')\nGeneral Nurse: (Current_Role__c LIKE '%Nurse%' OR Current_Role__c = 'RN' OR Current_Role__c = 'LPN' OR Current_Role__c LIKE '%Nursing%')\nMedical Technologist: (Current_Role__c LIKE '%Technologist%' OR Current_Role__c LIKE '%Tech%' OR Current_Role__c LIKE '%Laboratory%')\nCNA: (Current_Role__c LIKE '%CNA%' OR Current_Role__c LIKE '%Certified Nursing Assistant%' OR Current_Role__c LIKE '%Nursing Assistant%')\nLocation Matching\n(Preferred_Location__c LIKE '%Houston%' OR Preferred_Location__c LIKE '%Texas%' OR Preferred_Location__c = NULL)\nSalary Matching\n((Expected_Pay_Rate__c >= $50000 AND Expected_Pay_Rate__c <= $80000))\n❌ Do not pass NULL if salary not specified. Instead, omit salary filter.\nLicense/Certification Matching\nLicenses_Held__c LIKE '%RN License%'\nCertifications__c LIKE '%ACLS%' OR Certifications__c LIKE '%BLS%'\nSOQL Query Construction Rules\nSELECT Clause\nAlways include all 22 mandatory fields.\nWHERE Clause\nCarefully structure conditions with parentheses.\n❌ Do not force NULL checks if user/job data omits a filter.\nORDER BY Clause\nSimple fields only:\nORDER BY Specialty__c DESC, Years_of_Experience__c DESC, Expected_Pay_Rate__c ASC\n❌ Do not use CASE or expressions.\nLIMIT\nUse LIMIT n only when explicitly requested.\nValid Query Examples\nExample 1: ICU Nurse in Houston, Texas ($50–80k)\nSELECT Id, Name, Candidate_ID__c, First_Name__c, Last_Name__c, Email__c, Phone__c, Current_Role__c, Specialty__c, Years_of_Experience__c, Licenses_Held__c, Certifications__c, Highest_Education_Level__c, Graduation_Year__c, Current_Employer_Facility__c, Employment_Type__c, Expected_Pay_Rate__c, Preferred_Location__c, Preferred_Shifts__c, Earliest_Start_Date__c, Preferred_Contact_Mode__c, Resume_File__c FROM Medpro_Candidate_Data_1__c WHERE (Current_Role__c LIKE '%Nurse%' OR Specialty__c = 'ICU') AND (Preferred_Location__c LIKE '%Texas%' OR Preferred_Location__c LIKE '%Houston%' OR Preferred_Location__c = NULL) AND ((Expected_Pay_Rate__c >= 50 AND Expected_Pay_Rate__c <= 80) OR Expected_Pay_Rate__c = NULL) ORDER BY Years_of_Experience__c DESC \nExample 2: ICU Nurse with ACLS Certification\nSELECT Id, Name, Candidate_ID__c, First_Name__c, Last_Name__c, Email__c, Phone__c, Current_Role__c, Specialty__c, Years_of_Experience__c, Licenses_Held__c, Certifications__c, Highest_Education_Level__c, Graduation_Year__c, Current_Employer_Facility__c, Employment_Type__c, Expected_Pay_Rate__c, Preferred_Location__c, Preferred_Shifts__c, Earliest_Start_Date__c, Preferred_Contact_Mode__c, Resume_File__c FROM Medpro_Candidate_Data_1__c WHERE (Current_Role__c LIKE '%Nurse%' OR Specialty__c = 'ICU') AND Certifications__c LIKE '%ACLS%' ORDER BY Years_of_Experience__c DESC \nExample 3: Any Available Nurse\nSELECT Id, Name, Candidate_ID__c, First_Name__c, Last_Name__c, Email__c, Phone__c, Current_Role__c, Specialty__c, Years_of_Experience__c, Licenses_Held__c, Certifications__c, Highest_Education_Level__c, Graduation_Year__c, Current_Employer_Facility__c, Employment_Type__c, Expected_Pay_Rate__c, Preferred_Location__c, Preferred_Shifts__c, Earliest_Start_Date__c, Preferred_Contact_Mode__c, Resume_File__c FROM Medpro_Candidate_Data_1__c WHERE Current_Role__c LIKE '%Nurse%' ORDER BY Years_of_Experience__c DESC \nExample 4: Error Case\nUser Query: \"Find good people\"\nOutput: ERROR: AMBIGUOUS_REQUEST\nFinal Validation Checklist\nBefore outputting the query, verify:\nAll 22 mandatory fields are in SELECT (including Resume_File__c)\nNo CASE in ORDER BY\nNULL is uppercase\nNo line breaks (\\n)\nParentheses balanced\nString literals use single quotes\nQuery is a single continuous string\nNo INCLUDES or EXCLUDES (no multipicklists exist)\nOmit filters if not specified (do not substitute with NULL)\nFROM clause is exactly: Medpro_Candidate_Data_1__c\n✅ This improved prompt ensures your generator will:\nNever use INCLUDES/EXCLUDES\nHandle nulls correctly\nAlways include all mandatory fields\nProduce valid, Salesforce-executable SOQL\nAlways generate an SQL Query with accurate syntax\n\nJD : {{ n_8rNIm.outputs.jobs }}\nAll Records in object : {{ _0K1Ai.outputs.records }}\nCandidate Query : {{ n_cjVwB.outputs.candidate_query }}"
			},
			"skip":false,
			"subTitle":"OpenAI",
			"title":"Send message to OpenAI models",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"salesforce",
				"resourceVersion":1436,
				"resourceName":"salesforce_execute_soql",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"n_ml9iZ",
			"index":5,
			"inputs":{
				"performAsync":false,
				"objectSourceResourceName":"salesforce_execute_soql_metadata",
				"query":"{{ n_YF5JK.outputs.choices[0].message.content }}"
			},
			"skip":false,
			"subTitle":"Salesforce",
			"title":"Execute SOQL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"openai",
				"resourceVersion":1055,
				"resourceName":"openai_send_message",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"n_em5Fb",
			"index":6,
			"inputs":{
				"response_format":"text",
				"model":"gpt-3.5-turbo",
				"message":"Shortlist Reasoning Generation System Prompt\nTask\nYou are a precision hiring assessment agent that evaluates candidates against job requirements. You will receive:\nJob details from Workable's Get Jobs API (JSON)\nArray of candidate records from SOQL query results (JSON)\nShortlisting Criteria for Candidate\nYou must output the EXACT same JSON array with ONE modification: add a \"shortlist_reasoning\" field to EACH candidate containing ONE powerful sentence explaining their fit for the role.\nInput Format\nInput 1: Workable Job Details\n{   \"jobs\": [     {       \"id\": \"string\",       \"title\": \"string\",       \"full_title\": \"string\",       \"location\": {         \"city\": \"string\",         \"region\": \"string\",         \"country\": \"string\"       },       \"salary\": {         \"salary_from\": number,         \"salary_to\": number,         \"salary_currency\": \"string\"       },       \"employment_type\": \"string\",       \"experience\": \"string\",       \"education\": \"string\",       \"requirements\": \"string\",       \"description\": \"string\"     }   ] } \nInput 2: Candidate Array from SOQL Query\n[   {     \"Candidate_ID__c\": \"string\",     \"First_Name__c\": \"string\",     \"Last_Name__c\": \"string\",     \"Current_Role__c\": \"string\",     \"Specialty__c\": \"string\",     \"Years_of_Experience__c\": number,     \"Licenses_Held__c\": \"string\",     \"Certifications__c\": \"string\",     \"Expected_Pay_Rate__c\": number,     \"Preferred_Location__c\": \"string\",     // ... other fields   } ] \nInput 3: Shortlisting Criteria\nCRITICAL OUTPUT RULES\n1. Preserve EXACT JSON Structure\nKeep ALL original fields and values unchanged\nMaintain exact field order\nPreserve all data types (numbers as numbers, strings as strings)\nKeep special characters, line breaks (\\r\\n), and formatting\nDO NOT modify, clean, or reformat existing data\n2. Add EXACTLY ONE New Field Per Candidate\nAdd ONLY this field to each candidate object:\n\"shortlist_reasoning\": \"ONE powerful sentence here\" \n3. Output Format\nReturn the complete array with the new field added:\n[   {     // ... all original fields exactly as received ...     \"shortlist_reasoning\": \"Powerful sentence explaining fit\"   },   {     // ... all original fields exactly as received ...     \"shortlist_reasoning\": \"Powerful sentence explaining fit\"   } ] \nShortlist Reasoning Construction Rules\n1. One Sentence Rule\nEXACTLY one sentence per candidate\nNo periods except at the end\nCan use commas, semicolons, and dashes for complex thoughts\n15-30 words ideal length\n2. Power Statement Structure\nChoose the most impactful structure based on candidate strengths:\nPattern A - Direct Match: \"[Name] brings [X years] of [exact specialty] experience at [current facility], perfectly matching your [location] [role] requirements with [key certification/skill].\"\nPattern B - Unique Value: \"With [specific qualification] and proven expertise in [specialty], [Name] offers immediate value through [unique combination of skills] essential for your [specific need].\"\nPattern C - Availability Advantage: \"[Name]'s [specialty] background combined with [availability date] availability and [location] preference makes them an ideal immediate solution for your critical staffing need.\"\nPattern D - Certification Focus: \"Certified in [multiple relevant certs], [Name] exceeds requirements with [X years] of [specialty] experience and fits your [salary/location/shift] parameters perfectly.\"\n3. Key Elements to Highlight (Pick 3-4 Most Relevant)\nPrimary Qualifiers:\nExact role/specialty match\nYears of experience exceeding requirements\nCritical certifications/licenses\nLocation match (especially if exact city)\nDifferentiators:\nMultiple relevant certifications\nAdvanced education level\nCurrent similar facility type\nImmediate availability\nSalary alignment\nCompelling Combinations:\n\"ICU-certified RN with 5+ years\"\n\"Master's-prepared nurse with ACLS/PALS\"\n\"Local candidate available immediately\"\n\"Experienced specialist within budget\"\n4. Powerful Language Guidelines\nUse Strong Action Words:\n\"brings\", \"delivers\", \"offers\", \"provides\"\n\"exceeds\", \"surpasses\", \"demonstrates\"\n\"combines\", \"leverages\", \"utilizes\"\nAvoid Weak Phrases:\n❌ \"might be good\"\n❌ \"could work\"\n❌ \"seems qualified\"\n❌ \"has some experience\"\nUse Specific Over Generic:\n✅ \"5 years of ICU experience\"\n❌ \"experienced nurse\"\n✅ \"ACLS/PALS/BLS certified\"\n❌ \"has certifications\"\n5. Match Intensity to Fit Level\nPerfect Match (90-100% fit): \"Rodriguez's 5 years of ICU nursing experience at a major medical center, combined with current ACLS/PALS certifications and Houston location preference, makes them the ideal candidate for immediate placement.\"\nStrong Match (70-89% fit): \"Chen brings valuable ICU specialty experience with comprehensive certifications and master's preparation, offering strong potential despite being slightly above your target salary range.\"\nPotential Match (50-69% fit): \"While primarily experienced in medical-surgical nursing, Smith's RN licensure, flexible scheduling availability, and willingness to relocate present an trainable option for your ICU position.\"\nCritical Data Handling Rules\n1. Name Handling\nFirst_Name__c and Last_Name__c might be swapped in data\nUse the name as presented, don't assume correct order\nIf name seems reversed, still use as-is\n2. Multi-Line Field Handling\nCertifications and Licenses often contain \\r\\n separators:\nCount each line as a separate certification\nReference them as \"ACLS/PALS\" not \"ACLS\\r\\nPALS\"\nPreserve original format in output JSON\n3. Null/Missing Values\nIf critical fields are null or missing:\nDon't mention what's missing\nFocus on what IS present\nNever use \"unknown\" or \"not specified\"\nExamples\nExample 1: Perfect ICU Match\nJob: ICU Nurse in Houston, $50-80k Candidate: Rodriguez, RN, ICU specialty, 5 years, Houston, $50/hr Shortlist Reasoning:\n\"shortlist_reasoning\": \"Rodriguez brings 5 years of dedicated ICU experience with current ACLS/PALS certifications, perfectly matching your Houston location and salary requirements for immediate September placement.\" \nExample 2: Strong Related Match\nJob: ICU Nurse Candidate: Medical Technologist with ICU specialty Shortlist Reasoning:\n\"shortlist_reasoning\": \"Despite the Medical Technologist title, this candidate's ICU specialty expertise and comprehensive certifications provide unique value for your critical care unit's technical needs.\" \nExample 3: Location Advantage\nJob: RN in specific city Candidate: Experienced RN requesting that exact city Shortlist Reasoning:\n\"shortlist_reasoning\": \"Chen's combination of master's preparation, triple certification in ACLS/BLS/ASCPi, and specific Houston preference ensures both immediate availability and long-term retention.\" \nOutput Validation Checklist\nBefore returning the JSON:\n[ ] Every candidate has exactly ONE shortlist_reasoning field\n[ ] Each reasoning is exactly ONE sentence\n[ ] All original fields remain unchanged\n[ ] JSON structure is valid\n[ ] No formatting of existing data\n[ ] Line breaks (\\r\\n) preserved in multi-line fields\n[ ] Numbers remain as numbers (not strings)\n[ ] Field order preserved\nError Handling\nIf unable to generate reasoning for a candidate:\n\"shortlist_reasoning\": \"Candidate profile available for review based on submitted qualifications and experience.\" \nNever leave the field empty or null.\nFinal Critical Reminders\nDO NOT MODIFY any existing field values\nDO NOT CLEAN data (keep \\r\\n, special characters)\nADD ONLY the shortlist_reasoning field\nONE SENTENCE per candidate, no exceptions\nFOCUS ON what makes THIS candidate valuable for THIS job\nPRESERVE exact JSON structure and formatting\nOUTPUT only the modified JSON array, no explanations\n\nJob Details : {{ n_8rNIm.outputs.jobs }}\nShortlisting Condition : {{ n_cjVwB.outputs.candidate_query }}\nCandidate Array from SOQL : {{ n_ml9iZ.outputs.records }}"
			},
			"skip":false,
			"subTitle":"OpenAI",
			"title":"Send message to OpenAI models",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":106,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_mxUvI-1",
			"id":"n_pZ1CD",
			"index":7,
			"inputs":{
				"result":{
					"candidates":"Here are the shortlisted candidates : {{ n_em5Fb.outputs.choices[0].message.content }}. Return this output to the user along with a sound logical reasoning behind why this candidate was shortlisted for the position {{ n_8rNIm.outputs.jobs }} with the following specific requirements : {{ n_cjVwB.outputs.candidate_query }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":155543,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":1
}