{
	"appsUsed":[
		"meisterplan"
	],
	"createdTime":1747034409736,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759425299568,
		"deployedBy":-1,
		"deployedDefinitionId":"68deb3131c55b7419376d77a",
		"status":"DEPLOYED",
		"version":70,
		"workflowVersion":86
	},
	"edges":[
		{
			"fromNodeId":"krEVm",
			"priority":0,
			"skip":false,
			"toNodeId":"UAyf1",
			"type":"next"
		},
		{
			"fromNodeId":"UAyf1",
			"priority":0,
			"skip":false,
			"toNodeId":"IA2sl",
			"type":"next"
		},
		{
			"fromNodeId":"IA2sl",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"E1wJ8",
			"type":"if"
		},
		{
			"fromNodeId":"E1wJ8",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"jMEyT",
			"type":"error"
		},
		{
			"fromNodeId":"E1wJ8",
			"priority":0,
			"skip":false,
			"toNodeId":"PNLDX",
			"type":"next"
		},
		{
			"fromNodeId":"jMEyT",
			"priority":0,
			"skip":false,
			"toNodeId":"PNLDX",
			"type":"next"
		},
		{
			"fromNodeId":"GU4qY",
			"priority":0,
			"skip":false,
			"toNodeId":"PNLDX",
			"type":"next"
		},
		{
			"fromNodeId":"PNLDX",
			"priority":0,
			"skip":false,
			"toNodeId":"27gGQ",
			"type":"loop"
		},
		{
			"fromNodeId":"27gGQ",
			"priority":0,
			"skip":false,
			"toNodeId":"mALPT",
			"type":"next"
		},
		{
			"fromNodeId":"mALPT",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"TCoBU",
			"type":"if"
		},
		{
			"fromNodeId":"TCoBU",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"iwUoq",
			"type":"if"
		},
		{
			"fromNodeId":"iwUoq",
			"priority":0,
			"skip":false,
			"toNodeId":"GDi2b",
			"type":"next"
		},
		{
			"fromNodeId":"GDi2b",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"NlKmb",
			"type":"next"
		},
		{
			"fromNodeId":"TCoBU",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"3uBQi",
			"type":"next"
		},
		{
			"fromNodeId":"3uBQi",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"6w7pl",
			"type":"if"
		},
		{
			"fromNodeId":"6w7pl",
			"priority":0,
			"skip":false,
			"toNodeId":"PDP3g",
			"type":"next"
		},
		{
			"fromNodeId":"PDP3g",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"LrbzC",
			"type":"next"
		},
		{
			"fromNodeId":"GDi2b",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"mBHcd",
			"type":"if"
		},
		{
			"fromNodeId":"NlKmb",
			"priority":0,
			"skip":false,
			"toNodeId":"mBHcd",
			"type":"next"
		},
		{
			"fromNodeId":"PDP3g",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"mBHcd",
			"type":"if"
		},
		{
			"fromNodeId":"LrbzC",
			"priority":0,
			"skip":false,
			"toNodeId":"mBHcd",
			"type":"next"
		},
		{
			"fromNodeId":"3uBQi",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"mBHcd",
			"type":"next"
		},
		{
			"fromNodeId":"mALPT",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"mBHcd",
			"type":"next"
		},
		{
			"fromNodeId":"mBHcd",
			"priority":0,
			"skip":false,
			"toNodeId":"1nSKe",
			"type":"next"
		},
		{
			"fromNodeId":"1nSKe",
			"priority":0,
			"skip":false,
			"toNodeId":"T80I6",
			"type":"next"
		},
		{
			"fromNodeId":"T80I6",
			"priority":0,
			"skip":false,
			"toNodeId":"6XtYA",
			"type":"next"
		},
		{
			"fromNodeId":"6XtYA",
			"priority":0,
			"skip":false,
			"toNodeId":"b45F3",
			"type":"next"
		},
		{
			"fromNodeId":"b45F3",
			"priority":0,
			"skip":false,
			"toNodeId":"cuDz0",
			"type":"next"
		},
		{
			"fromNodeId":"cuDz0",
			"priority":0,
			"skip":false,
			"toNodeId":"mSCzA",
			"type":"next"
		},
		{
			"fromNodeId":"mSCzA",
			"priority":0,
			"skip":false,
			"toNodeId":"GU4qY",
			"type":"next"
		},
		{
			"fromNodeId":"PNLDX",
			"priority":0,
			"skip":false,
			"toNodeId":"MyMTn",
			"type":"next"
		},
		{
			"fromNodeId":"MyMTn",
			"priority":0,
			"skip":false,
			"toNodeId":"yW23v",
			"type":"next"
		},
		{
			"fromNodeId":"tXTNj",
			"priority":0,
			"skip":false,
			"toNodeId":"yW23v",
			"type":"next"
		},
		{
			"fromNodeId":"IA2sl",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"yW23v",
			"type":"next"
		},
		{
			"fromNodeId":"yW23v",
			"priority":0,
			"skip":false,
			"toNodeId":"tRuHA",
			"type":"loop"
		},
		{
			"fromNodeId":"tRuHA",
			"priority":0,
			"skip":false,
			"toNodeId":"TjQ3Z",
			"type":"next"
		},
		{
			"fromNodeId":"TjQ3Z",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"L5Hy1",
			"type":"if"
		},
		{
			"fromNodeId":"L5Hy1",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"ahRLR",
			"type":"if"
		},
		{
			"fromNodeId":"ahRLR",
			"priority":0,
			"skip":false,
			"toNodeId":"HPIVs",
			"type":"next"
		},
		{
			"fromNodeId":"HPIVs",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"DX8jH",
			"type":"next"
		},
		{
			"fromNodeId":"L5Hy1",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"GqE5x",
			"type":"next"
		},
		{
			"fromNodeId":"GqE5x",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"2oqcj",
			"type":"if"
		},
		{
			"fromNodeId":"2oqcj",
			"priority":0,
			"skip":false,
			"toNodeId":"2A9SQ",
			"type":"next"
		},
		{
			"fromNodeId":"2A9SQ",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"5pn5v",
			"type":"next"
		},
		{
			"fromNodeId":"HPIVs",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"aKRjg",
			"type":"if"
		},
		{
			"fromNodeId":"DX8jH",
			"priority":0,
			"skip":false,
			"toNodeId":"aKRjg",
			"type":"next"
		},
		{
			"fromNodeId":"2A9SQ",
			"name":"yes",
			"priority":0,
			"skip":false,
			"toNodeId":"aKRjg",
			"type":"if"
		},
		{
			"fromNodeId":"5pn5v",
			"priority":0,
			"skip":false,
			"toNodeId":"aKRjg",
			"type":"next"
		},
		{
			"fromNodeId":"GqE5x",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"aKRjg",
			"type":"next"
		},
		{
			"fromNodeId":"TjQ3Z",
			"name":"no",
			"priority":0,
			"skip":false,
			"toNodeId":"aKRjg",
			"type":"next"
		},
		{
			"fromNodeId":"aKRjg",
			"priority":0,
			"skip":false,
			"toNodeId":"pV0jP",
			"type":"next"
		},
		{
			"fromNodeId":"pV0jP",
			"priority":0,
			"skip":false,
			"toNodeId":"pqHVR",
			"type":"next"
		},
		{
			"fromNodeId":"pqHVR",
			"priority":0,
			"skip":false,
			"toNodeId":"X1Pmt",
			"type":"next"
		},
		{
			"fromNodeId":"X1Pmt",
			"priority":0,
			"skip":false,
			"toNodeId":"d4lUE",
			"type":"next"
		},
		{
			"fromNodeId":"d4lUE",
			"priority":0,
			"skip":false,
			"toNodeId":"1ABdW",
			"type":"next"
		},
		{
			"fromNodeId":"1ABdW",
			"priority":0,
			"skip":false,
			"toNodeId":"nSvKB",
			"type":"next"
		},
		{
			"fromNodeId":"nSvKB",
			"priority":0,
			"skip":false,
			"toNodeId":"tXTNj",
			"type":"next"
		},
		{
			"fromNodeId":"yW23v",
			"priority":0,
			"skip":false,
			"toNodeId":"8XQra",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"67cbfb9f2079887d6290fd16",
	"lastModifiedBy":1,
	"lcName":"knowledge indexer | meisterplan | index tasks with filter",
	"modifiedTime":1759485432529,
	"name":"Knowledge Indexer | Meisterplan | Index tasks with filter",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":57,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9vDQG-1",
			"id":"krEVm",
			"index":0,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"cursorObject":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"cursorObject"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"lastSyncTime":{
							"type":"string",
							"title":"Last Sync Time"
						}
					},
					"required":[]
				},
				"callableInterfaceId":"674855d2634d220ea5dd2d71",
				"setup":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"knowledgeId":{
							"type":"string",
							"title":"knowledgeId"
						},
						"aiAgentId":{
							"type":"string",
							"title":"aiAgentId"
						},
						"knowledge":{
							"type":"object",
							"properties":{
								"readVersion":{
									"type":"integer",
									"title":"readVersion"
								},
								"lastSyncTime":{
									"type":"integer",
									"title":"lastSyncTime"
								},
								"cursorObject":{
									"type":"object",
									"title":"cursorObject"
								},
								"applicationInfo":{
									"type":"object",
									"properties":{
										"context":{
											"type":"object",
											"properties":{
												"connectionId":{
													"type":"string",
													"title":"Connection Id"
												}
											},
											"additionalProperties":false,
											"title":"Context",
											"required":[]
										}
									},
									"additionalProperties":false,
									"title":"Application Info",
									"required":[]
								}
							},
							"title":"knowledge",
							"additionalProperties":false,
							"required":[]
						},
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9vDQG-1",
			"id":"UAyf1",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"dateRange":{
							"type":"object",
							"properties":{
								"from":{
									"type":"string",
									"title":"From"
								},
								"to":{
									"type":"string",
									"title":"To"
								}
							},
							"additionalProperties":false,
							"title":"Date Range",
							"required":[]
						},
						"dueDateRange":{
							"type":"object",
							"properties":{
								"from":{
									"type":"string",
									"title":"From"
								},
								"to":{
									"type":"string",
									"title":"To"
								}
							},
							"additionalProperties":false,
							"title":"Due Date Range",
							"required":[]
						},
						"status":{
							"type":"string",
							"title":"Status"
						},
						"taskId":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Task Id"
						}
					},
					"additionalProperties":false,
					"required":[
						"scenarioId",
						"projectId"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"inputs":{
							"type":"string",
							"title":"Inputs"
						}
					},
					"additionalProperties":false,
					"required":[
						"inputs"
					]
				},
				"compile_static":false,
				"code":"def mappedInputs = [:]\n\nif(binding.hasVariable('inputs') && inputs?.dateRange!=null)\n{\n  mappedInputs[\"dateRange\"] = inputs?.dateRange\n}\nif(binding.hasVariable('inputs') && inputs?.dueDateRange!=null)\n{\n  mappedInputs[\"dueDateRange\"] = inputs?.dueDateRange\n}\nif(binding.hasVariable('inputs') && inputs?.scenarioId)\n{\n  mappedInputs[\"scenarioId\"] = inputs?.scenarioId\n}\nif(binding.hasVariable('inputs') && inputs?.projectId)\n{\n  mappedInputs[\"projectId\"] = inputs?.projectId\n}\nif(binding.hasVariable('inputs') && inputs?.taskId && inputs?.taskId.size()>0)\n{\n  mappedInputs[\"taskId\"] = inputs?.taskId\n}\nif(binding.hasVariable('inputs') && inputs?.status!=null)\n{\n  mappedInputs[\"status\"] = inputs?.status\n}\n\nreturn mappedInputs\n",
				"parameters":{
					"inputs":"{{ krEVm.outputs.inputs }}"
				}
			},
			"skip":false,
			"subTitle":"inputs",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":336,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9vDQG-1",
			"id":"IA2sl",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ UAyf1.outputs.result.taskId }}",
						"filter":{
							"operator":"MISSING"
						}
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":242,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_tasks_in_project",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"IA2sl@9vDQG-1@y",
			"id":"E1wJ8",
			"index":0,
			"inputs":{
				"pageSize":500,
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}"
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false
				},
				"logConfig":{
					"enabled":false
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false
				}
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get all tasks in a projects",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":59,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"E1wJ8@IA2sl@9vDQG-1@y@error",
			"id":"jMEyT",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":397,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IA2sl@9vDQG-1@y",
			"id":"PNLDX",
			"index":0,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ E1wJ8.outputs.items }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":173,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_task",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"27gGQ",
			"index":0,
			"inputs":{
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}",
				"taskId":"{{ PNLDX.outputs.item.id }}"
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get a task in a project",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"mALPT",
			"index":0,
			"inputs":{
				"filters":[
					{
						"filters":[
							{
								"property":"{{ UAyf1.outputs.result.status }}",
								"filter":{
									"operator":"MISSING"
								}
							},
							{
								"property":"{{ UAyf1.outputs.result.status }}",
								"filter":{
									"operator":"EQUAL",
									"value":"{{ 27gGQ.outputs.status }}"
								}
							}
						],
						"operator":"OR"
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Status condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y",
			"id":"TCoBU",
			"index":0,
			"inputs":{
				"filters":[
					{
						"filters":[
							{
								"property":"{{ UAyf1.outputs.result.dateRange.from }}",
								"filter":{
									"operator":"EXISTS"
								}
							},
							{
								"property":"{{ UAyf1.outputs.result.dateRange.to }}",
								"filter":{
									"operator":"EXISTS"
								}
							}
						],
						"operator":"OR"
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"dateRange condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.dateRange.from",
					"root.parameters.dateRange.to",
					"root.parameters.dueDateRange.from",
					"root.parameters.dueDateRange.to"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TCoBU@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@y",
			"id":"iwUoq",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"boolean",
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[
						"result"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"taskStartDate":{
							"type":"string",
							"title":"Task Start Date"
						},
						"from":{
							"type":"string",
							"title":"From"
						},
						"to":{
							"type":"string",
							"title":"To"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.util.Date\n\n\ndef isTaskWithinDateRange(start, end, taskStart) {\n    def DATE_FORMAT = \"yyyy-MM-dd\"\n    def startMillis=start?getTimestampMillis(start,DATE_FORMAT):null;\n    def endMillis=end?getTimestampMillis(end,DATE_FORMAT):null;\n    def taskStartMillis=taskStart?getTimestampMillis(taskStart,DATE_FORMAT):null;\n    // If project has no start or end date, it's not within the range\n    if (taskStartMillis==null) {\n        return false\n    }\n\n    // If both start and end are given, check if project is within range\n    if (startMillis!=null && endMillis!=null) {\n        return (taskStartMillis >= startMillis && taskStartMillis <= endMillis)\n    }\n\n    // If only start date is given, check if project starts after it\n    if (startMillis!=null) {\n        return (taskStartMillis >= startMillis)\n    }\n\n    // If only end date is given, check if project ends before it\n    if (endMillis!=null) {\n        return (taskStartMillis <= endMillis)\n    }\n\n    return false // If no valid range provided\n}\n\ndef from = (binding.hasVariable('from') && from ? from : \"\")\ndef to = (binding.hasVariable('to') && to ? to : \"\")\ndef taskStart = (binding.hasVariable('taskStartDate') && taskStartDate ? taskStartDate : \"\")\n\nreturn isTaskWithinDateRange(from, to, taskStart)\n// return from+\" \"+to+\" \"+taskStart\n\nstatic long getTimestampMillis(String timestamp, String dateFormat) {\n    def timestampMillis = 0\n    if(timestamp != null) {\n        def format = new SimpleDateFormat(dateFormat)\n        def date = format.parse(timestamp)\n        timestampMillis = date.getTime()\n    }\n    return timestampMillis\n}",
				"parameters":{
					"to":"{{ UAyf1.outputs.result.dateRange.to }}",
					"from":"{{ UAyf1.outputs.result.dateRange.from }}",
					"taskStartDate":"{{ 27gGQ.outputs.startDate }}"
				}
			},
			"skip":false,
			"subTitle":"Checking condition for interval of project",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TCoBU@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@y",
			"id":"GDi2b",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ iwUoq.outputs.result }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":118,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"GDi2b@TCoBU@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@y@n",
			"id":"NlKmb",
			"index":0,
			"inputs":{
				"loop":"yW23v",
				"conditions":{
					"filters":[
						{
							"property":"{{ GDi2b.outputs.result }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3uBQi@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@n",
			"id":"3uBQi",
			"index":0,
			"inputs":{
				"filters":[
					{
						"filters":[
							{
								"property":"{{ UAyf1.outputs.result.dueDateRange.from }}",
								"filter":{
									"operator":"EXISTS"
								}
							},
							{
								"filter":{
									"operator":"EXISTS"
								},
								"property":"{{ UAyf1.outputs.result.dueDateRange.to }}"
							}
						],
						"operator":"OR"
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"dueDateRange condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.dateRange.from",
					"root.parameters.dateRange.to",
					"root.parameters.dueDateRange.from",
					"root.parameters.dueDateRange.to"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3uBQi@3uBQi@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@n@y",
			"id":"6w7pl",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"boolean",
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[
						"result"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"taskStartDate":{
							"type":"string",
							"title":"Task Start Date"
						},
						"from":{
							"type":"string",
							"title":"From"
						},
						"to":{
							"type":"string",
							"title":"To"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.util.Date\n\n\ndef isTaskWithinDateRange(start, end, taskStart) {\n    def DATE_FORMAT = \"yyyy-MM-dd\"\n    def startMillis=start?getTimestampMillis(start,DATE_FORMAT):null;\n    def endMillis=end?getTimestampMillis(end,DATE_FORMAT):null;\n    def taskStartMillis=taskStart?getTimestampMillis(taskStart,DATE_FORMAT):null;\n    // If project has no start or end date, it's not within the range\n    if (taskStartMillis==null) {\n        return false\n    }\n\n    // If both start and end are given, check if project is within range\n    if (startMillis!=null && endMillis!=null) {\n        return (taskStartMillis >= startMillis && taskStartMillis <= endMillis)\n    }\n\n    // If only start date is given, check if project starts after it\n    if (startMillis!=null) {\n        return (taskStartMillis >= startMillis)\n    }\n\n    // If only end date is given, check if project ends before it\n    if (endMillis!=null) {\n        return (taskStartMillis <= endMillis)\n    }\n\n    return false // If no valid range provided\n}\n\ndef from = (binding.hasVariable('from') && from ? from : \"\")\ndef to = (binding.hasVariable('to') && to ? to : \"\")\ndef taskStart = (binding.hasVariable('taskStartDate') && taskStartDate ? taskStartDate : \"\")\n\nreturn isTaskWithinDateRange(from, to, taskStart)\n// return from+\" \"+to+\" \"+taskStart\n\nstatic long getTimestampMillis(String timestamp, String dateFormat) {\n    def timestampMillis = 0\n    if(timestamp != null) {\n        def format = new SimpleDateFormat(dateFormat)\n        def date = format.parse(timestamp)\n        timestampMillis = date.getTime()\n    }\n    return timestampMillis\n}",
				"parameters":{
					"from":"{{ UAyf1.outputs.result.dueDateRange.from }}",
					"to":"{{ UAyf1.outputs.result.dueDateRange.to }}",
					"taskStartDate":"{{ 27gGQ.outputs.dueDate }}"
				}
			},
			"skip":false,
			"subTitle":"Checking condition for interval of project",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"3uBQi@3uBQi@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@n@y",
			"id":"PDP3g",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 6w7pl.outputs.result }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":118,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PDP3g@3uBQi@3uBQi@mALPT@PNLDX@IA2sl@9vDQG-1@y@l@y@n@y@n",
			"id":"LrbzC",
			"index":0,
			"inputs":{
				"loop":"yW23v",
				"conditions":{
					"filters":[
						{
							"property":"{{ PDP3g.outputs.result }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":26,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_scenario_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"mBHcd",
			"index":0,
			"inputs":{
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}"
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get scenario by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":28,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_project_in_scenario",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"1nSKe",
			"index":0,
			"inputs":{
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}"
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get a project in a scenario",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"T80I6",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"modifiedTime":{
							"type":"string",
							"title":"Modified Time"
						},
						"scenarioName":{
							"type":"string",
							"title":"Scenario Name"
						},
						"projectName":{
							"type":"string",
							"title":"Project Name"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"appName":"meisterplan",
				"uniqueEntityId":"{{ 27gGQ.outputs.id }}",
				"name":"{{ 27gGQ.outputs.name }}",
				"projectName":"{{ 1nSKe.outputs.name }}",
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}",
				"scenarioName":"{{ mBHcd.outputs.name }}",
				"referenceUrl":"{{ 27gGQ.outputs.externalViewUrl }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"modifiedTime":{
							"type":"string",
							"title":"Modified Time"
						},
						"scenarioName":{
							"type":"string",
							"title":"Scenario Name"
						},
						"projectName":{
							"type":"string",
							"title":"Project Name"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"metadata",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root.output":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"6XtYA",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"string",
							"title":"Chunk Metadata"
						}
					},
					"additionalProperties":false,
					"required":[
						"chunkMetadata"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"scenarioName":{
							"type":"string",
							"title":"Scenario Name"
						},
						"projectName":{
							"type":"string",
							"title":"Project Name"
						}
					},
					"additionalProperties":false,
					"required":[
						"uniqueEntityId",
						"name",
						"appName",
						"createdTime",
						"scenarioId",
						"projectId",
						"projectName"
					]
				},
				"compile_static":false,
				"code":"def chunkMetadata = [:]\nchunkMetadata << (binding.hasVariable('uniqueEntityId') && uniqueEntityId ? [\"uniqueEntityId\": uniqueEntityId] : [:])\nchunkMetadata << (binding.hasVariable('name') && name ? [\"name\": name] : [:])\nchunkMetadata << (binding.hasVariable('appName') && appName ? [\"appName\": appName] : [:])\nchunkMetadata << (binding.hasVariable('createdTime') && createdTime ? [\"createdTime\": createdTime] : [:])\nchunkMetadata << (binding.hasVariable('referenceUrl') && referenceUrl ? [\"referenceUrl\": referenceUrl] : [:])\nchunkMetadata << (binding.hasVariable('scenarioId') && scenarioId ? [\"scenarioId\": scenarioId] : [:])\nchunkMetadata << (binding.hasVariable('projectId') && projectId ? [\"projectId\": projectId] : [:])\nchunkMetadata << (binding.hasVariable('scenarioName') && scenarioName ? [\"scenarioName\": scenarioName] : [:])\nchunkMetadata << (binding.hasVariable('projectName') && projectName ? [\"projectName\": projectName] : [:])\nreturn [\"chunkMetadata\":chunkMetadata]",
				"parameters":{
					"uniqueEntityId":"{{ T80I6.outputs.uniqueEntityId }}",
					"appName":"{{ T80I6.outputs.appName }}",
					"createdTime":"{{ T80I6.outputs.createdTime }}",
					"referenceUrl":"{{ T80I6.outputs.referenceUrl }}",
					"author":"{{ T80I6.outputs.author }}",
					"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
					"projectId":"{{ UAyf1.outputs.result.projectId }}",
					"scenarioName":"{{ T80I6.outputs.scenarioName }}",
					"projectName":"{{ T80I6.outputs.projectName }}",
					"name":"{{ T80I6.outputs.name }}"
				}
			},
			"skip":false,
			"subTitle":"chunk metadata",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"b45F3",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"effort":{
							"type":"object",
							"properties":{
								"assignments":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"assignement":{
												"type":"object",
												"properties":{
													"entity":{
														"type":"object",
														"properties":{
															"id":{
																"type":"string",
																"title":"Id"
															},
															"type":{
																"type":"string",
																"title":"Type"
															}
														},
														"additionalProperties":false,
														"title":"Entity",
														"required":[]
													},
													"remainingEffort":{
														"type":"object",
														"properties":{
															"hours":{
																"type":"number",
																"title":"Hours"
															}
														},
														"additionalProperties":false,
														"title":"Remaining Effort",
														"required":[]
													},
													"completedEffort":{
														"type":"object",
														"properties":{
															"hours":{
																"type":"number",
																"title":"Hours"
															}
														},
														"additionalProperties":false,
														"title":"Completed Effort",
														"required":[]
													}
												},
												"additionalProperties":false,
												"title":"Assignement",
												"required":[]
											}
										},
										"additionalProperties":false,
										"required":[]
									},
									"title":"Assignments"
								},
								"totalRemainingEffort":{
									"type":"object",
									"properties":{
										"hours":{
											"type":"number",
											"title":"Hours"
										}
									},
									"additionalProperties":false,
									"title":"Total Remaining Effort",
									"required":[]
								},
								"totalCompletedEffort":{
									"type":"object",
									"properties":{
										"hours":{
											"type":"number",
											"title":"Hours"
										}
									},
									"additionalProperties":false,
									"title":"Total Completed Effort",
									"required":[]
								}
							},
							"additionalProperties":false,
							"title":"Effort",
							"required":[]
						},
						"externalViewUrl":{
							"type":"string",
							"title":"External View Url"
						},
						"id":{
							"type":"string",
							"title":"Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"rank":{
							"type":"integer",
							"title":"Rank"
						},
						"status":{
							"type":"string",
							"title":"Status"
						},
						"startDate":{
							"type":"string",
							"title":"Start Date"
						},
						"dueDate":{
							"type":"string",
							"title":"Due Date"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"externalViewUrl":"{{ 27gGQ.outputs.externalViewUrl }}",
				"dueDate":"{{ 27gGQ.outputs.dueDate }}",
				"name":"{{ 27gGQ.outputs.name }}",
				"rank":"{{ 27gGQ.outputs.rank }}",
				"effort":{
					"assignments":{
						"ua:type":"mappedArray",
						"items":{
							"assignement":{
								"entity":{
									"id":"{{ 27gGQ.outputs.effort.assignments[0].entity.id }}",
									"type":"{{ 27gGQ.outputs.effort.assignments[0].entity.type }}"
								},
								"completedEffort":{
									"hours":"{{ 27gGQ.outputs.effort.assignments[0].completedEffort.hours }}"
								},
								"remainingEffort":{
									"hours":"{{ 27gGQ.outputs.effort.assignments[0].remainingEffort.hours }}"
								}
							}
						},
						"source":"{{ 27gGQ.outputs.effort.assignments }}"
					},
					"totalRemainingEffort":{
						"hours":"{{ 27gGQ.outputs.effort.totalRemainingEffort.hours }}"
					},
					"totalCompletedEffort":{
						"hours":"{{ 27gGQ.outputs.effort.totalCompletedEffort.hours }}"
					}
				},
				"id":"{{ 27gGQ.outputs.id }}",
				"startDate":"{{ 27gGQ.outputs.startDate }}",
				"status":"{{ 27gGQ.outputs.status }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"effort":{
							"type":"object",
							"properties":{
								"assignments":{
									"type":"array",
									"items":{
										"type":"object",
										"properties":{
											"assignement":{
												"type":"object",
												"properties":{
													"entity":{
														"type":"object",
														"properties":{
															"id":{
																"type":"string",
																"title":"Id"
															},
															"type":{
																"type":"string",
																"title":"Type"
															}
														},
														"additionalProperties":false,
														"title":"Entity",
														"required":[]
													},
													"remainingEffort":{
														"type":"object",
														"properties":{
															"hours":{
																"type":"number",
																"title":"Hours"
															}
														},
														"additionalProperties":false,
														"title":"Remaining Effort",
														"required":[]
													},
													"completedEffort":{
														"type":"object",
														"properties":{
															"hours":{
																"type":"number",
																"title":"Hours"
															}
														},
														"additionalProperties":false,
														"title":"Completed Effort",
														"required":[]
													}
												},
												"additionalProperties":false,
												"title":"Assignement",
												"required":[]
											}
										},
										"additionalProperties":false,
										"required":[]
									},
									"title":"Assignments"
								},
								"totalRemainingEffort":{
									"type":"object",
									"properties":{
										"hours":{
											"type":"number",
											"title":"Hours"
										}
									},
									"additionalProperties":false,
									"title":"Total Remaining Effort",
									"required":[]
								},
								"totalCompletedEffort":{
									"type":"object",
									"properties":{
										"hours":{
											"type":"number",
											"title":"Hours"
										}
									},
									"additionalProperties":false,
									"title":"Total Completed Effort",
									"required":[]
								}
							},
							"additionalProperties":false,
							"title":"Effort",
							"required":[]
						},
						"externalViewUrl":{
							"type":"string",
							"title":"External View Url"
						},
						"id":{
							"type":"string",
							"title":"Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"rank":{
							"type":"integer",
							"title":"Rank"
						},
						"status":{
							"type":"string",
							"title":"Status"
						},
						"startDate":{
							"type":"string",
							"title":"Start Date"
						},
						"dueDate":{
							"type":"string",
							"title":"Due Date"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable for indexing",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.effort.assignments.items.assignement.entity.id",
					"root.parameters.effort.assignments.items.assignement.entity.type",
					"root.parameters.effort.assignments.items.assignement.remainingEffort.hours",
					"root.parameters.effort.assignments.items.assignement.completedEffort.hours",
					"root.parameters.effort.totalRemainingEffort.hours",
					"root.parameters.effort.totalCompletedEffort.hours"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"cuDz0",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"Data":{
							"type":"string",
							"title":"Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"Data"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"inputData":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"inputData"
					]
				},
				"compile_static":false,
				"code":"def processInputs(inputData) {\n   def processedData = [:]\n   inputData.each { key, value ->\n      if (value instanceof String) {\n         processedData[key] = value.toLowerCase()\n      } \n      else if (value instanceof List) {\n         processedData[key] = value.collect { \n            processInputs(it) \n         }.findAll { it }\n      } \n      else if (value instanceof Map) {\n         processedData[key] = processInputs(value) // Recursive call for nested maps\n      } \n      else {\n         processedData[key] = value\n      }\n   }\n   return processedData\n}\n\n\ndef data=processInputs(inputData)\n\nreturn data.toString()\n",
				"parameters":{
					"inputData":"{{ 27gGQ.outputs }}"
				}
			},
			"skip":false,
			"subTitle":"toString",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":75,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"mSCzA",
			"index":0,
			"inputs":{
				"automationId":"67b0e5fa6709a7172d69a81b",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"userEmailAddress":"{{ __USER__.outputs.contactDetails.email }}"
				}
			},
			"skip":false,
			"subTitle":"User shared with",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":62,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"PNLDX@IA2sl@9vDQG-1@y@l",
			"id":"GU4qY",
			"index":0,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ krEVm.outputs.knowledgeId }}",
					"chunkMetadata":"{{ 6XtYA.outputs.result.chunkMetadata }}",
					"knowledgeVersion":"{{ krEVm.outputs.knowledge.readVersion }}",
					"uniqueEntityId":"{{ T80I6.outputs.uniqueEntityId }}",
					"chunks":{
						"items":{
							"data":"{{ cuDz0.outputs.result }}",
							"sharedWithIds":{
								"source":"{{ mSCzA.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ mSCzA.outputs.sharedWithIds }}"
							}
						},
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"index",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":59,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"IA2sl@9vDQG-1@y",
			"id":"MyMTn",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":59,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9vDQG-1",
			"id":"yW23v",
			"index":0,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ UAyf1.outputs.result.taskId }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop on all tasks",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":173,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_task",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"tRuHA",
			"index":0,
			"inputs":{
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}",
				"taskId":"{{ yW23v.outputs.item }}"
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get a task in a project",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"TjQ3Z",
			"index":0,
			"inputs":{
				"filters":[
					{
						"filters":[
							{
								"property":"{{ UAyf1.outputs.result.status }}",
								"filter":{
									"operator":"MISSING"
								}
							},
							{
								"property":"{{ UAyf1.outputs.result.status }}",
								"filter":{
									"operator":"EQUAL",
									"value":"{{ tRuHA.outputs.status }}"
								}
							}
						],
						"operator":"OR"
					}
				],
				"operator":"OR"
			},
			"skip":false,
			"subTitle":"Status condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"TjQ3Z@yW23v@9vDQG-1@l@y",
			"id":"L5Hy1",
			"index":0,
			"inputs":{
				"filters":[
					{
						"filters":[
							{
								"property":"{{ UAyf1.outputs.result.dateRange.from }}",
								"filter":{
									"operator":"EXISTS"
								}
							},
							{
								"property":"{{ UAyf1.outputs.result.dateRange.to }}",
								"filter":{
									"operator":"EXISTS"
								}
							}
						],
						"operator":"OR"
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"dateRange condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.dateRange.from",
					"root.parameters.dateRange.to",
					"root.parameters.dueDateRange.from",
					"root.parameters.dueDateRange.to"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L5Hy1@TjQ3Z@yW23v@9vDQG-1@l@y@y",
			"id":"ahRLR",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"boolean",
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[
						"result"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"taskStartDate":{
							"type":"string",
							"title":"Task Start Date"
						},
						"from":{
							"type":"string",
							"title":"From"
						},
						"to":{
							"type":"string",
							"title":"To"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.util.Date\n\n\ndef isTaskWithinDateRange(start, end, taskStart) {\n    def DATE_FORMAT = \"yyyy-MM-dd\"\n    def startMillis=start?getTimestampMillis(start,DATE_FORMAT):null;\n    def endMillis=end?getTimestampMillis(end,DATE_FORMAT):null;\n    def taskStartMillis=taskStart?getTimestampMillis(taskStart,DATE_FORMAT):null;\n    // If project has no start or end date, it's not within the range\n    if (taskStartMillis==null) {\n        return false\n    }\n\n    // If both start and end are given, check if project is within range\n    if (startMillis!=null && endMillis!=null) {\n        return (taskStartMillis >= startMillis && taskStartMillis <= endMillis)\n    }\n\n    // If only start date is given, check if project starts after it\n    if (startMillis!=null) {\n        return (taskStartMillis >= startMillis)\n    }\n\n    // If only end date is given, check if project ends before it\n    if (endMillis!=null) {\n        return (taskStartMillis <= endMillis)\n    }\n\n    return false // If no valid range provided\n}\n\ndef from = (binding.hasVariable('from') && from ? from : \"\")\ndef to = (binding.hasVariable('to') && to ? to : \"\")\ndef taskStart = (binding.hasVariable('taskStartDate') && taskStartDate ? taskStartDate : \"\")\n\nreturn isTaskWithinDateRange(from, to, taskStart)\n// return from+\" \"+to+\" \"+taskStart\n\nstatic long getTimestampMillis(String timestamp, String dateFormat) {\n    def timestampMillis = 0\n    if(timestamp != null) {\n        def format = new SimpleDateFormat(dateFormat)\n        def date = format.parse(timestamp)\n        timestampMillis = date.getTime()\n    }\n    return timestampMillis\n}",
				"parameters":{
					"to":"{{ UAyf1.outputs.result.dateRange.to }}",
					"from":"{{ UAyf1.outputs.result.dateRange.from }}",
					"taskStartDate":"{{ tRuHA.outputs.startDate }}"
				}
			},
			"skip":false,
			"subTitle":"Checking condition for interval of project",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"L5Hy1@TjQ3Z@yW23v@9vDQG-1@l@y@y",
			"id":"HPIVs",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ ahRLR.outputs.result }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":118,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"HPIVs@L5Hy1@TjQ3Z@yW23v@9vDQG-1@l@y@y@n",
			"id":"DX8jH",
			"index":0,
			"inputs":{
				"loop":"yW23v",
				"conditions":{
					"filters":[
						{
							"property":"{{ HPIVs.outputs.result }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"GqE5x@TjQ3Z@yW23v@9vDQG-1@l@y@n",
			"id":"GqE5x",
			"index":0,
			"inputs":{
				"filters":[
					{
						"filters":[
							{
								"property":"{{ UAyf1.outputs.result.dueDateRange.from }}",
								"filter":{
									"operator":"EXISTS"
								}
							},
							{
								"filter":{
									"operator":"EXISTS"
								},
								"property":"{{ UAyf1.outputs.result.dueDateRange.to }}"
							}
						],
						"operator":"OR"
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"dueDateRange condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.dateRange.from",
					"root.parameters.dateRange.to",
					"root.parameters.dueDateRange.from",
					"root.parameters.dueDateRange.to"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":72,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"GqE5x@GqE5x@TjQ3Z@yW23v@9vDQG-1@l@y@n@y",
			"id":"2oqcj",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"result":{
							"type":"boolean",
							"title":"Result"
						}
					},
					"additionalProperties":false,
					"required":[
						"result"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"taskStartDate":{
							"type":"string",
							"title":"Task Start Date"
						},
						"from":{
							"type":"string",
							"title":"From"
						},
						"to":{
							"type":"string",
							"title":"To"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"compile_static":false,
				"code":"import java.text.SimpleDateFormat\nimport java.util.Date\n\n\ndef isTaskWithinDateRange(start, end, taskStart) {\n    def DATE_FORMAT = \"yyyy-MM-dd\"\n    def startMillis=start?getTimestampMillis(start,DATE_FORMAT):null;\n    def endMillis=end?getTimestampMillis(end,DATE_FORMAT):null;\n    def taskStartMillis=taskStart?getTimestampMillis(taskStart,DATE_FORMAT):null;\n    // If project has no start or end date, it's not within the range\n    if (taskStartMillis==null) {\n        return false\n    }\n\n    // If both start and end are given, check if project is within range\n    if (startMillis!=null && endMillis!=null) {\n        return (taskStartMillis >= startMillis && taskStartMillis <= endMillis)\n    }\n\n    // If only start date is given, check if project starts after it\n    if (startMillis!=null) {\n        return (taskStartMillis >= startMillis)\n    }\n\n    // If only end date is given, check if project ends before it\n    if (endMillis!=null) {\n        return (taskStartMillis <= endMillis)\n    }\n\n    return false // If no valid range provided\n}\n\ndef from = (binding.hasVariable('from') && from ? from : \"\")\ndef to = (binding.hasVariable('to') && to ? to : \"\")\ndef taskStart = (binding.hasVariable('taskStartDate') && taskStartDate ? taskStartDate : \"\")\n\nreturn isTaskWithinDateRange(from, to, taskStart)\n// return from+\" \"+to+\" \"+taskStart\n\nstatic long getTimestampMillis(String timestamp, String dateFormat) {\n    def timestampMillis = 0\n    if(timestamp != null) {\n        def format = new SimpleDateFormat(dateFormat)\n        def date = format.parse(timestamp)\n        timestampMillis = date.getTime()\n    }\n    return timestampMillis\n}",
				"parameters":{
					"from":"{{ UAyf1.outputs.result.dueDateRange.from }}",
					"to":"{{ UAyf1.outputs.result.dueDateRange.to }}",
					"taskStartDate":"{{ tRuHA.outputs.dueDate }}"
				}
			},
			"skip":false,
			"subTitle":"Checking condition for interval of project",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"if_else",
				"resourceVersion":71,
				"resourceName":"if_else_condition",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"GqE5x@GqE5x@TjQ3Z@yW23v@9vDQG-1@l@y@n@y",
			"id":"2A9SQ",
			"index":0,
			"inputs":{
				"filters":[
					{
						"property":"{{ 2oqcj.outputs.result }}",
						"filter":{
							"operator":"EQUAL",
							"value":"true"
						}
					}
				],
				"operator":"AND"
			},
			"skip":false,
			"subTitle":"Condition",
			"title":"Condition",
			"type":"IF_ELSE"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":118,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"2A9SQ@GqE5x@GqE5x@TjQ3Z@yW23v@9vDQG-1@l@y@n@y@n",
			"id":"5pn5v",
			"index":0,
			"inputs":{
				"loop":"yW23v",
				"conditions":{
					"filters":[
						{
							"property":"{{ 2A9SQ.outputs.result }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						}
					],
					"operator":"AND"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":26,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_scenario_by_id",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"aKRjg",
			"index":0,
			"inputs":{
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}"
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get scenario by ID",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"meisterplan",
				"resourceVersion":28,
				"connectionId":"67b2d14e210fec11b8b1ff33",
				"resourceName":"meisterplan_get_project_in_scenario",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"pV0jP",
			"index":0,
			"inputs":{
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}"
			},
			"skip":false,
			"subTitle":"Meisterplan",
			"title":"Get a project in a scenario",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"pqHVR",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"modifiedTime":{
							"type":"string",
							"title":"Modified Time"
						},
						"scenarioName":{
							"type":"string",
							"title":"Scenario Name"
						},
						"projectName":{
							"type":"string",
							"title":"Project Name"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"appName":"meisterplan",
				"uniqueEntityId":"{{ tRuHA.outputs.id }}",
				"name":"{{ tRuHA.outputs.name }}",
				"projectName":"{{ pV0jP.outputs.name }}",
				"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
				"projectId":"{{ UAyf1.outputs.result.projectId }}",
				"scenarioName":"{{ aKRjg.outputs.name }}",
				"referenceUrl":"{{ tRuHA.outputs.externalViewUrl }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"modifiedTime":{
							"type":"string",
							"title":"Modified Time"
						},
						"scenarioName":{
							"type":"string",
							"title":"Scenario Name"
						},
						"projectName":{
							"type":"string",
							"title":"Project Name"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"metadata",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root.output":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"X1Pmt",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"chunkMetadata":{
							"type":"string",
							"title":"Chunk Metadata"
						}
					},
					"additionalProperties":false,
					"required":[
						"chunkMetadata"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"uniqueEntityId":{
							"type":"string",
							"title":"Unique Entity Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"appName":{
							"type":"string",
							"title":"App Name"
						},
						"createdTime":{
							"type":"string",
							"title":"Created Time"
						},
						"referenceUrl":{
							"type":"string",
							"title":"Reference Url"
						},
						"author":{
							"type":"string",
							"title":"Author"
						},
						"scenarioId":{
							"type":"string",
							"title":"Scenario Id"
						},
						"projectId":{
							"type":"string",
							"title":"Project Id"
						},
						"scenarioName":{
							"type":"string",
							"title":"Scenario Name"
						},
						"projectName":{
							"type":"string",
							"title":"Project Name"
						}
					},
					"additionalProperties":false,
					"required":[
						"uniqueEntityId",
						"name",
						"appName",
						"createdTime",
						"scenarioId",
						"projectId",
						"projectName"
					]
				},
				"compile_static":false,
				"code":"def chunkMetadata = [:]\nchunkMetadata << (binding.hasVariable('uniqueEntityId') && uniqueEntityId ? [\"uniqueEntityId\": uniqueEntityId] : [:])\nchunkMetadata << (binding.hasVariable('name') && name ? [\"name\": name] : [:])\nchunkMetadata << (binding.hasVariable('appName') && appName ? [\"appName\": appName] : [:])\nchunkMetadata << (binding.hasVariable('createdTime') && createdTime ? [\"createdTime\": createdTime] : [:])\nchunkMetadata << (binding.hasVariable('referenceUrl') && referenceUrl ? [\"referenceUrl\": referenceUrl] : [:])\nchunkMetadata << (binding.hasVariable('scenarioId') && scenarioId ? [\"scenarioId\": scenarioId] : [:])\nchunkMetadata << (binding.hasVariable('projectId') && projectId ? [\"projectId\": projectId] : [:])\nchunkMetadata << (binding.hasVariable('scenarioName') && scenarioName ? [\"scenarioName\": scenarioName] : [:])\nchunkMetadata << (binding.hasVariable('projectName') && projectName ? [\"projectName\": projectName] : [:])\nreturn [\"chunkMetadata\":chunkMetadata]",
				"parameters":{
					"uniqueEntityId":"{{ pqHVR.outputs.uniqueEntityId }}",
					"appName":"{{ pqHVR.outputs.appName }}",
					"createdTime":"{{ pqHVR.outputs.createdTime }}",
					"referenceUrl":"{{ pqHVR.outputs.referenceUrl }}",
					"author":"{{ pqHVR.outputs.author }}",
					"scenarioId":"{{ UAyf1.outputs.result.scenarioId }}",
					"projectId":"{{ UAyf1.outputs.result.projectId }}",
					"scenarioName":"{{ pqHVR.outputs.scenarioName }}",
					"projectName":"{{ pqHVR.outputs.projectName }}",
					"name":"{{ pqHVR.outputs.name }}"
				}
			},
			"skip":false,
			"subTitle":"chunk metadata",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":59,
				"resourceName":"variable_by_unifyapps_create_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"d4lUE",
			"index":0,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"effort":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Effort",
							"required":[]
						},
						"externalViewUrl":{
							"type":"string",
							"title":"External View Url"
						},
						"id":{
							"type":"string",
							"title":"Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"rank":{
							"type":"integer",
							"title":"Rank"
						},
						"status":{
							"type":"string",
							"title":"Status"
						},
						"startDate":{
							"type":"string",
							"title":"Start Date"
						},
						"dueDate":{
							"type":"string",
							"title":"Due Date"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"externalViewUrl":"{{ tRuHA.outputs.externalViewUrl }}",
				"dueDate":"{{ tRuHA.outputs.dueDate }}",
				"name":"{{ tRuHA.outputs.name }}",
				"rank":"{{ tRuHA.outputs.rank }}",
				"effort":"{{ tRuHA.outputs.effort }}",
				"id":"{{ tRuHA.outputs.id }}",
				"startDate":"{{ tRuHA.outputs.startDate }}",
				"status":"{{ tRuHA.outputs.status }}"
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"effort":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Effort",
							"required":[]
						},
						"externalViewUrl":{
							"type":"string",
							"title":"External View Url"
						},
						"id":{
							"type":"string",
							"title":"Id"
						},
						"name":{
							"type":"string",
							"title":"Name"
						},
						"rank":{
							"type":"integer",
							"title":"Rank"
						},
						"status":{
							"type":"string",
							"title":"Status"
						},
						"startDate":{
							"type":"string",
							"title":"Start Date"
						},
						"dueDate":{
							"type":"string",
							"title":"Due Date"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable for indexing",
			"title":"Create variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{},
				"visibleOptionalFields":[
					"root.parameters.effort.assignments.items.assignement.entity.id",
					"root.parameters.effort.assignments.items.assignement.entity.type",
					"root.parameters.effort.assignments.items.assignement.remainingEffort.hours",
					"root.parameters.effort.assignments.items.assignement.completedEffort.hours",
					"root.parameters.effort.totalRemainingEffort.hours",
					"root.parameters.effort.totalCompletedEffort.hours"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":58,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"1ABdW",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"Data":{
							"type":"string",
							"title":"Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"Data"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"inputData":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Input Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"inputData"
					]
				},
				"compile_static":false,
				"code":"def processInputs(inputData) {\n   def processedData = [:]\n   inputData.each { key, value ->\n      if (value instanceof String) {\n         processedData[key] = value.toLowerCase()\n      } \n      else if (value instanceof List) {\n         processedData[key] = value.collect { \n            processInputs(it) \n         }.findAll { it }\n      } \n      else if (value instanceof Map) {\n         processedData[key] = processInputs(value) // Recursive call for nested maps\n      } \n      else {\n         processedData[key] = value\n      }\n   }\n   return processedData\n}\n\n\ndef data=processInputs(inputData)\n\nreturn data.toString()",
				"parameters":{
					"inputData":"{{ tRuHA.outputs }}"
				}
			},
			"skip":false,
			"subTitle":"toString",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":75,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"nSvKB",
			"index":0,
			"inputs":{
				"automationId":"67b0e5fa6709a7172d69a81b",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"userEmailAddress":"{{ __USER__.outputs.contactDetails.email }}"
				}
			},
			"skip":false,
			"subTitle":"User shared with",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":62,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"yW23v@9vDQG-1@l",
			"id":"tXTNj",
			"index":0,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"knowledgeId":"{{ krEVm.outputs.knowledgeId }}",
					"chunkMetadata":"{{ X1Pmt.outputs.result.chunkMetadata }}",
					"knowledgeVersion":"{{ krEVm.outputs.knowledge.readVersion }}",
					"uniqueEntityId":"{{ pqHVR.outputs.uniqueEntityId }}",
					"chunks":{
						"items":{
							"data":"{{ 1ABdW.outputs.result }}",
							"sharedWithIds":{
								"source":"{{ nSvKB.outputs.sharedWithIds }}",
								"ua:type":"mappedArray",
								"items":"{{ nSvKB.outputs.sharedWithIds }}"
							}
						},
						"ua:type":"mappedArray"
					}
				}
			},
			"skip":false,
			"subTitle":"index",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":59,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"9vDQG-1",
			"id":"8XQra",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"runtimeConnectionAppNames":[
		"meisterplan"
	],
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":false,
		"enableRunLogging":false,
		"enableVariableLogging":false,
		"route":{
			"default":false,
			"headerValueTierMap":{},
			"tierName":"global"
		}
	},
	"standard":true,
	"version":87
}