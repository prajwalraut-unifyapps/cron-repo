{
	"appsUsed":[
		
	],
	"createdTime":1760281937837,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760299748704,
		"deployedBy":1728,
		"deployedDefinitionId":"68ec0ae40c3d19149a9e5398",
		"status":"DEPLOYED",
		"version":4,
		"workflowVersion":9
	},
	"edges":[
		{
			"fromNodeId":"n_2omrf",
			"priority":0,
			"skip":false,
			"toNodeId":"n_RKWof",
			"type":"next"
		},
		{
			"fromNodeId":"n_RKWof",
			"priority":0,
			"skip":false,
			"toNodeId":"_uaRIG",
			"type":"next"
		},
		{
			"fromNodeId":"_uaRIG",
			"priority":0,
			"skip":false,
			"toNodeId":"_70CpW",
			"type":"next"
		},
		{
			"fromNodeId":"_70CpW",
			"priority":0,
			"skip":false,
			"toNodeId":"_l0HR8",
			"type":"next"
		},
		{
			"fromNodeId":"_l0HR8",
			"priority":0,
			"skip":false,
			"toNodeId":"n_I2G8B",
			"type":"next"
		},
		{
			"fromNodeId":"n_I2G8B",
			"priority":0,
			"skip":false,
			"toNodeId":"q5Ajz",
			"type":"next"
		},
		{
			"fromNodeId":"q5Ajz",
			"priority":0,
			"skip":false,
			"toNodeId":"n_h15wA",
			"type":"next"
		},
		{
			"fromNodeId":"n_h15wA",
			"priority":0,
			"skip":false,
			"toNodeId":"n_92BzV",
			"type":"next"
		},
		{
			"fromNodeId":"n_92BzV",
			"priority":0,
			"skip":false,
			"toNodeId":"FHTNw",
			"type":"next"
		},
		{
			"fromNodeId":"FHTNw",
			"priority":0,
			"skip":false,
			"toNodeId":"n_tAQuy",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"VIEW_RUNS",
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68ea9499fe0c701e6dbf323a",
	"lastModifiedBy":1728,
	"lcName":"workflow agent | ask an ai agent",
	"modifiedTime":1760299829389,
	"name":"Workflow Agent | Ask an AI Agent",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":436,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"n_2omrf",
			"index":1,
			"inputs":{
				"result":{
					"required":[],
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"Success":{
							"type":"boolean",
							"title":"Success"
						},
						"response":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response"
						}
					}
				},
				"callableInterfaceId":"__ua__ask_ai_agent_interface",
				"setup":{
					"required":[],
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"properties":{
						"name":{
							"type":"string",
							"title":"Name"
						},
						"instructions":{
							"type":"string",
							"title":"Instructions"
						},
						"model":{
							"type":"string",
							"title":"Model"
						},
						"tools":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tools"
						},
						"knowledges":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Knowledges"
						},
						"responseSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response Schema"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":432,
				"resourceName":"variable_by_unifyapps_get_session_variables",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"n_RKWof",
			"index":2,
			"inputs":{
				"variableSchema":{
					"type":"object",
					"properties":{
						"caseId":{
							"type":"string",
							"title":"Case Id"
						},
						"aiAgentId":{
							"type":"string",
							"title":"Ai Agent Id"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Variable by UnifyApps",
			"title":"Get Session Variables",
			"type":"ACTION"
		},
		{
			"additional":{
				"visibleOptionalFields":[
					"root.parameters.filters.items"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":52,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"_uaRIG",
			"index":3,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"rawLLMResponse":{
							"type":"string",
							"title":"Raw LLM Response"
						},
						"toolInputs":{
							"type":"object",
							"properties":{
								"query":{
									"type":"string",
									"title":"Query"
								}
							},
							"additionalProperties":false,
							"title":"Tool Inputs",
							"required":[]
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"query":{
							"type":"string",
							"title":"Query"
						}
					}
				},
				"code":"if(binding.hasVariable('query')){\n  query = query\n}\n\nreturn [\n  \"rawLLMResponse\": \"Thought:Fetch Relevant Content by asking the specified ai agent\", \n  \"toolInputs\": [\n   \"query\": query\n  ]\n]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"query":"{{ n_2omrf.outputs.instructions }}"
				}
			},
			"skip":false,
			"subTitle":"Prepare Inputs",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":360,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"_70CpW",
			"index":4,
			"inputs":{
				"automationId":"67d5af775c39266befb87be3",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"aiAgentId":"{{ n_2omrf.outputs.agentId }}",
					"purpose":"{{ n_2omrf.outputs.agentId }}",
					"caseId":"{{ n_RKWof.outputs.caseId }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":58,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"_l0HR8",
			"index":5,
			"inputs":{
				"automationId":"67a31b86addac8605df79166",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ n_RKWof.outputs.caseId }}",
					"createMessageIfAbsent":true,
					"rawLLMResponse":"{{ _uaRIG.outputs.result.rawLLMResponse }}",
					"aiAgentId":"{{ n_RKWof.outputs.aiAgentId }}",
					"internalMessageType":"AGENT_INTERNAL_RESPONSE"
				}
			},
			"skip":false,
			"subTitle":"Ingest Agent Response",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				}
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":442,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"n_I2G8B",
			"index":6,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"prompt":{
							"type":"string",
							"title":"prompt"
						},
						"toolIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"toolIds"
						},
						"webSearch":{
							"type":"boolean",
							"title":"webSearch"
						},
						"deepSearch":{
							"type":"boolean",
							"title":"deepSearch"
						},
						"knowledgeSetIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"knowledgeSetIds"
						},
						"knowledgeIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"knowledgeIds"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[
						"tools",
						"knowledges"
					],
					"properties":{
						"instructions":{
							"type":"string",
							"title":"Instructions"
						},
						"responseSchema":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Response Schema"
						},
						"tools":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Tools"
						},
						"knowledges":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Knowledges"
						}
					}
				},
				"code":"def hasResponseSchema = binding.hasVariable('responseSchema') && responseSchema\ndef hasInstructions = binding.hasVariable('instructions') && instructions\ndef hasTools = binding.hasVariable('tools') && tools\ndef hasKnowledges = binding.hasVariable('knowledges') && knowledges\n\ndef promptParts = []\n\nif (hasResponseSchema) {\n    // Convert schema to JSON manually\n    def schemaJson = convertToJson(responseSchema)\n    promptParts << \"Nothing else besides this output following correct schema is needed. Exact response schema to follow:\\n${schemaJson}\\n\"\n}\n\nif (hasInstructions) {\n    promptParts << \"Instructions:\\n${instructions}\\n\"\n}\n\ndef promptHeader = \"Following the instructions provided below, generate a response following output schema accordingly.\"\n\ndef finalPrompt = promptParts.isEmpty() \n    ? promptHeader \n    : ([promptHeader] + promptParts).join(\"\\n\")\n\n// Process tools\ndef toolIds = []\ndef webSearch = false\ndef deepSearch = false\n\nif (hasTools) {\n    if (tools.toolList) {\n        toolIds = tools.toolList.collect { it.toString() }\n    }\n    \n    if (tools.defaultTools) {\n        webSearch = tools.defaultTools.any { it.toString().equalsIgnoreCase('webSearch') }\n        deepSearch = tools.defaultTools.any { it.toString().equalsIgnoreCase('deepSearch') }\n    }\n}\n\n// Process knowledges\ndef knowledgeSetIds = []\ndef knowledgeIds = []\n\nif (hasKnowledges) {\n    knowledges.each { knowledge ->\n        if (knowledge.type == 'knowledge_set' || knowledge.type == 'GLOBAL') {\n            knowledgeSetIds << knowledge.id\n            if (knowledge.type == 'GLOBAL') {\n                knowledgeSetIds << 'GLOBAL'\n            }\n        } else if (knowledge.type == 'knowledge') {\n            knowledgeIds << knowledge.id\n        }\n    }\n}\n\nreturn [\n    prompt: finalPrompt,\n    toolIds: toolIds,\n    webSearch: webSearch,\n    deepSearch: deepSearch,\n    knowledgeSetIds: knowledgeSetIds,\n    knowledgeIds: knowledgeIds\n]\n\n// Helper method to convert Map/List to JSON string\ndef convertToJson(obj, indent = 0) {\n    def indentStr = \"  \" * indent\n    def nextIndentStr = \"  \" * (indent + 1)\n    \n    if (obj instanceof Map) {\n        if (obj.isEmpty()) return \"{}\"\n        def entries = obj.collect { k, v ->\n            \"${nextIndentStr}\\\"${k}\\\": ${convertToJson(v, indent + 1)}\"\n        }.join(\",\\n\")\n        return \"{\\n${entries}\\n${indentStr}}\"\n    } else if (obj instanceof List) {\n        if (obj.isEmpty()) return \"[]\"\n        def items = obj.collect { v ->\n            \"${nextIndentStr}${convertToJson(v, indent + 1)}\"\n        }.join(\",\\n\")\n        return \"[\\n${items}\\n${indentStr}]\"\n    } else if (obj instanceof String) {\n        return \"\\\"${obj.replace('\"', '\\\\\"')}\\\"\"\n    } else if (obj instanceof Number || obj instanceof Boolean) {\n        return obj.toString()\n    } else if (obj == null) {\n        return \"null\"\n    } else {\n        return \"\\\"${obj.toString()}\\\"\"\n    }\n}",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"instructions":"{{ n_2omrf.outputs.instructions }}",
					"responseSchema":"{{ n_2omrf.outputs.responseSchema }}",
					"tools":"{{ n_2omrf.outputs.tools }}",
					"knowledges":{
						"source":"{{ n_2omrf.outputs.knowledges }}",
						"ua:type":"mappedArray",
						"items":"{{ n_2omrf.outputs.knowledges[0] }}"
					}
				}
			},
			"options":{
				"bulkheadConfig":{
					"enabled":false,
					"global":false
				},
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"STOP",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"variable_by_unifyapps",
				"resourceVersion":50,
				"resourceName":"variable_by_unifyapps_set_session_variable",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"q5Ajz",
			"index":7,
			"inputSchema":{
				"type":"SCHEMA_AND_LAYOUT",
				"dynamic":false,
				"layout":{},
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ai_agent_ua_knowledgeIds":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Ai Agent Ua Knowledge Ids"
						},
						"ai_agent_ua_toolIds":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Ai Agent Ua Tool Ids"
						},
						"ai_agent_ua_instructions":{
							"type":"string",
							"title":"Ai Agent Ua Instructions"
						},
						"ai_agent_ua_steps":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"instructions":{
										"type":"string",
										"title":"Instructions"
									},
									"nodes":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Nodes"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Ai Agent Ua Steps"
						},
						"ai_agent_ua_goal":{
							"type":"string",
							"title":"Ai Agent Ua Goal"
						},
						"ai_agent_ua_test_mode":{
							"type":"boolean",
							"title":"Ai Agent Ua Test Mode"
						},
						"ai_agent_ua_role":{
							"type":"string",
							"title":"Ai Agent Ua Role"
						},
						"ai_agent_ua_knowledgeSetIds":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Ai Agent Ua Knowledge Set Ids"
						},
						"ai_agent_default_tools":{
							"type":"object",
							"properties":{
								"webSearch":{
									"type":"boolean",
									"title":"Web Search"
								},
								"deepResearch":{
									"type":"boolean",
									"title":"Deep Research"
								}
							},
							"additionalProperties":false,
							"title":"Ai Agent Default Tools",
							"required":[]
						},
						"ua_taskExecutionModel":{
							"type":"string",
							"title":"Ua Task Execution Model"
						}
					},
					"required":[]
				}
			},
			"inputs":{
				"ai_agent_ua_toolIds":{
					"source":"{{ n_I2G8B.outputs.result.toolIds }}",
					"ua:type":"mappedArray",
					"items":"{{ n_I2G8B.outputs.result.toolIds[0] }}"
				},
				"ua_taskExecutionModel":"{{ n_2omrf.outputs.model }}",
				"ai_agent_ua_knowledgeSetIds":{
					"source":"{{ n_I2G8B.outputs.result.knowledgeSetIds }}",
					"ua:type":"mappedArray",
					"items":"{{ n_I2G8B.outputs.result.knowledgeSetIds[0] }}"
				},
				"ai_agent_default_tools":{
					"webSearch":"{{ n_I2G8B.outputs.result.webSearch }}",
					"deepResearch":"{{ n_I2G8B.outputs.result.deepSearch }}"
				},
				"ai_agent_ua_test_mode":true,
				"ai_agent_ua_knowledgeIds":{
					"ua:type":"mappedArray",
					"source":"{{ n_I2G8B.outputs.result.knowledgeIds }}",
					"items":"{{ n_I2G8B.outputs.result.knowledgeIds[0] }}"
				}
			},
			"outputSchema":{
				"dynamic":false,
				"schema":{
					"additionalProperties":false,
					"type":"object",
					"properties":{
						"ai_agent_ua_knowledgeIds":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Ai Agent Ua Knowledge Ids"
						},
						"ai_agent_ua_toolIds":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Ai Agent Ua Tool Ids"
						},
						"ai_agent_ua_instructions":{
							"type":"string",
							"title":"Ai Agent Ua Instructions"
						},
						"ai_agent_ua_steps":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"instructions":{
										"type":"string",
										"title":"Instructions"
									},
									"nodes":{
										"type":"array",
										"items":{
											"type":"object",
											"properties":{},
											"additionalProperties":false
										},
										"title":"Nodes"
									}
								},
								"additionalProperties":false,
								"required":[]
							},
							"title":"Ai Agent Ua Steps"
						},
						"ai_agent_ua_goal":{
							"type":"string",
							"title":"Ai Agent Ua Goal"
						},
						"ai_agent_ua_test_mode":{
							"type":"boolean",
							"title":"Ai Agent Ua Test Mode"
						},
						"ai_agent_ua_role":{
							"type":"string",
							"title":"Ai Agent Ua Role"
						},
						"ai_agent_ua_knowledgeSetIds":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{},
								"additionalProperties":false
							},
							"title":"Ai Agent Ua Knowledge Set Ids"
						},
						"ai_agent_default_tools":{
							"type":"object",
							"properties":{
								"webSearch":{
									"type":"boolean",
									"title":"Web Search"
								},
								"deepResearch":{
									"type":"boolean",
									"title":"Deep Research"
								}
							},
							"additionalProperties":false,
							"title":"Ai Agent Default Tools",
							"required":[]
						},
						"ua_taskExecutionModel":{
							"type":"string",
							"title":"Ua Task Execution Model"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Test mode",
			"title":"Set Session Variables",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1091,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"n_h15wA",
			"index":8,
			"inputs":{
				"automationId":"67850d225384a9541846f5b9",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ n_RKWof.outputs.caseId }}",
					"aiAgentId":"{{ n_RKWof.outputs.aiAgentId }}",
					"instructionsToAppend":"{{ n_I2G8B.outputs.result.prompt }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"ai_agents_by_unifyapps",
				"resourceVersion":217,
				"resourceName":"ai_agents_by_unifyapps_invoke_agent",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"n_92BzV",
			"index":9,
			"inputs":{
				"callableInterfaceId":"__ua__invoke_ai_agent_by_unifyapps",
				"defaultFallbackWorkflowId":"68050ca67df58855654804a0",
				"parameters":{
					"userQuery":"{{ n_2omrf.outputs.instructions }}",
					"aiAgentId":"{{ n_RKWof.outputs.aiAgentId }}",
					"triggerWorkflowWithRuntimeType":"IN_MEMORY"
				}
			},
			"skip":true,
			"subTitle":"AI Agents",
			"title":"Invoke Agent",
			"type":"CALL_INTERFACE_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":58,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"FHTNw",
			"index":10,
			"inputs":{
				"automationId":"67a31b86addac8605df79166",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"caseId":"{{ n_RKWof.outputs.caseId }}",
					"messageId":"{{ _l0HR8.outputs.messageId }}",
					"createMessageIfAbsent":false,
					"executionOutput":"{{ n_92BzV.outputs }}",
					"rawLLMResponse":"{{ _uaRIG.outputs.result.rawLLMResponse }}",
					"aiAgentId":"{{ n_RKWof.outputs.aiAgentId }}",
					"internalMessageType":"AGENT_INTERNAL_RESPONSE",
					"toolUseDetails":{
						"toolId":"InvokeAgent",
						"toolName":"InvokeAgent",
						"toolInput":"{{ _uaRIG.outputs.result.toolInputs }}",
						"toolOutput":"{{ n_92BzV.outputs }}"
					}
				}
			},
			"skip":true,
			"subTitle":"Ingest Agent Response",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":455,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_lvGDB-1",
			"id":"n_tAQuy",
			"index":11,
			"inputs":{
				"result":{
					"Success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":46030,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":10
}