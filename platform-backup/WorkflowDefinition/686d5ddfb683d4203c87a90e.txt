{
	"appsUsed":[
		
	],
	"createdTime":1754459076175,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1759948541897,
		"deployedBy":-1,
		"deployedDefinitionId":"68e6aefda991021e3f9ad969",
		"status":"DEPLOYED",
		"version":77,
		"workflowVersion":94
	},
	"edges":[
		{
			"fromNodeId":"n_GRNPn",
			"priority":0,
			"skip":false,
			"toNodeId":"n_tuicc",
			"type":"next"
		},
		{
			"fromNodeId":"n_tuicc",
			"priority":0,
			"skip":false,
			"toNodeId":"n_96Fww",
			"type":"next"
		},
		{
			"fromNodeId":"n_96Fww",
			"name":"error",
			"priority":0,
			"skip":false,
			"toNodeId":"n_EFNzj",
			"type":"error"
		},
		{
			"fromNodeId":"n_EFNzj",
			"priority":0,
			"skip":false,
			"toNodeId":"n_fFuk3",
			"type":"next"
		},
		{
			"fromNodeId":"n_96Fww",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cQQfi",
			"type":"next"
		},
		{
			"fromNodeId":"n_fFuk3",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cQQfi",
			"type":"next"
		},
		{
			"fromNodeId":"n_cQQfi",
			"priority":0,
			"skip":false,
			"toNodeId":"n_cCEF4",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"686d5ddfb683d4203c87a90e",
	"lastModifiedBy":1,
	"lcName":"extract data from excel file",
	"modifiedTime":1760012255660,
	"name":"Extract Data From Excel File",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":96,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_2Uq6K-1",
			"id":"n_GRNPn",
			"index":0,
			"inputs":{
				"result":{
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"setup":{
					"type":"object",
					"properties":{
						"fileDetails":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"File Details"
						}
					},
					"additionalProperties":false,
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":95,
				"resourceName":"utility_by_unifyapps_generate_public_url",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_2Uq6K-1",
			"id":"n_tuicc",
			"index":0,
			"inputs":{
				"file":"{{ n_GRNPn.outputs.fileDetails }}",
				"expiryTime":1
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Generate public file URL",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":96,
				"resourceName":"code_by_unifyapps_python",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"MANUAL",
			"groupId":"_2Uq6K-1",
			"id":"n_96Fww",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"text":{
							"type":"string",
							"title":"Text"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"input":{
					"type":"object",
					"properties":{
						"url":{
							"type":"string",
							"title":"Url"
						}
					},
					"additionalProperties":false,
					"required":[]
				},
				"code":"import os\nimport csv\nimport requests\nimport tempfile\nimport xlrd\nimport zipfile\nfrom openpyxl import load_workbook\nfrom openpyxl.utils.exceptions import InvalidFileException\n\n# Set the file URL\n\n\n# Download the file\nresponse = requests.get(url)\nresponse.raise_for_status()\n\n# Use generic extension\ntmp_file = tempfile.NamedTemporaryFile(delete=False, suffix=\".xlsx\")\ntmp_file.write(response.content)\ntmp_file.close()\nfile_path = tmp_file.name\n\nrows = []\nparsed = False\n\n# Try parsing as .xlsx\ntry:\n    wb_values = load_workbook(file_path, data_only=True)\n    wb_formulas = load_workbook(file_path, data_only=False)\n    sheet_values = wb_values.active\n    sheet_formulas = wb_formulas.active\n\n    for row_val, row_form in zip(sheet_values.iter_rows(), sheet_formulas.iter_rows()):\n        row = []\n        for cell_val, cell_form in zip(row_val, row_form):\n            value = cell_val.value\n            if cell_form.data_type == 'f':\n                formula = cell_form.value\n                value = f\"{value} (= {formula})\"\n            row.append(value)\n        rows.append(row)\n    parsed = True   \nexcept (KeyError):\n    pass\n\n# Try parsing as .xls\nif not parsed:\n    try:\n        book = xlrd.open_workbook(file_path, formatting_info=True)\n        sheet = book.sheet_by_index(0)\n        for r in range(sheet.nrows):\n            row = []\n            for c in range(sheet.ncols):\n                row.append(sheet.cell_value(r, c))\n            rows.append(row)\n        parsed = True\n    except Exception:\n        pass\n\n# Try parsing as .csv\nif not parsed:\n    try:\n        with open(file_path, newline='', encoding='utf-8') as f:\n            reader = csv.reader(f)\n            for row in reader:\n                rows.append(row)\n        parsed = True\n    except Exception:\n        pass\n\n# Handle unsupported format\nif not parsed:\n    raise ValueError(\"Unsupported or corrupted file format.\")\n\n# Convert to Markdown\nif rows:\n    header = rows[0]\n    md = \"| \" + \" | \".join(str(col) if col is not None else \"\" for col in header) + \" |\\n\"\n    md += \"| \" + \" | \".join(\"---\" for _ in header) + \" |\\n\"\n    for row in rows[1:]:\n        md += \"| \" + \" | \".join(str(cell) if cell is not None else \"\" for cell in row) + \" |\\n\"\n    result = {\"text\": md}\nelse:\n    result = {\"text\": \"no data found\"}\n\n\n",
				"isAsync":false,
				"parameters":{
					"url":"{{ n_tuicc.outputs.url }}"
				}
			},
			"options":{
				"businessHoursConfig":{
					"enabled":false,
					"waitForNextWindow":false
				},
				"cacheConfig":{
					"enabled":false,
					"usagePolicy":"ALWAYS"
				},
				"circuitBreakerConfig":{
					"enabled":false,
					"slidingWindowType":"COUNT_BASED"
				},
				"disableLogging":false,
				"enabledForReExecution":false,
				"hookConfig":{
					"enabled":false,
					"postHooks":[
						
					],
					"preHooks":[
						
					]
				},
				"logConfig":{
					"enabled":false,
					"logPolicies":[
						
					]
				},
				"rateLimitConfig":{
					"enabled":false,
					"unit":"MINUTES",
					"waitForNextWindow":false
				},
				"retryConfig":{
					"backOffFactor":null,
					"captureRetries":false,
					"enabled":false
				},
				"stepError":"MANUAL",
				"telemetryConfig":{
					"enableTelemetry":false,
					"metricConfigs":[
						
					]
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Python script",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"unify_ai",
				"resourceVersion":95,
				"resourceName":"unify_ai_read_unstructured_file",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_96Fww@_2Uq6K-1@error",
			"id":"n_EFNzj",
			"index":0,
			"inputs":{
				"file":"{{ n_GRNPn.outputs.fileDetails }}"
			},
			"skip":false,
			"subTitle":"Unify AI",
			"title":"Read file",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":97,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"n_96Fww@_2Uq6K-1@error",
			"id":"n_fFuk3",
			"index":0,
			"inputs":{
				"result":{
					"text":"{{ n_EFNzj.outputs }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":97,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_2Uq6K-1",
			"id":"n_cQQfi",
			"index":0,
			"inputs":{
				"result":{
					"text":"{{ n_96Fww.outputs.result.text }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		},
		{
			"context":{
				"appName":"stop"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_2Uq6K-1",
			"id":"n_cCEF4",
			"index":0,
			"skip":false,
			"subTitle":"Stop",
			"title":"Stop",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":false,
		"enableRunLogging":false,
		"enableVariableLogging":false,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":95
}