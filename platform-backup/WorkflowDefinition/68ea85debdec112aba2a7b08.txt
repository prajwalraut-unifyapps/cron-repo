{
	"appsUsed":[
		
	],
	"createdTime":1760281938540,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1760543645594,
		"deployedBy":46030,
		"deployedDefinitionId":"68efc39d91b109323d436363",
		"status":"DEPLOYED",
		"version":19,
		"workflowVersion":24
	},
	"edges":[
		{
			"fromNodeId":"n_sVV5k",
			"priority":0,
			"skip":false,
			"toNodeId":"n_gbr3D",
			"type":"next"
		},
		{
			"fromNodeId":"n_gbr3D",
			"priority":0,
			"skip":false,
			"toNodeId":"n_qVSpG",
			"type":"next"
		},
		{
			"fromNodeId":"n_qVSpG",
			"priority":0,
			"skip":false,
			"toNodeId":"n_OSC6k",
			"type":"next"
		},
		{
			"fromNodeId":"n_OSC6k",
			"priority":0,
			"skip":false,
			"toNodeId":"n_I2Ly7",
			"type":"next"
		}
	],
	"grants":{
		"configs":[
			{
				"permissions":[
					"VIEW_RUNS",
					"V"
				],
				"principalType":"GLOBAL"
			}
		]
	},
	"id":"68ea85debdec112aba2a7b08",
	"lastModifiedBy":46030,
	"lcName":"workflow agent | improve with ai",
	"modifiedTime":1760543824573,
	"name":"Workflow Agent | Improve with AI",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":556,
				"resourceName":"callables_from_automation"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_1n3Ji-1",
			"id":"n_sVV5k",
			"index":1,
			"inputs":{
				"result":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"rephrasedUserQuery":{
							"type":"string",
							"title":"Rephrased User Query"
						}
					}
				},
				"setup":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"userQuery":{
							"type":"string",
							"title":"User Query"
						},
						"modelId":{
							"type":"string",
							"title":"Model Id"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger via automation",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":989,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_1n3Ji-1",
			"id":"n_gbr3D",
			"index":2,
			"inputs":{
				"output":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"prompt":{
							"type":"string",
							"title":"Prompt"
						}
					}
				},
				"input":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"userQuery":{
							"type":"string",
							"title":"User Query"
						}
					}
				},
				"code":"def userQuery = binding.hasVariable('userQuery') ? userQuery : \"\"\n\nreturn [\n  \"prompt\": \"\"\"You are an expert prompt rewriter. Your task is to REPHRASE the provided user input to improve clarity, readability, and professional tone—NOT to answer or solve it.\n\nIMPORTANT: Rewrite the input itself, not provide a response to it.\n\nGuidelines:\n1. Preserve structure and numbering: Maintain all steps, sub-steps, sequences (including \"Step 1\", \"Step 2\" format if used), conditional logic, and flow exactly as presented.\n2. Keep technical content unchanged: Do not modify code, keywords, terminology, or placeholders (in double curly brackets).\n3. Use professional writing: Apply complete sentences, active voice, proper grammar, and clear formatting.\n4. Enhance without expanding step count: Improve clarity and flow only—do not add new questions, additional steps, or change scope. If input has 3 steps, output must have exactly 3 steps.\n5. Convert to steps if natural: Use numbered steps for procedural/troubleshooting content when it enhances clarity. Keep prose for conceptual or narrative content.\n6. Complete instructional examples only: If input contains procedural instructions with partial examples (e.g., only HARDWARE scenario in conditional logic like \"if(intent == HARDWARE)\"), add complementary conditional branches (SOFTWARE, NETWORK) to demonstrate full scope. Do NOT expand standalone queries or add content to simple questions.\n7. Complete incomplete conditional logic: If conditional statements show only one branch (e.g., \"if (status == ACTIVE) show dashboard\"), add else conditions or additional status scenarios (INACTIVE, PENDING, etc.) to complete the logic flow.\n8. Preserve question format: If input is a question, keep it as a question. Do not convert questions into instructions or procedural steps unless the question explicitly contains procedural content that needs restructuring.\n9. Expand brief procedural steps: When steps are overly brief or lack detail (e.g., \"Click settings\"), expand them with necessary context or clarity (e.g., \"Click on the 'Settings' option\") while maintaining the same step count.\n10. Output clean text only: No meta-commentary or explanations.\n\nUser Query:\n${userQuery}\n\"\"\".toString()\n]",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"userQuery":"{{ n_sVV5k.outputs.userQuery }}"
				}
			},
			"skip":false,
			"subTitle":"create rephrase query prompt",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1085,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_1n3Ji-1",
			"id":"n_qVSpG",
			"index":3,
			"inputs":{
				"automationId":"684fceac5ae1b66e4745e406",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"modelId":"{{ n_sVV5k.outputs.modelId }}",
					"content":"{{ n_gbr3D.outputs.result.prompt }}",
					"type":"text",
					"response_format":"text",
					"signalProperties":{
						"waitingInstanceId":"{{ __RUN__.outputs.executionId }}",
						"waitingInstanceRunTimeType":"{{ __RUN__.outputs.workflowRunTimeType }}",
						"automationId":"{{ __RUN__.outputs.workflowId }}",
						"nodeId":"n_OSC6k"
					}
				}
			},
			"skip":false,
			"subTitle":"LLM call to rephrase query",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"signals_by_unifyapps",
				"resourceVersion":907,
				"resourceName":"signals_by_unifyapps_wait_for_signal",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_1n3Ji-1",
			"id":"n_OSC6k",
			"index":4,
			"inputs":{
				"duration":"5min",
				"unit":"MINUTES",
				"signal_payload":{
					"type":"object",
					"additionalProperties":false,
					"required":[],
					"properties":{
						"llmResponse":{
							"type":"string",
							"title":"Llm Response"
						}
					}
				}
			},
			"skip":false,
			"subTitle":"waiting for LLM response",
			"title":"Wait for signal",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":1065,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"_1n3Ji-1",
			"id":"n_I2Ly7",
			"index":5,
			"inputs":{
				"result":{
					"rephrasedUserQuery":"{{ n_OSC6k.outputs.signal_payload.llmResponse }}"
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":46030,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":true,
	"tags":[
		
	],
	"version":25
}